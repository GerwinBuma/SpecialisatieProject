ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBFS_1_initVar
  20              		.bss
  21              		.type	USBFS_1_initVar, %object
  22              		.size	USBFS_1_initVar, 1
  23              	USBFS_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBFS_1_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBFS_1_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	USBFS_1_Start, %function
  31              	USBFS_1_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\USBFS_1.c"
   1:Generated_Source\PSoC5/USBFS_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_1.c **** * \file USBFS_1.c
   3:Generated_Source\PSoC5/USBFS_1.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_1.c **** *
   5:Generated_Source\PSoC5/USBFS_1.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_1.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBFS_1.c **** *
   8:Generated_Source\PSoC5/USBFS_1.c **** * Note:
   9:Generated_Source\PSoC5/USBFS_1.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBFS_1.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBFS_1.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBFS_1.c **** *
  13:Generated_Source\PSoC5/USBFS_1.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBFS_1.c **** * \copyright
  15:Generated_Source\PSoC5/USBFS_1.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBFS_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBFS_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBFS_1.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBFS_1.c **** 
  21:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_pvt.h"
  22:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_cydmac.h"
  23:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_hid.h"
  24:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_Dp.h"
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 2


  25:Generated_Source\PSoC5/USBFS_1.c **** 
  26:Generated_Source\PSoC5/USBFS_1.c **** 
  27:Generated_Source\PSoC5/USBFS_1.c **** /***************************************
  28:Generated_Source\PSoC5/USBFS_1.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBFS_1.c **** ***************************************/
  30:Generated_Source\PSoC5/USBFS_1.c **** 
  31:Generated_Source\PSoC5/USBFS_1.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBFS_1.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBFS_1.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBFS_1.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBFS_1.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBFS_1.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBFS_1.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBFS_1.c **** * functions.
  39:Generated_Source\PSoC5/USBFS_1.c **** */
  40:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_initVar = 0u;
  41:Generated_Source\PSoC5/USBFS_1.c **** 
  42:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBFS_1.c ****         static void USBFS_1_InitEpDma(void);
  45:Generated_Source\PSoC5/USBFS_1.c **** 
  46:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 USBFS_1_DmaChan[USBFS_1_MAX_EP] =
  48:Generated_Source\PSoC5/USBFS_1.c ****         {
  49:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  50:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  51:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  52:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  53:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  54:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  55:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  56:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  57:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  58:Generated_Source\PSoC5/USBFS_1.c ****         };        
  59:Generated_Source\PSoC5/USBFS_1.c ****     #else
  60:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaChan[USBFS_1_MAX_EP];
  62:Generated_Source\PSoC5/USBFS_1.c ****         
  63:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaTd[USBFS_1_MAX_EP];
  65:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBFS_1.c **** 
  68:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBFS_1.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpBurstCnt   [USBFS_1_MAX_EP];
  72:Generated_Source\PSoC5/USBFS_1.c ****     
  73:Generated_Source\PSoC5/USBFS_1.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpLastBurstEl[USBFS_1_MAX_EP];
  75:Generated_Source\PSoC5/USBFS_1.c **** 
  76:Generated_Source\PSoC5/USBFS_1.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpBurstCntBackup  [USBFS_1_MAX_EP];
  78:Generated_Source\PSoC5/USBFS_1.c ****     uint32 USBFS_1_DmaEpBufferAddrBackup[USBFS_1_MAX_EP];
  79:Generated_Source\PSoC5/USBFS_1.c ****      
  80:Generated_Source\PSoC5/USBFS_1.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBFS_1.c ****     const uint8 USBFS_1_DmaReqOut[USBFS_1_MAX_EP] =
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 3


  82:Generated_Source\PSoC5/USBFS_1.c ****     {
  83:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  84:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  86:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  87:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  88:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  89:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  90:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  91:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  92:Generated_Source\PSoC5/USBFS_1.c ****     };
  93:Generated_Source\PSoC5/USBFS_1.c **** 
  94:Generated_Source\PSoC5/USBFS_1.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBFS_1.c ****     const uint8 USBFS_1_DmaBurstEndOut[USBFS_1_MAX_EP] =
  96:Generated_Source\PSoC5/USBFS_1.c ****     {
  97:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  98:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBFS_1.c ****     };
 107:Generated_Source\PSoC5/USBFS_1.c ****     
 108:Generated_Source\PSoC5/USBFS_1.c **** #else
 109:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBFS_1.c ****         static uint8 clearInDataRdyStatus = USBFS_1_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaNextTd[USBFS_1_MAX_EP];
 112:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 USBFS_1_epX_TD_TERMOUT_EN[USBFS_1_MAX_EP] =
 113:Generated_Source\PSoC5/USBFS_1.c ****         {
 114:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 115:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 116:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 117:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 118:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 119:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 120:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 121:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 122:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 123:Generated_Source\PSoC5/USBFS_1.c ****         };
 124:Generated_Source\PSoC5/USBFS_1.c **** 
 125:Generated_Source\PSoC5/USBFS_1.c ****         volatile uint16 USBFS_1_inLength[USBFS_1_MAX_EP];
 126:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 *USBFS_1_inDataPointer[USBFS_1_MAX_EP];
 127:Generated_Source\PSoC5/USBFS_1.c ****         volatile uint8 USBFS_1_inBufFull[USBFS_1_MAX_EP];
 128:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBFS_1.c **** 
 132:Generated_Source\PSoC5/USBFS_1.c **** 
 133:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Start
 135:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBFS_1.c **** *
 137:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBFS_1.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 4


 139:Generated_Source\PSoC5/USBFS_1.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBFS_1.c **** *   operation.
 141:Generated_Source\PSoC5/USBFS_1.c **** *
 142:Generated_Source\PSoC5/USBFS_1.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBFS_1.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBFS_1.c **** *
 145:Generated_Source\PSoC5/USBFS_1.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBFS_1.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBFS_1.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBFS_1.c **** *
 149:Generated_Source\PSoC5/USBFS_1.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBFS_1.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBFS_1.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBFS_1.c **** *
 153:Generated_Source\PSoC5/USBFS_1.c **** *  \param device
 154:Generated_Source\PSoC5/USBFS_1.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBFS_1.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBFS_1.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBFS_1.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBFS_1.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBFS_1.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBFS_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBFS_1.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBFS_1.c **** *   following list.
 163:Generated_Source\PSoC5/USBFS_1.c **** *
 164:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBFS_1.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBFS_1.c **** *
 167:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBFS_1.c **** *
 170:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBFS_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBFS_1.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 177:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_initVar
 178:Generated_Source\PSoC5/USBFS_1.c **** *
 179:Generated_Source\PSoC5/USBFS_1.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBFS_1.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBFS_1.c **** *
 182:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 183:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 184:Generated_Source\PSoC5/USBFS_1.c **** *
 185:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBFS_1.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 0A46     		mov	r2, r1
  48 000a FB71     		strb	r3, [r7, #7]
  49 000c 1346     		mov	r3, r2
  50 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USBFS_1.c ****     if (0u == USBFS_1_initVar)
  51              		.loc 1 188 0
  52 0010 094B     		ldr	r3, .L3
  53 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0014 002B     		cmp	r3, #0
  55 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USBFS_1.c ****     {
 190:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_Init();
  56              		.loc 1 190 0
  57 0018 FFF7FEFF 		bl	USBFS_1_Init
 191:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_initVar = 1u;
  58              		.loc 1 191 0
  59 001c 064B     		ldr	r3, .L3
  60 001e 0122     		movs	r2, #1
  61 0020 1A70     		strb	r2, [r3]
  62              	.L2:
 192:Generated_Source\PSoC5/USBFS_1.c ****     }
 193:Generated_Source\PSoC5/USBFS_1.c **** 
 194:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_InitComponent(device, mode);
  63              		.loc 1 194 0
  64 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  65 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0026 1146     		mov	r1, r2
  67 0028 1846     		mov	r0, r3
  68 002a FFF7FEFF 		bl	USBFS_1_InitComponent
 195:Generated_Source\PSoC5/USBFS_1.c **** }
  69              		.loc 1 195 0
  70 002e 00BF     		nop
  71 0030 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0032 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0034 80BD     		pop	{r7, pc}
  77              	.L4:
  78 0036 00BF     		.align	2
  79              	.L3:
  80 0038 00000000 		.word	USBFS_1_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBFS_1_Start, .-USBFS_1_Start
  84              		.section	.text.USBFS_1_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USBFS_1_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBFS_1_Init, %function
  90              	USBFS_1_Init:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 6


  91              	.LFB1:
 196:Generated_Source\PSoC5/USBFS_1.c **** 
 197:Generated_Source\PSoC5/USBFS_1.c **** 
 198:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Init
 200:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBFS_1.c **** *
 202:Generated_Source\PSoC5/USBFS_1.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBFS_1.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBFS_1.c **** * USBFS_1_Init() because the USBFS_1_Start() routine calls
 205:Generated_Source\PSoC5/USBFS_1.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBFS_1.c **** *
 207:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 208:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 209:Generated_Source\PSoC5/USBFS_1.c **** *
 210:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Init(void) 
 212:Generated_Source\PSoC5/USBFS_1.c **** {
  92              		.loc 1 212 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USB_CLK_EN_REG = USBFS_1_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBFS_1.c **** 
 217:Generated_Source\PSoC5/USBFS_1.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBFS_1.c ****     * USBFS_1_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBFS_1.c ****     */
 220:Generated_Source\PSoC5/USBFS_1.c **** 
 221:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= ~ (uint32) USBFS_1_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBFS_1.c **** 
 224:Generated_Source\PSoC5/USBFS_1.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_BUS_RST_CNT_REG = USBFS_1_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBFS_1.c **** 
 227:Generated_Source\PSoC5/USBFS_1.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBFS_1.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBFS_1.c ****     */
 230:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG = USBFS_1_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBFS_1.c **** 
 232:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG |= USBFS_1_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBFS_1.c **** 
 235:Generated_Source\PSoC5/USBFS_1.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 7


 240:Generated_Source\PSoC5/USBFS_1.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = USBFS_1_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBFS_1.c **** 
 243:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_LVL_SEL_REG = USBFS_1_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBFS_1.c **** 
 246:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG = USBFS_1_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBFS_1.c **** 
 249:Generated_Source\PSoC5/USBFS_1.c **** #else
 250:Generated_Source\PSoC5/USBFS_1.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 250 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c FB71     		strb	r3, [r7, #7]
 251:Generated_Source\PSoC5/USBFS_1.c **** 
 252:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBFS_1.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBFS_1.c **** 
 256:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_ACT_CFG_REG |= USBFS_1_PM_ACT_EN_FSUSB;
 108              		.loc 1 257 0
 109 000e 484A     		ldr	r2, .L6
 110 0010 474B     		ldr	r3, .L6
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_STBY_CFG_REG |= USBFS_1_PM_STBY_EN_FSUSB;
 116              		.loc 1 259 0
 117 001e 454A     		ldr	r2, .L6+4
 118 0020 444B     		ldr	r3, .L6+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBFS_1.c **** 
 261:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USB_CLK_EN_REG = USBFS_1_USB_CLK_ENABLE;
 124              		.loc 1 262 0
 125 002e 424B     		ldr	r3, .L6+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USBFS_1.c **** 
 264:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = USBFS_1_CR1_ENABLE_LOCK;
 128              		.loc 1 264 0
 129 0034 414B     		ldr	r3, .L6+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USBFS_1.c **** 
 266:Generated_Source\PSoC5/USBFS_1.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR0_REG &= (uint8) ~USBFS_1_USBIO_CR0_TEN;
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 8


 132              		.loc 1 268 0
 133 003a 414A     		ldr	r2, .L6+16
 134 003c 404B     		ldr	r3, .L6+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 140              		.loc 1 269 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBFS_1.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBFS_1.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBFS_1.c ****     */
 274:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG &= (uint8) ~(USBFS_1_PM_USB_CR0_PD_N |
 143              		.loc 1 274 0
 144 0050 3C4A     		ldr	r2, .L6+20
 145 0052 3C4B     		ldr	r3, .L6+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USBFS_1.c ****                                                  USBFS_1_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBFS_1.c **** 
 277:Generated_Source\PSoC5/USBFS_1.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= (uint8) ~USBFS_1_USBIO_CR1_IOMODE;
 151              		.loc 1 278 0
 152 0060 394A     		ldr	r2, .L6+24
 153 0062 394B     		ldr	r3, .L6+24
 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBFS_1.c **** 
 280:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_REF_EN;
 159              		.loc 1 281 0
 160 0070 344A     		ldr	r2, .L6+20
 161 0072 344B     		ldr	r3, .L6+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USBFS_1.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_REG_STABILITY_1US);
 167              		.loc 1 283 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USBFS_1.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_VREF_RESTORE);
 170              		.loc 1 285 0
 171 0086 2820     		movs	r0, #40
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 9


 172 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DM_INP_DIS_REG &= (uint8) ~USBFS_1_DM_MASK;
 173              		.loc 1 287 0
 174 008c 2F4A     		ldr	r2, .L6+28
 175 008e 2F4B     		ldr	r3, .L6+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DP_INP_DIS_REG &= (uint8) ~USBFS_1_DP_MASK;
 181              		.loc 1 288 0
 182 009c 2B4A     		ldr	r2, .L6+28
 183 009e 2B4B     		ldr	r3, .L6+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USBFS_1.c **** 
 290:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_PD_N;
 189              		.loc 1 291 0
 190 00ac 254A     		ldr	r2, .L6+20
 191 00ae 254B     		ldr	r3, .L6+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_PD_PULLUP_N_ENABLE);
 197              		.loc 1 292 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USBFS_1.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 294 0
 201 00c2 204A     		ldr	r2, .L6+20
 202 00c4 1F4B     		ldr	r3, .L6+20
 203 00c6 1B78     		ldrb	r3, [r3]
 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USBFS_1.c **** 
 296:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBFS_1.c ****     CY_SET_REG8(USBFS_1_ARB_RW1_WA_PTR,     0u);
 208              		.loc 1 297 0
 209 00d2 1F4B     		ldr	r3, .L6+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USBFS_1.c ****     CY_SET_REG8(USBFS_1_ARB_RW1_WA_MSB_PTR, 0u);
 212              		.loc 1 298 0
 213 00d8 1E4B     		ldr	r3, .L6+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 10


 299:Generated_Source\PSoC5/USBFS_1.c **** 
 300:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBFS_1.c ****     {
 304:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBFS_1.c **** 
 306:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBFS_1.c ****     }
 310:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBFS_1.c **** 
 312:Generated_Source\PSoC5/USBFS_1.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 312 0
 217 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 00e0 1846     		mov	r0, r3
 219 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBFS_1.c **** 
 315:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_HI_VECT_NUM,  USBFS_1_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_HI_VECT_NUM, &USBFS_1_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBFS_1.c **** 
 321:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_LO_VECT_NUM,  USBFS_1_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_LO_VECT_NUM, &USBFS_1_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBFS_1.c **** 
 325:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_MED_VECT_NUM,  USBFS_1_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_MED_VECT_NUM, &USBFS_1_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBFS_1.c **** 
 329:Generated_Source\PSoC5/USBFS_1.c **** #else
 330:Generated_Source\PSoC5/USBFS_1.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority(USBFS_1_BUS_RESET_VECT_NUM, USBFS_1_BUS_RESET_PRIOR);
 220              		.loc 1 331 0
 221 00e6 0721     		movs	r1, #7
 222 00e8 1720     		movs	r0, #23
 223 00ea FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_BUS_RESET_VECT_NUM,   &USBFS_1_BUS_RESET_ISR);
 224              		.loc 1 332 0
 225 00ee 1A49     		ldr	r1, .L6+40
 226 00f0 1720     		movs	r0, #23
 227 00f2 FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USBFS_1.c **** 
 334:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority(USBFS_1_EP_0_VECT_NUM, USBFS_1_EP_0_PRIOR);
 228              		.loc 1 335 0
 229 00f6 0721     		movs	r1, #7
 230 00f8 1820     		movs	r0, #24
 231 00fa FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_EP_0_VECT_NUM,   &USBFS_1_EP_0_ISR);
 232              		.loc 1 336 0
 233 00fe 1749     		ldr	r1, .L6+44
 234 0100 1820     		movs	r0, #24
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 11


 235 0102 FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USBFS_1.c **** 
 338:Generated_Source\PSoC5/USBFS_1.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_SOF_VECT_NUM,  USBFS_1_SOF_PRIOR);
 341:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_SOF_VECT_NUM, &USBFS_1_SOF_ISR);
 342:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBFS_1.c **** 
 344:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_1_VECT_NUM,  USBFS_1_EP_1_PRIOR);
 236              		.loc 1 346 0
 237 0106 0721     		movs	r1, #7
 238 0108 0320     		movs	r0, #3
 239 010a FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_1_VECT_NUM,  &USBFS_1_EP_1_ISR);
 240              		.loc 1 347 0
 241 010e 1449     		ldr	r1, .L6+48
 242 0110 0320     		movs	r0, #3
 243 0112 FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBFS_1.c **** 
 350:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_2_VECT_NUM,  USBFS_1_EP_2_PRIOR);
 353:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_2_VECT_NUM, &USBFS_1_EP_2_ISR);
 354:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBFS_1.c **** 
 356:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_3_VECT_NUM,  USBFS_1_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_3_VECT_NUM, &USBFS_1_EP_3_ISR);
 360:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBFS_1.c **** 
 362:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_4_VECT_NUM,  USBFS_1_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_4_VECT_NUM, &USBFS_1_EP_4_ISR);
 366:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBFS_1.c **** 
 368:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_5_VECT_NUM,  USBFS_1_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_5_VECT_NUM, &USBFS_1_EP_5_ISR);
 372:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBFS_1.c **** 
 374:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_6_VECT_NUM,  USBFS_1_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_6_VECT_NUM, &USBFS_1_EP_6_ISR);
 378:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBFS_1.c **** 
 380:Generated_Source\PSoC5/USBFS_1.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_7_VECT_NUM,  USBFS_1_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_7_VECT_NUM, &USBFS_1_EP_7_ISR);
 384:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 12


 385:Generated_Source\PSoC5/USBFS_1.c **** 
 386:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_8_VECT_NUM,  USBFS_1_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_8_VECT_NUM, &USBFS_1_EP_8_ISR);
 390:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBFS_1.c **** 
 392:Generated_Source\PSoC5/USBFS_1.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_ARB_VECT_NUM,  USBFS_1_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_ARB_VECT_NUM, &USBFS_1_ARB_ISR);
 396:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBFS_1.c **** 
 399:Generated_Source\PSoC5/USBFS_1.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_DP_INTC_VECT_NUM,  USBFS_1_DP_INTC_PRIORITY);
 244              		.loc 1 401 0
 245 0116 0721     		movs	r1, #7
 246 0118 0C20     		movs	r0, #12
 247 011a FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_DP_INTC_VECT_NUM, &USBFS_1_DP_ISR);
 248              		.loc 1 402 0
 249 011e 1149     		ldr	r1, .L6+52
 250 0120 0C20     		movs	r0, #12
 251 0122 FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBFS_1.c **** 
 405:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_InitEpDma();
 408:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBFS_1.c **** }
 252              		.loc 1 409 0
 253 0126 00BF     		nop
 254 0128 0837     		adds	r7, r7, #8
 255              		.cfi_def_cfa_offset 8
 256 012a BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 012c 80BD     		pop	{r7, pc}
 260              	.L7:
 261 012e 00BF     		.align	2
 262              	.L6:
 263 0130 A5430040 		.word	1073759141
 264 0134 B5430040 		.word	1073759157
 265 0138 9D600040 		.word	1073766557
 266 013c 09600040 		.word	1073766409
 267 0140 10600040 		.word	1073766416
 268 0144 94430040 		.word	1073759124
 269 0148 12600040 		.word	1073766418
 270 014c F8510040 		.word	1073762808
 271 0150 84600040 		.word	1073766532
 272 0154 85600040 		.word	1073766533
 273 0158 00000000 		.word	USBFS_1_BUS_RESET_ISR
 274 015c 00000000 		.word	USBFS_1_EP_0_ISR
 275 0160 00000000 		.word	USBFS_1_EP_1_ISR
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 13


 276 0164 00000000 		.word	USBFS_1_DP_ISR
 277              		.cfi_endproc
 278              	.LFE1:
 279              		.size	USBFS_1_Init, .-USBFS_1_Init
 280              		.section	.text.USBFS_1_InitComponent,"ax",%progbits
 281              		.align	2
 282              		.global	USBFS_1_InitComponent
 283              		.thumb
 284              		.thumb_func
 285              		.type	USBFS_1_InitComponent, %function
 286              	USBFS_1_InitComponent:
 287              	.LFB2:
 410:Generated_Source\PSoC5/USBFS_1.c **** 
 411:Generated_Source\PSoC5/USBFS_1.c **** 
 412:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_InitComponent
 414:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBFS_1.c **** *
 416:Generated_Source\PSoC5/USBFS_1.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBFS_1.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBFS_1.c **** *
 419:Generated_Source\PSoC5/USBFS_1.c **** * \param device:
 420:Generated_Source\PSoC5/USBFS_1.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBFS_1.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBFS_1.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBFS_1.c **** *   field.
 424:Generated_Source\PSoC5/USBFS_1.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBFS_1.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBFS_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBFS_1.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBFS_1.c **** *   following list.
 429:Generated_Source\PSoC5/USBFS_1.c **** *
 430:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBFS_1.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBFS_1.c **** *
 433:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBFS_1.c **** *
 436:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBFS_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBFS_1.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBFS_1.c **** *
 443:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 444:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_device
 445:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_transferState
 446:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configuration
 447:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceStatus
 448:Generated_Source\PSoC5/USBFS_1.c **** *
 449:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBFS_1.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBFS_1.c **** *
 454:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_lastPacketSize - Initialized to 0;
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 14


 455:Generated_Source\PSoC5/USBFS_1.c **** *
 456:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 457:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 458:Generated_Source\PSoC5/USBFS_1.c **** *
 459:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBFS_1.c **** {
 288              		.loc 1 461 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 82B0     		sub	sp, sp, #8
 297              		.cfi_def_cfa_offset 16
 298 0004 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 300 0006 0346     		mov	r3, r0
 301 0008 0A46     		mov	r2, r1
 302 000a FB71     		strb	r3, [r7, #7]
 303 000c 1346     		mov	r3, r2
 304 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBFS_1.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBFS_1.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBFS_1.c ****     */
 466:Generated_Source\PSoC5/USBFS_1.c **** #if defined(USBFS_1_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBFS_1.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBFS_1.c **** 
 469:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBFS_1.c ****     {
 471:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_hidProtocol[i] = USBFS_1_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBFS_1.c ****     }
 473:Generated_Source\PSoC5/USBFS_1.c **** #endif /* USBFS_1_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBFS_1.c **** 
 475:Generated_Source\PSoC5/USBFS_1.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_device = device;
 305              		.loc 1 476 0
 306 0010 294A     		ldr	r2, .L14
 307 0012 FB79     		ldrb	r3, [r7, #7]
 308 0014 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USBFS_1.c **** 
 478:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_transferState   = USBFS_1_TRANS_STATE_IDLE;
 309              		.loc 1 479 0
 310 0016 294B     		ldr	r3, .L14+4
 311 0018 0022     		movs	r2, #0
 312 001a 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 313              		.loc 1 480 0
 314 001c 284B     		ldr	r3, .L14+8
 315 001e 0022     		movs	r2, #0
 316 0020 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 317              		.loc 1 481 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 15


 318 0022 284B     		ldr	r3, .L14+12
 319 0024 0022     		movs	r2, #0
 320 0026 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 321              		.loc 1 482 0
 322 0028 274B     		ldr	r3, .L14+16
 323 002a 0022     		movs	r2, #0
 324 002c 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 325              		.loc 1 483 0
 326 002e 274B     		ldr	r3, .L14+20
 327 0030 0022     		movs	r2, #0
 328 0032 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 329              		.loc 1 484 0
 330 0034 264B     		ldr	r3, .L14+24
 331 0036 0022     		movs	r2, #0
 332 0038 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_lastPacketSize  = 0u;
 333              		.loc 1 485 0
 334 003a 264B     		ldr	r3, .L14+28
 335 003c 0022     		movs	r2, #0
 336 003e 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USBFS_1.c **** 
 487:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBFS_1.c **** #else
 493:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_BUS_RESET_VECT_NUM);
 337              		.loc 1 493 0
 338 0040 254B     		ldr	r3, .L14+32
 339 0042 4FF40002 		mov	r2, #8388608
 340 0046 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_EP_0_VECT_NUM);
 341              		.loc 1 494 0
 342 0048 234B     		ldr	r3, .L14+32
 343 004a 4FF08072 		mov	r2, #16777216
 344 004e 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBFS_1.c **** 
 496:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_SOF_VECT_NUM);
 498:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBFS_1.c **** 
 500:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_1_VECT_NUM);
 345              		.loc 1 501 0
 346 0050 214B     		ldr	r3, .L14+32
 347 0052 0822     		movs	r2, #8
 348 0054 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBFS_1.c **** 
 504:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_2_VECT_NUM);
 506:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 16


 508:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBFS_1.c **** 
 512:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBFS_1.c **** 
 516:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBFS_1.c **** 
 520:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* USBFS_1_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBFS_1.c **** 
 524:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBFS_1.c **** 
 528:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBFS_1.c **** 
 533:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_ARB_INT_EN_REG = USBFS_1_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBFS_1.c **** 
 537:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBFS_1.c **** #endif   /* (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBFS_1.c **** 
 542:Generated_Source\PSoC5/USBFS_1.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_ARB_CFG_REG = USBFS_1_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBFS_1.c **** 
 547:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBFS_1.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBFS_1.c **** 
 551:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_1.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBFS_1.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_1_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBFS_1.c **** 
 557:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBFS_1.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBFS_1.c ****         #else
 562:Generated_Source\PSoC5/USBFS_1.c ****             #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBFS_1.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP_DMA_Done_isr_StartEx(&USBFS_1_EP_DMA_DONE_ISR);
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 17


 565:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBFS_1.c **** 
 572:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBFS_1.c ****     switch(mode)
 349              		.loc 1 573 0
 350 0056 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 351 0058 002B     		cmp	r3, #0
 352 005a 02D0     		beq	.L10
 353 005c 012B     		cmp	r3, #1
 354 005e 09D0     		beq	.L11
 355 0060 11E0     		b	.L13
 356              	.L10:
 574:Generated_Source\PSoC5/USBFS_1.c ****     {
 575:Generated_Source\PSoC5/USBFS_1.c ****     case USBFS_1_3V_OPERATION:
 576:Generated_Source\PSoC5/USBFS_1.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG &= (uint8) ~USBFS_1_CR1_REG_ENABLE;
 357              		.loc 1 577 0
 358 0062 1E4A     		ldr	r2, .L14+36
 359 0064 1D4B     		ldr	r3, .L14+36
 360 0066 1B78     		ldrb	r3, [r3]
 361 0068 DBB2     		uxtb	r3, r3
 362 006a 23F00103 		bic	r3, r3, #1
 363 006e DBB2     		uxtb	r3, r3
 364 0070 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBFS_1.c ****         break;
 365              		.loc 1 578 0
 366 0072 11E0     		b	.L12
 367              	.L11:
 579:Generated_Source\PSoC5/USBFS_1.c **** 
 580:Generated_Source\PSoC5/USBFS_1.c ****     case USBFS_1_5V_OPERATION:
 581:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG |= (uint8)  USBFS_1_CR1_REG_ENABLE;
 368              		.loc 1 582 0
 369 0074 194A     		ldr	r2, .L14+36
 370 0076 194B     		ldr	r3, .L14+36
 371 0078 1B78     		ldrb	r3, [r3]
 372 007a DBB2     		uxtb	r3, r3
 373 007c 43F00103 		orr	r3, r3, #1
 374 0080 DBB2     		uxtb	r3, r3
 375 0082 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBFS_1.c ****         break;
 376              		.loc 1 583 0
 377 0084 08E0     		b	.L12
 378              	.L13:
 584:Generated_Source\PSoC5/USBFS_1.c **** 
 585:Generated_Source\PSoC5/USBFS_1.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_VDDD_MV < USBFS_1_3500MV)
 587:Generated_Source\PSoC5/USBFS_1.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG &= (uint8) ~USBFS_1_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBFS_1.c ****     #else
 590:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG |= (uint8)  USBFS_1_CR1_REG_ENABLE;
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 18


 379              		.loc 1 591 0
 380 0086 154A     		ldr	r2, .L14+36
 381 0088 144B     		ldr	r3, .L14+36
 382 008a 1B78     		ldrb	r3, [r3]
 383 008c DBB2     		uxtb	r3, r3
 384 008e 43F00103 		orr	r3, r3, #1
 385 0092 DBB2     		uxtb	r3, r3
 386 0094 1370     		strb	r3, [r2]
 592:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_VDDD_MV < USBFS_1_3500MV) */
 593:Generated_Source\PSoC5/USBFS_1.c ****         break;
 387              		.loc 1 593 0
 388 0096 00BF     		nop
 389              	.L12:
 594:Generated_Source\PSoC5/USBFS_1.c ****     }
 595:Generated_Source\PSoC5/USBFS_1.c **** 
 596:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG &= (uint32) ~USBFS_1_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBFS_1.c **** 
 600:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CNT_REG = USBFS_1_CLEAR_REG;
 602:Generated_Source\PSoC5/USBFS_1.c **** 
 603:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBFS_1.c **** 
 606:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != USBFS_1_GetBOSPtr())
 608:Generated_Source\PSoC5/USBFS_1.c ****         {
 609:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBFS_1.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBFS_1.c ****             */
 612:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_LPM_CTRL_REG = (USBFS_1_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBFS_1.c ****                                              USBFS_1_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBFS_1.c ****         }
 615:Generated_Source\PSoC5/USBFS_1.c ****         else
 616:Generated_Source\PSoC5/USBFS_1.c ****         {
 617:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_LPM_CTRL_REG &= (uint32) ~USBFS_1_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBFS_1.c ****         }
 620:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBFS_1.c **** 
 622:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBFS_1.c **** 
 625:Generated_Source\PSoC5/USBFS_1.c **** #else
 626:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_STALL_IN_OUT;
 390              		.loc 1 627 0
 391 0098 114B     		ldr	r3, .L14+40
 392 009a 0322     		movs	r2, #3
 393 009c 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBFS_1.c **** 
 629:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 394              		.loc 1 630 0
 395 009e 114B     		ldr	r3, .L14+44
 396 00a0 8022     		movs	r2, #128
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 19


 397 00a2 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayCycles(USBFS_1_WAIT_CR0_REG_STABILITY);
 398              		.loc 1 631 0
 399 00a4 0120     		movs	r0, #1
 400 00a6 FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBFS_1.c **** 
 634:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG = USBFS_1_USBIO_CR1_USBPUEN;
 401              		.loc 1 635 0
 402 00aa 0F4B     		ldr	r3, .L14+48
 403 00ac 0422     		movs	r2, #4
 404 00ae 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USBFS_1.c **** }
 405              		.loc 1 636 0
 406 00b0 00BF     		nop
 407 00b2 0837     		adds	r7, r7, #8
 408              		.cfi_def_cfa_offset 8
 409 00b4 BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 00b6 80BD     		pop	{r7, pc}
 413              	.L15:
 414              		.align	2
 415              	.L14:
 416 00b8 00000000 		.word	USBFS_1_device
 417 00bc 00000000 		.word	USBFS_1_transferState
 418 00c0 00000000 		.word	USBFS_1_configurationChanged
 419 00c4 00000000 		.word	USBFS_1_configuration
 420 00c8 00000000 		.word	USBFS_1_interfaceNumber
 421 00cc 00000000 		.word	USBFS_1_deviceAddress
 422 00d0 00000000 		.word	USBFS_1_deviceStatus
 423 00d4 00000000 		.word	USBFS_1_lastPacketSize
 424 00d8 00E100E0 		.word	-536813312
 425 00dc 09600040 		.word	1073766409
 426 00e0 28600040 		.word	1073766440
 427 00e4 08600040 		.word	1073766408
 428 00e8 12600040 		.word	1073766418
 429              		.cfi_endproc
 430              	.LFE2:
 431              		.size	USBFS_1_InitComponent, .-USBFS_1_InitComponent
 432              		.section	.text.USBFS_1_ReInitComponent,"ax",%progbits
 433              		.align	2
 434              		.global	USBFS_1_ReInitComponent
 435              		.thumb
 436              		.thumb_func
 437              		.type	USBFS_1_ReInitComponent, %function
 438              	USBFS_1_ReInitComponent:
 439              	.LFB3:
 637:Generated_Source\PSoC5/USBFS_1.c **** 
 638:Generated_Source\PSoC5/USBFS_1.c **** 
 639:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReInitComponent
 641:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBFS_1.c **** *
 643:Generated_Source\PSoC5/USBFS_1.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBFS_1.c **** *  intend to be called from the Reset interrupt.
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 20


 645:Generated_Source\PSoC5/USBFS_1.c **** *
 646:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 647:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBFS_1.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBFS_1.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBFS_1.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBFS_1.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBFS_1.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBFS_1.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBFS_1.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBFS_1.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBFS_1.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBFS_1.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBFS_1.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBFS_1.c **** *
 667:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 668:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 669:Generated_Source\PSoC5/USBFS_1.c **** *
 670:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBFS_1.c **** {
 440              		.loc 1 672 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 7, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBFS_1.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBFS_1.c ****     */
 676:Generated_Source\PSoC5/USBFS_1.c **** #if defined(USBFS_1_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBFS_1.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBFS_1.c **** 
 679:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBFS_1.c ****     {
 681:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_hidProtocol[i] = USBFS_1_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBFS_1.c ****     }
 683:Generated_Source\PSoC5/USBFS_1.c **** #endif /* USBFS_1_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBFS_1.c **** 
 685:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_transferState   = USBFS_1_TRANS_STATE_IDLE;
 450              		.loc 1 686 0
 451 0004 0F4B     		ldr	r3, .L17
 452 0006 0022     		movs	r2, #0
 453 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 21


 454              		.loc 1 687 0
 455 000a 0F4B     		ldr	r3, .L17+4
 456 000c 0022     		movs	r2, #0
 457 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 458              		.loc 1 688 0
 459 0010 0E4B     		ldr	r3, .L17+8
 460 0012 0022     		movs	r2, #0
 461 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 462              		.loc 1 689 0
 463 0016 0E4B     		ldr	r3, .L17+12
 464 0018 0022     		movs	r2, #0
 465 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 466              		.loc 1 690 0
 467 001c 0D4B     		ldr	r3, .L17+16
 468 001e 0022     		movs	r2, #0
 469 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 470              		.loc 1 691 0
 471 0022 0D4B     		ldr	r3, .L17+20
 472 0024 0022     		movs	r2, #0
 473 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_lastPacketSize  = 0u;
 474              		.loc 1 692 0
 475 0028 0C4B     		ldr	r3, .L17+24
 476 002a 0022     		movs	r2, #0
 477 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USBFS_1.c **** 
 694:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBFS_1.c **** #else
 698:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_STALL_IN_OUT;
 478              		.loc 1 699 0
 479 002e 0C4B     		ldr	r3, .L17+28
 480 0030 0322     		movs	r2, #3
 481 0032 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBFS_1.c **** 
 702:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 482              		.loc 1 703 0
 483 0034 0B4B     		ldr	r3, .L17+32
 484 0036 8022     		movs	r2, #128
 485 0038 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USBFS_1.c **** }
 486              		.loc 1 704 0
 487 003a 00BF     		nop
 488 003c BD46     		mov	sp, r7
 489              		.cfi_def_cfa_register 13
 490              		@ sp needed
 491 003e 80BC     		pop	{r7}
 492              		.cfi_restore 7
 493              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 22


 494 0040 7047     		bx	lr
 495              	.L18:
 496 0042 00BF     		.align	2
 497              	.L17:
 498 0044 00000000 		.word	USBFS_1_transferState
 499 0048 00000000 		.word	USBFS_1_configurationChanged
 500 004c 00000000 		.word	USBFS_1_configuration
 501 0050 00000000 		.word	USBFS_1_interfaceNumber
 502 0054 00000000 		.word	USBFS_1_deviceAddress
 503 0058 00000000 		.word	USBFS_1_deviceStatus
 504 005c 00000000 		.word	USBFS_1_lastPacketSize
 505 0060 28600040 		.word	1073766440
 506 0064 08600040 		.word	1073766408
 507              		.cfi_endproc
 508              	.LFE3:
 509              		.size	USBFS_1_ReInitComponent, .-USBFS_1_ReInitComponent
 510              		.section	.text.USBFS_1_Stop,"ax",%progbits
 511              		.align	2
 512              		.global	USBFS_1_Stop
 513              		.thumb
 514              		.thumb_func
 515              		.type	USBFS_1_Stop, %function
 516              	USBFS_1_Stop:
 517              	.LFB4:
 705:Generated_Source\PSoC5/USBFS_1.c **** 
 706:Generated_Source\PSoC5/USBFS_1.c **** 
 707:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Stop
 709:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBFS_1.c **** *
 711:Generated_Source\PSoC5/USBFS_1.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBFS_1.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBFS_1.c **** *
 714:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 715:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configuration
 716:Generated_Source\PSoC5/USBFS_1.c **** *
 717:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBFS_1.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBFS_1.c **** *
 722:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceStatus
 723:Generated_Source\PSoC5/USBFS_1.c **** *
 724:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configurationChanged
 725:Generated_Source\PSoC5/USBFS_1.c **** *
 726:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBFS_1.c **** *
 728:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Stop(void) 
 730:Generated_Source\PSoC5/USBFS_1.c **** {
 518              		.loc 1 730 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 23


 525              		.cfi_offset 14, -4
 526 0002 82B0     		sub	sp, sp, #8
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USBFS_1.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBFS_1.c **** 
 733:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBFS_1.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_Stop_DMA(USBFS_1_MAX_EP);
 736:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBFS_1.c **** 
 738:Generated_Source\PSoC5/USBFS_1.c ****     enableInterrupts = CyEnterCriticalSection();
 530              		.loc 1 738 0
 531 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 532 000a 0346     		mov	r3, r0
 533 000c FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USBFS_1.c **** 
 740:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG &= (uint8) ~USBFS_1_CR0_ENABLE;
 534              		.loc 1 741 0
 535 000e 2D4A     		ldr	r2, .L20
 536 0010 2C4B     		ldr	r3, .L20
 537 0012 1B78     		ldrb	r3, [r3]
 538 0014 DBB2     		uxtb	r3, r3
 539 0016 03F07F03 		and	r3, r3, #127
 540 001a DBB2     		uxtb	r3, r3
 541 001c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBFS_1.c **** 
 743:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= (uint8) ~ USBFS_1_USBIO_CR1_USBPUEN;
 542              		.loc 1 744 0
 543 001e 2A4A     		ldr	r2, .L20+4
 544 0020 294B     		ldr	r3, .L20+4
 545 0022 1B78     		ldrb	r3, [r3]
 546 0024 DBB2     		uxtb	r3, r3
 547 0026 23F00403 		bic	r3, r3, #4
 548 002a DBB2     		uxtb	r3, r3
 549 002c 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBFS_1.c **** 
 746:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBFS_1.c **** #else
 750:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_ACT_CFG_REG  &= (uint8) ~USBFS_1_PM_ACT_EN_FSUSB;
 550              		.loc 1 751 0
 551 002e 274A     		ldr	r2, .L20+8
 552 0030 264B     		ldr	r3, .L20+8
 553 0032 1B78     		ldrb	r3, [r3]
 554 0034 DBB2     		uxtb	r3, r3
 555 0036 23F00103 		bic	r3, r3, #1
 556 003a DBB2     		uxtb	r3, r3
 557 003c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_STBY_CFG_REG &= (uint8) ~USBFS_1_PM_STBY_EN_FSUSB;
 558              		.loc 1 752 0
 559 003e 244A     		ldr	r2, .L20+12
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 24


 560 0040 234B     		ldr	r3, .L20+12
 561 0042 1B78     		ldrb	r3, [r3]
 562 0044 DBB2     		uxtb	r3, r3
 563 0046 23F00103 		bic	r3, r3, #1
 564 004a DBB2     		uxtb	r3, r3
 565 004c 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBFS_1.c **** 
 754:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBFS_1.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DM_INP_DIS_REG |= (uint8) USBFS_1_DM_MASK;
 566              		.loc 1 756 0
 567 004e 214A     		ldr	r2, .L20+16
 568 0050 204B     		ldr	r3, .L20+16
 569 0052 1B78     		ldrb	r3, [r3]
 570 0054 DBB2     		uxtb	r3, r3
 571 0056 63F07F03 		orn	r3, r3, #127
 572 005a DBB2     		uxtb	r3, r3
 573 005c 1370     		strb	r3, [r2]
 757:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DP_INP_DIS_REG |= (uint8) USBFS_1_DP_MASK;
 574              		.loc 1 757 0
 575 005e 1D4A     		ldr	r2, .L20+16
 576 0060 1C4B     		ldr	r3, .L20+16
 577 0062 1B78     		ldrb	r3, [r3]
 578 0064 DBB2     		uxtb	r3, r3
 579 0066 43F04003 		orr	r3, r3, #64
 580 006a DBB2     		uxtb	r3, r3
 581 006c 1370     		strb	r3, [r2]
 758:Generated_Source\PSoC5/USBFS_1.c **** 
 759:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBFS_1.c **** 
 761:Generated_Source\PSoC5/USBFS_1.c ****     CyExitCriticalSection(enableInterrupts);
 582              		.loc 1 761 0
 583 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 584 0070 1846     		mov	r0, r3
 585 0072 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USBFS_1.c **** 
 763:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBFS_1.c **** #else
 769:Generated_Source\PSoC5/USBFS_1.c **** 
 770:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_BUS_RESET_VECT_NUM);
 586              		.loc 1 770 0
 587 0076 184B     		ldr	r3, .L20+20
 588 0078 4FF40002 		mov	r2, #8388608
 589 007c 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_EP_0_VECT_NUM);
 590              		.loc 1 771 0
 591 007e 164B     		ldr	r3, .L20+20
 592 0080 4FF08072 		mov	r2, #16777216
 593 0084 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBFS_1.c **** 
 773:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_SOF_VECT_NUM);
 775:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 25


 776:Generated_Source\PSoC5/USBFS_1.c **** 
 777:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_1_VECT_NUM);
 594              		.loc 1 778 0
 595 0086 144B     		ldr	r3, .L20+20
 596 0088 0822     		movs	r2, #8
 597 008a 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBFS_1.c **** 
 781:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_2_VECT_NUM);
 783:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBFS_1.c **** 
 785:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBFS_1.c **** 
 789:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBFS_1.c **** 
 793:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBFS_1.c **** 
 797:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* USBFS_1_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBFS_1.c **** 
 801:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBFS_1.c **** 
 805:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBFS_1.c **** 
 809:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBFS_1.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBFS_1.c ****         (void) USBFS_1_Dp_ClearInterrupt();
 598              		.loc 1 811 0
 599 008c FFF7FEFF 		bl	USBFS_1_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USBFS_1.c ****         CyIntClearPending(USBFS_1_DP_INTC_VECT_NUM);
 600              		.loc 1 812 0
 601 0090 124B     		ldr	r3, .L20+24
 602 0092 4FF48052 		mov	r2, #4096
 603 0096 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBFS_1.c **** 
 815:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBFS_1.c **** 
 817:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 604              		.loc 1 818 0
 605 0098 114B     		ldr	r3, .L20+28
 606 009a 0022     		movs	r2, #0
 607 009c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 26


 819:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 608              		.loc 1 819 0
 609 009e 114B     		ldr	r3, .L20+32
 610 00a0 0022     		movs	r2, #0
 611 00a2 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 612              		.loc 1 820 0
 613 00a4 104B     		ldr	r3, .L20+36
 614 00a6 0022     		movs	r2, #0
 615 00a8 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 616              		.loc 1 821 0
 617 00aa 104B     		ldr	r3, .L20+40
 618 00ac 0022     		movs	r2, #0
 619 00ae 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 620              		.loc 1 822 0
 621 00b0 0F4B     		ldr	r3, .L20+44
 622 00b2 0022     		movs	r2, #0
 623 00b4 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USBFS_1.c **** 
 824:Generated_Source\PSoC5/USBFS_1.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_initVar = 0u;
 624              		.loc 1 825 0
 625 00b6 0F4B     		ldr	r3, .L20+48
 626 00b8 0022     		movs	r2, #0
 627 00ba 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USBFS_1.c **** }
 628              		.loc 1 826 0
 629 00bc 00BF     		nop
 630 00be 0837     		adds	r7, r7, #8
 631              		.cfi_def_cfa_offset 8
 632 00c0 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 00c2 80BD     		pop	{r7, pc}
 636              	.L21:
 637              		.align	2
 638              	.L20:
 639 00c4 08600040 		.word	1073766408
 640 00c8 12600040 		.word	1073766418
 641 00cc A5430040 		.word	1073759141
 642 00d0 B5430040 		.word	1073759157
 643 00d4 F8510040 		.word	1073762808
 644 00d8 80E100E0 		.word	-536813184
 645 00dc 80E200E0 		.word	-536812928
 646 00e0 00000000 		.word	USBFS_1_configurationChanged
 647 00e4 00000000 		.word	USBFS_1_configuration
 648 00e8 00000000 		.word	USBFS_1_interfaceNumber
 649 00ec 00000000 		.word	USBFS_1_deviceAddress
 650 00f0 00000000 		.word	USBFS_1_deviceStatus
 651 00f4 00000000 		.word	USBFS_1_initVar
 652              		.cfi_endproc
 653              	.LFE4:
 654              		.size	USBFS_1_Stop, .-USBFS_1_Stop
 655              		.section	.text.USBFS_1_CheckActivity,"ax",%progbits
 656              		.align	2
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 27


 657              		.global	USBFS_1_CheckActivity
 658              		.thumb
 659              		.thumb_func
 660              		.type	USBFS_1_CheckActivity, %function
 661              	USBFS_1_CheckActivity:
 662              	.LFB5:
 827:Generated_Source\PSoC5/USBFS_1.c **** 
 828:Generated_Source\PSoC5/USBFS_1.c **** 
 829:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_CheckActivity
 831:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBFS_1.c **** *
 833:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBFS_1.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBFS_1.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBFS_1.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBFS_1.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBFS_1.c **** *
 839:Generated_Source\PSoC5/USBFS_1.c **** *
 840:Generated_Source\PSoC5/USBFS_1.c **** * \return
 841:Generated_Source\PSoC5/USBFS_1.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBFS_1.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBFS_1.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBFS_1.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBFS_1.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBFS_1.c **** *
 847:Generated_Source\PSoC5/USBFS_1.c **** *
 848:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBFS_1.c **** {
 663              		.loc 1 850 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 8
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 668 0000 80B4     		push	{r7}
 669              		.cfi_def_cfa_offset 4
 670              		.cfi_offset 7, -4
 671 0002 83B0     		sub	sp, sp, #12
 672              		.cfi_def_cfa_offset 16
 673 0004 00AF     		add	r7, sp, #0
 674              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr1Reg = USBFS_1_CR1_REG;
 675              		.loc 1 851 0
 676 0006 0B4B     		ldr	r3, .L26
 677 0008 1B78     		ldrb	r3, [r3]
 678 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USBFS_1.c **** 
 853:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = (cr1Reg & (uint8) ~USBFS_1_CR1_BUS_ACTIVITY);
 679              		.loc 1 854 0
 680 000c 094A     		ldr	r2, .L26
 681 000e FB79     		ldrb	r3, [r7, #7]
 682 0010 23F00403 		bic	r3, r3, #4
 683 0014 DBB2     		uxtb	r3, r3
 684 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 28


 856:Generated_Source\PSoC5/USBFS_1.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBFS_1.c ****     return ((0u != (cr1Reg & USBFS_1_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 685              		.loc 1 857 0
 686 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 687 001a 03F00403 		and	r3, r3, #4
 688 001e 002B     		cmp	r3, #0
 689 0020 01D0     		beq	.L23
 690              		.loc 1 857 0 is_stmt 0 discriminator 1
 691 0022 0123     		movs	r3, #1
 692 0024 00E0     		b	.L24
 693              	.L23:
 694              		.loc 1 857 0 discriminator 2
 695 0026 0023     		movs	r3, #0
 696              	.L24:
 858:Generated_Source\PSoC5/USBFS_1.c **** }
 697              		.loc 1 858 0 is_stmt 1 discriminator 4
 698 0028 1846     		mov	r0, r3
 699 002a 0C37     		adds	r7, r7, #12
 700              		.cfi_def_cfa_offset 4
 701 002c BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 002e 80BC     		pop	{r7}
 705              		.cfi_restore 7
 706              		.cfi_def_cfa_offset 0
 707 0030 7047     		bx	lr
 708              	.L27:
 709 0032 00BF     		.align	2
 710              	.L26:
 711 0034 09600040 		.word	1073766409
 712              		.cfi_endproc
 713              	.LFE5:
 714              		.size	USBFS_1_CheckActivity, .-USBFS_1_CheckActivity
 715              		.section	.text.USBFS_1_GetConfiguration,"ax",%progbits
 716              		.align	2
 717              		.global	USBFS_1_GetConfiguration
 718              		.thumb
 719              		.thumb_func
 720              		.type	USBFS_1_GetConfiguration, %function
 721              	USBFS_1_GetConfiguration:
 722              	.LFB6:
 859:Generated_Source\PSoC5/USBFS_1.c **** 
 860:Generated_Source\PSoC5/USBFS_1.c **** 
 861:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetConfiguration
 863:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBFS_1.c **** *
 865:Generated_Source\PSoC5/USBFS_1.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBFS_1.c **** *
 867:Generated_Source\PSoC5/USBFS_1.c **** * \return
 868:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBFS_1.c **** *  is not configured
 870:Generated_Source\PSoC5/USBFS_1.c **** *
 871:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBFS_1.c **** {
 723              		.loc 1 873 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 29


 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 0000 80B4     		push	{r7}
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 0002 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_configuration);
 733              		.loc 1 874 0
 734 0004 034B     		ldr	r3, .L30
 735 0006 1B78     		ldrb	r3, [r3]
 736 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USBFS_1.c **** }
 737              		.loc 1 875 0
 738 000a 1846     		mov	r0, r3
 739 000c BD46     		mov	sp, r7
 740              		.cfi_def_cfa_register 13
 741              		@ sp needed
 742 000e 80BC     		pop	{r7}
 743              		.cfi_restore 7
 744              		.cfi_def_cfa_offset 0
 745 0010 7047     		bx	lr
 746              	.L31:
 747 0012 00BF     		.align	2
 748              	.L30:
 749 0014 00000000 		.word	USBFS_1_configuration
 750              		.cfi_endproc
 751              	.LFE6:
 752              		.size	USBFS_1_GetConfiguration, .-USBFS_1_GetConfiguration
 753              		.section	.text.USBFS_1_IsConfigurationChanged,"ax",%progbits
 754              		.align	2
 755              		.global	USBFS_1_IsConfigurationChanged
 756              		.thumb
 757              		.thumb_func
 758              		.type	USBFS_1_IsConfigurationChanged, %function
 759              	USBFS_1_IsConfigurationChanged:
 760              	.LFB7:
 876:Generated_Source\PSoC5/USBFS_1.c **** 
 877:Generated_Source\PSoC5/USBFS_1.c **** 
 878:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBFS_1.c **** *
 882:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBFS_1.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBFS_1.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBFS_1.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBFS_1.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBFS_1.c **** *
 888:Generated_Source\PSoC5/USBFS_1.c **** * \return
 889:Generated_Source\PSoC5/USBFS_1.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBFS_1.c **** *  returned.
 891:Generated_Source\PSoC5/USBFS_1.c **** *
 892:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 893:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 30


 894:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBFS_1.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBFS_1.c **** *
 897:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBFS_1.c **** {
 761              		.loc 1 899 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766 0000 80B4     		push	{r7}
 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 7, -4
 769 0002 83B0     		sub	sp, sp, #12
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USBFS_1.c ****     uint8 res = 0u;
 773              		.loc 1 900 0
 774 0006 0023     		movs	r3, #0
 775 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USBFS_1.c **** 
 902:Generated_Source\PSoC5/USBFS_1.c ****     if (USBFS_1_configurationChanged != 0u)
 776              		.loc 1 902 0
 777 000a 084B     		ldr	r3, .L35
 778 000c 1B78     		ldrb	r3, [r3]
 779 000e DBB2     		uxtb	r3, r3
 780 0010 002B     		cmp	r3, #0
 781 0012 05D0     		beq	.L33
 903:Generated_Source\PSoC5/USBFS_1.c ****     {
 904:Generated_Source\PSoC5/USBFS_1.c ****         res = USBFS_1_configurationChanged;
 782              		.loc 1 904 0
 783 0014 054B     		ldr	r3, .L35
 784 0016 1B78     		ldrb	r3, [r3]
 785 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_configurationChanged = 0u;
 786              		.loc 1 905 0
 787 001a 044B     		ldr	r3, .L35
 788 001c 0022     		movs	r2, #0
 789 001e 1A70     		strb	r2, [r3]
 790              	.L33:
 906:Generated_Source\PSoC5/USBFS_1.c ****     }
 907:Generated_Source\PSoC5/USBFS_1.c **** 
 908:Generated_Source\PSoC5/USBFS_1.c ****     return (res);
 791              		.loc 1 908 0
 792 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USBFS_1.c **** }
 793              		.loc 1 909 0
 794 0022 1846     		mov	r0, r3
 795 0024 0C37     		adds	r7, r7, #12
 796              		.cfi_def_cfa_offset 4
 797 0026 BD46     		mov	sp, r7
 798              		.cfi_def_cfa_register 13
 799              		@ sp needed
 800 0028 80BC     		pop	{r7}
 801              		.cfi_restore 7
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 31


 802              		.cfi_def_cfa_offset 0
 803 002a 7047     		bx	lr
 804              	.L36:
 805              		.align	2
 806              	.L35:
 807 002c 00000000 		.word	USBFS_1_configurationChanged
 808              		.cfi_endproc
 809              	.LFE7:
 810              		.size	USBFS_1_IsConfigurationChanged, .-USBFS_1_IsConfigurationChanged
 811              		.section	.text.USBFS_1_GetInterfaceSetting,"ax",%progbits
 812              		.align	2
 813              		.global	USBFS_1_GetInterfaceSetting
 814              		.thumb
 815              		.thumb_func
 816              		.type	USBFS_1_GetInterfaceSetting, %function
 817              	USBFS_1_GetInterfaceSetting:
 818              	.LFB8:
 910:Generated_Source\PSoC5/USBFS_1.c **** 
 911:Generated_Source\PSoC5/USBFS_1.c **** 
 912:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBFS_1.c **** *
 916:Generated_Source\PSoC5/USBFS_1.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBFS_1.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBFS_1.c **** *  interface.
 919:Generated_Source\PSoC5/USBFS_1.c **** *
 920:Generated_Source\PSoC5/USBFS_1.c **** *  \param
 921:Generated_Source\PSoC5/USBFS_1.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBFS_1.c **** *
 923:Generated_Source\PSoC5/USBFS_1.c **** * \return
 924:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBFS_1.c **** *
 926:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBFS_1.c **** uint8  USBFS_1_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBFS_1.c ****                                                     
 929:Generated_Source\PSoC5/USBFS_1.c **** {
 819              		.loc 1 929 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824 0000 80B4     		push	{r7}
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 83B0     		sub	sp, sp, #12
 828              		.cfi_def_cfa_offset 16
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 831 0006 0346     		mov	r3, r0
 832 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_interfaceSetting[interfaceNumber]);
 833              		.loc 1 930 0
 834 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 835 000c 034A     		ldr	r2, .L39
 836 000e D35C     		ldrb	r3, [r2, r3]
 837 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 32


 931:Generated_Source\PSoC5/USBFS_1.c **** }
 838              		.loc 1 931 0
 839 0012 1846     		mov	r0, r3
 840 0014 0C37     		adds	r7, r7, #12
 841              		.cfi_def_cfa_offset 4
 842 0016 BD46     		mov	sp, r7
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 0018 80BC     		pop	{r7}
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 001a 7047     		bx	lr
 849              	.L40:
 850              		.align	2
 851              	.L39:
 852 001c 00000000 		.word	USBFS_1_interfaceSetting
 853              		.cfi_endproc
 854              	.LFE8:
 855              		.size	USBFS_1_GetInterfaceSetting, .-USBFS_1_GetInterfaceSetting
 856              		.section	.text.USBFS_1_GetEPState,"ax",%progbits
 857              		.align	2
 858              		.global	USBFS_1_GetEPState
 859              		.thumb
 860              		.thumb_func
 861              		.type	USBFS_1_GetEPState, %function
 862              	USBFS_1_GetEPState:
 863              	.LFB9:
 932:Generated_Source\PSoC5/USBFS_1.c **** 
 933:Generated_Source\PSoC5/USBFS_1.c **** 
 934:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPState
 936:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBFS_1.c **** *
 938:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBFS_1.c **** *
 940:Generated_Source\PSoC5/USBFS_1.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBFS_1.c **** *
 942:Generated_Source\PSoC5/USBFS_1.c **** * \return
 943:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBFS_1.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBFS_1.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBFS_1.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBFS_1.c **** *
 948:Generated_Source\PSoC5/USBFS_1.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBFS_1.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBFS_1.c **** *
 958:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBFS_1.c **** {
 864              		.loc 1 960 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 33


 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              		.cfi_def_cfa_offset 4
 871              		.cfi_offset 7, -4
 872 0002 83B0     		sub	sp, sp, #12
 873              		.cfi_def_cfa_offset 16
 874 0004 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
 876 0006 0346     		mov	r3, r0
 877 0008 FB71     		strb	r3, [r7, #7]
 961:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_EP[epNumber].apiEpState);
 878              		.loc 1 961 0
 879 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 880 000c 0649     		ldr	r1, .L43
 881 000e 1346     		mov	r3, r2
 882 0010 5B00     		lsls	r3, r3, #1
 883 0012 1344     		add	r3, r3, r2
 884 0014 9B00     		lsls	r3, r3, #2
 885 0016 0B44     		add	r3, r3, r1
 886 0018 0133     		adds	r3, r3, #1
 887 001a 1B78     		ldrb	r3, [r3]
 888 001c DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USBFS_1.c **** }
 889              		.loc 1 962 0
 890 001e 1846     		mov	r0, r3
 891 0020 0C37     		adds	r7, r7, #12
 892              		.cfi_def_cfa_offset 4
 893 0022 BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 0024 80BC     		pop	{r7}
 897              		.cfi_restore 7
 898              		.cfi_def_cfa_offset 0
 899 0026 7047     		bx	lr
 900              	.L44:
 901              		.align	2
 902              	.L43:
 903 0028 00000000 		.word	USBFS_1_EP
 904              		.cfi_endproc
 905              	.LFE9:
 906              		.size	USBFS_1_GetEPState, .-USBFS_1_GetEPState
 907              		.section	.text.USBFS_1_GetEPCount,"ax",%progbits
 908              		.align	2
 909              		.global	USBFS_1_GetEPCount
 910              		.thumb
 911              		.thumb_func
 912              		.type	USBFS_1_GetEPCount, %function
 913              	USBFS_1_GetEPCount:
 914              	.LFB10:
 963:Generated_Source\PSoC5/USBFS_1.c **** 
 964:Generated_Source\PSoC5/USBFS_1.c **** 
 965:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPCount
 967:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 34


 968:Generated_Source\PSoC5/USBFS_1.c **** *
 969:Generated_Source\PSoC5/USBFS_1.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBFS_1.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBFS_1.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBFS_1.c **** *
 974:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBFS_1.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBFS_1.c **** *
 977:Generated_Source\PSoC5/USBFS_1.c **** * \return
 978:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBFS_1.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBFS_1.c **** *
 981:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBFS_1.c **** {
 915              		.loc 1 983 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 16
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920 0000 80B4     		push	{r7}
 921              		.cfi_def_cfa_offset 4
 922              		.cfi_offset 7, -4
 923 0002 85B0     		sub	sp, sp, #20
 924              		.cfi_def_cfa_offset 24
 925 0004 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 927 0006 0346     		mov	r3, r0
 928 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USBFS_1.c ****     uint16 cntr = 0u;
 929              		.loc 1 984 0
 930 000a 0023     		movs	r3, #0
 931 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USBFS_1.c **** 
 986:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 932              		.loc 1 986 0
 933 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 0010 002B     		cmp	r3, #0
 935 0012 1CD0     		beq	.L46
 936              		.loc 1 986 0 is_stmt 0 discriminator 1
 937 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 938 0016 082B     		cmp	r3, #8
 939 0018 19D8     		bhi	.L46
 987:Generated_Source\PSoC5/USBFS_1.c ****     {
 988:Generated_Source\PSoC5/USBFS_1.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBFS_1.c ****         cntr  = ((uint16) USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_1_EPX_CNT0_MASK;
 940              		.loc 1 989 0 is_stmt 1
 941 001a 104A     		ldr	r2, .L48
 942 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943 001e 1B01     		lsls	r3, r3, #4
 944 0020 1344     		add	r3, r3, r2
 945 0022 1B78     		ldrb	r3, [r3]
 946 0024 DBB2     		uxtb	r3, r3
 947 0026 9BB2     		uxth	r3, r3
 948 0028 03F00F03 		and	r3, r3, #15
 949 002c FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 35


 990:Generated_Source\PSoC5/USBFS_1.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 950              		.loc 1 990 0
 951 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 952 0030 1B02     		lsls	r3, r3, #8
 953 0032 9AB2     		uxth	r2, r3
 954 0034 0949     		ldr	r1, .L48
 955 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 956 0038 1B01     		lsls	r3, r3, #4
 957 003a 0B44     		add	r3, r3, r1
 958 003c 0133     		adds	r3, r3, #1
 959 003e 1B78     		ldrb	r3, [r3]
 960 0040 DBB2     		uxtb	r3, r3
 961 0042 9BB2     		uxth	r3, r3
 962 0044 1343     		orrs	r3, r3, r2
 963 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 991:Generated_Source\PSoC5/USBFS_1.c ****         cntr -= USBFS_1_EPX_CNTX_CRC_COUNT;
 964              		.loc 1 991 0
 965 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 966 004a 023B     		subs	r3, r3, #2
 967 004c FB81     		strh	r3, [r7, #14]	@ movhi
 968              	.L46:
 992:Generated_Source\PSoC5/USBFS_1.c ****     }
 993:Generated_Source\PSoC5/USBFS_1.c **** 
 994:Generated_Source\PSoC5/USBFS_1.c ****     return (cntr);
 969              		.loc 1 994 0
 970 004e FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USBFS_1.c **** }
 971              		.loc 1 995 0
 972 0050 1846     		mov	r0, r3
 973 0052 1437     		adds	r7, r7, #20
 974              		.cfi_def_cfa_offset 4
 975 0054 BD46     		mov	sp, r7
 976              		.cfi_def_cfa_register 13
 977              		@ sp needed
 978 0056 80BC     		pop	{r7}
 979              		.cfi_restore 7
 980              		.cfi_def_cfa_offset 0
 981 0058 7047     		bx	lr
 982              	.L49:
 983 005a 00BF     		.align	2
 984              	.L48:
 985 005c FC5F0040 		.word	1073766396
 986              		.cfi_endproc
 987              	.LFE10:
 988              		.size	USBFS_1_GetEPCount, .-USBFS_1_GetEPCount
 989              		.section	.text.USBFS_1_LoadInEP,"ax",%progbits
 990              		.align	2
 991              		.global	USBFS_1_LoadInEP
 992              		.thumb
 993              		.thumb_func
 994              		.type	USBFS_1_LoadInEP, %function
 995              	USBFS_1_LoadInEP:
 996              	.LFB11:
 996:Generated_Source\PSoC5/USBFS_1.c **** 
 997:Generated_Source\PSoC5/USBFS_1.c **** 
 998:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 36


1000:Generated_Source\PSoC5/USBFS_1.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_InitEpDma
1002:Generated_Source\PSoC5/USBFS_1.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBFS_1.c ****     *
1004:Generated_Source\PSoC5/USBFS_1.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBFS_1.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBFS_1.c ****     *
1007:Generated_Source\PSoC5/USBFS_1.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBFS_1.c ****     static void USBFS_1_InitEpDma(void)
1009:Generated_Source\PSoC5/USBFS_1.c ****     {
1010:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep1_dma_CHANNEL] = USBFS_1_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBFS_1.c **** 
1014:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep2_dma_CHANNEL] = USBFS_1_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBFS_1.c **** 
1018:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep3_dma_CHANNEL] = USBFS_1_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBFS_1.c **** 
1022:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep4_dma_CHANNEL] = USBFS_1_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBFS_1.c **** 
1026:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep5_dma_CHANNEL] = USBFS_1_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBFS_1.c **** 
1030:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep6_dma_CHANNEL] = USBFS_1_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBFS_1.c **** 
1034:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep7_dma_CHANNEL] = USBFS_1_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBFS_1.c **** 
1038:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep8_dma_CHANNEL] = USBFS_1_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBFS_1.c **** 
1042:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBFS_1.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep1_dma_SetInterruptCallback(&USBFS_1_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBFS_1.c **** 
1048:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep2_dma_SetInterruptCallback(&USBFS_1_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBFS_1.c **** 
1052:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep3_dma_SetInterruptCallback(&USBFS_1_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBFS_1.c **** 
1056:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA4_ACTIVE)
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 37


1057:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep4_dma_SetInterruptCallback(&USBFS_1_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBFS_1.c **** 
1060:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep5_dma_SetInterruptCallback(&USBFS_1_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBFS_1.c **** 
1064:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep6_dma_SetInterruptCallback(&USBFS_1_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBFS_1.c **** 
1068:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep7_dma_SetInterruptCallback(&USBFS_1_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBFS_1.c **** 
1072:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep8_dma_SetInterruptCallback(&USBFS_1_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBFS_1.c ****     }
1077:Generated_Source\PSoC5/USBFS_1.c **** #else
1078:Generated_Source\PSoC5/USBFS_1.c **** 
1079:Generated_Source\PSoC5/USBFS_1.c **** 
1080:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_InitEP_DMA
1082:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBFS_1.c ****     *
1084:Generated_Source\PSoC5/USBFS_1.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_LoadInEP() or USBFS_1_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBFS_1.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBFS_1.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBFS_1.c ****     *
1089:Generated_Source\PSoC5/USBFS_1.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBFS_1.c ****     *
1091:Generated_Source\PSoC5/USBFS_1.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBFS_1.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBFS_1.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBFS_1.c ****     *
1095:Generated_Source\PSoC5/USBFS_1.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBFS_1.c ****     *
1097:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBFS_1.c ****                                                                     
1100:Generated_Source\PSoC5/USBFS_1.c ****     {
1101:Generated_Source\PSoC5/USBFS_1.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBFS_1.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBFS_1.c **** 
1104:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBFS_1.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBFS_1.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBFS_1.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBFS_1.c ****     #else
1109:Generated_Source\PSoC5/USBFS_1.c ****         if ((USBFS_1_EP[epNumber].addr & USBFS_1_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBFS_1.c ****         {
1111:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBFS_1.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBFS_1.c ****             dst = HI16(CYDEV_PERIPH_BASE);
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 38


1114:Generated_Source\PSoC5/USBFS_1.c ****         }
1115:Generated_Source\PSoC5/USBFS_1.c ****         else
1116:Generated_Source\PSoC5/USBFS_1.c ****         {
1117:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBFS_1.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBFS_1.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBFS_1.c ****         }
1121:Generated_Source\PSoC5/USBFS_1.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBFS_1.c **** 
1123:Generated_Source\PSoC5/USBFS_1.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBFS_1.c ****         {
1125:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP1:
1127:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep1_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1129:Generated_Source\PSoC5/USBFS_1.c ****             break;
1130:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBFS_1.c **** 
1132:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP2:
1134:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep2_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1136:Generated_Source\PSoC5/USBFS_1.c ****             break;
1137:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBFS_1.c **** 
1139:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP3:
1141:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep3_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1143:Generated_Source\PSoC5/USBFS_1.c ****             break;
1144:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBFS_1.c **** 
1146:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP4:
1148:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep4_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1150:Generated_Source\PSoC5/USBFS_1.c ****             break;
1151:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBFS_1.c **** 
1153:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP5:
1155:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep5_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1157:Generated_Source\PSoC5/USBFS_1.c ****             break;
1158:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBFS_1.c **** 
1160:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP6:
1162:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep6_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1164:Generated_Source\PSoC5/USBFS_1.c ****             break;
1165:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBFS_1.c **** 
1167:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP7:
1169:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep7_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 39


1171:Generated_Source\PSoC5/USBFS_1.c ****             break;
1172:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBFS_1.c **** 
1174:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP8:
1176:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep8_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1178:Generated_Source\PSoC5/USBFS_1.c ****             break;
1179:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBFS_1.c **** 
1181:Generated_Source\PSoC5/USBFS_1.c ****         default:
1182:Generated_Source\PSoC5/USBFS_1.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBFS_1.c ****             break;
1184:Generated_Source\PSoC5/USBFS_1.c ****         }
1185:Generated_Source\PSoC5/USBFS_1.c **** 
1186:Generated_Source\PSoC5/USBFS_1.c ****         if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1187:Generated_Source\PSoC5/USBFS_1.c ****         {
1188:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBFS_1.c **** 
1190:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBFS_1.c ****         }
1194:Generated_Source\PSoC5/USBFS_1.c ****     }
1195:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBFS_1.c **** 
1197:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_Stop_DMA
1199:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBFS_1.c ****     *  
1201:Generated_Source\PSoC5/USBFS_1.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBFS_1.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBFS_1.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBFS_1.c ****     *  to trigger DMA re-configuration when USBFS_1_LoadInEP() or 
1205:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBFS_1.c ****     *  
1207:Generated_Source\PSoC5/USBFS_1.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBFS_1.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBFS_1.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_MAX_EP argument.
1211:Generated_Source\PSoC5/USBFS_1.c ****     *
1212:Generated_Source\PSoC5/USBFS_1.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBFS_1.c ****     *  No.
1214:Generated_Source\PSoC5/USBFS_1.c ****     *
1215:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBFS_1.c ****     {
1218:Generated_Source\PSoC5/USBFS_1.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBFS_1.c **** 
1220:Generated_Source\PSoC5/USBFS_1.c ****         i = (epNumber < USBFS_1_MAX_EP) ? epNumber : USBFS_1_EP1;
1221:Generated_Source\PSoC5/USBFS_1.c **** 
1222:Generated_Source\PSoC5/USBFS_1.c ****         do
1223:Generated_Source\PSoC5/USBFS_1.c ****         {
1224:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBFS_1.c ****             if (0u != USBFS_1_DmaChan[i])
1226:Generated_Source\PSoC5/USBFS_1.c ****             {
1227:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(USBFS_1_DmaChan[i]);
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 40


1228:Generated_Source\PSoC5/USBFS_1.c ****             }
1229:Generated_Source\PSoC5/USBFS_1.c ****         #else
1230:Generated_Source\PSoC5/USBFS_1.c ****             if(USBFS_1_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBFS_1.c ****             {
1232:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[i]);
1233:Generated_Source\PSoC5/USBFS_1.c ****                 CyDmaTdFree(USBFS_1_DmaTd[i]);
1234:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBFS_1.c ****             }
1236:Generated_Source\PSoC5/USBFS_1.c **** 
1237:Generated_Source\PSoC5/USBFS_1.c ****             #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBFS_1.c ****                 if(USBFS_1_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBFS_1.c ****                 {
1240:Generated_Source\PSoC5/USBFS_1.c ****                     CyDmaTdFree(USBFS_1_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBFS_1.c ****                 }
1243:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBFS_1.c **** 
1245:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBFS_1.c ****             i++;
1247:Generated_Source\PSoC5/USBFS_1.c ****         }
1248:Generated_Source\PSoC5/USBFS_1.c ****         while ((i < USBFS_1_MAX_EP) && (epNumber == USBFS_1_MAX_EP));
1249:Generated_Source\PSoC5/USBFS_1.c ****     }
1250:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBFS_1.c **** 
1252:Generated_Source\PSoC5/USBFS_1.c **** 
1253:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_LoadNextInEP
1257:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBFS_1.c ****     *
1259:Generated_Source\PSoC5/USBFS_1.c ****     * Summary:
1260:Generated_Source\PSoC5/USBFS_1.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBFS_1.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBFS_1.c ****     *
1263:Generated_Source\PSoC5/USBFS_1.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBFS_1.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBFS_1.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBFS_1.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBFS_1.c ****     *
1268:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBFS_1.c ****     {
1271:Generated_Source\PSoC5/USBFS_1.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBFS_1.c **** 
1273:Generated_Source\PSoC5/USBFS_1.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBFS_1.c ****         {
1275:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBFS_1.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, USBFS_1_inLength[epNumber] - USBFS_1_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_1_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBFS_1.c ****                                             USBFS_1_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_inBufFull[epNumber] = 1u;
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 41


1285:Generated_Source\PSoC5/USBFS_1.c ****         }
1286:Generated_Source\PSoC5/USBFS_1.c ****         else
1287:Generated_Source\PSoC5/USBFS_1.c ****         {
1288:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBFS_1.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, USBFS_1_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_1_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBFS_1.c ****                                    (USBFS_1_DMA_BYTES_PER_BURST - USBFS_1_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBFS_1.c ****         }
1298:Generated_Source\PSoC5/USBFS_1.c **** 
1299:Generated_Source\PSoC5/USBFS_1.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBFS_1.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_1_DmaChan[epNumber]].basic_status[1u] = USBFS_1_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBFS_1.c ****     }
1302:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBFS_1.c **** 
1305:Generated_Source\PSoC5/USBFS_1.c **** 
1306:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_LoadInEP
1308:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBFS_1.c **** *
1310:Generated_Source\PSoC5/USBFS_1.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBFS_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBFS_1.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBFS_1.c **** *
1314:Generated_Source\PSoC5/USBFS_1.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBFS_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBFS_1.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBFS_1.c **** *
1318:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBFS_1.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBFS_1.c **** *
1322:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBFS_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBFS_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBFS_1.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBFS_1.c **** *
1328:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBFS_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBFS_1.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBFS_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBFS_1.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBFS_1.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBFS_1.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBFS_1.c **** *
1337:Generated_Source\PSoC5/USBFS_1.c **** *
1338:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1339:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1340:Generated_Source\PSoC5/USBFS_1.c **** *
1341:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 42


1342:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBFS_1.c ****                                                                         
1344:Generated_Source\PSoC5/USBFS_1.c **** {
 997              		.loc 1 1344 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 16
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002 0000 B0B4     		push	{r4, r5, r7}
 1003              		.cfi_def_cfa_offset 12
 1004              		.cfi_offset 4, -12
 1005              		.cfi_offset 5, -8
 1006              		.cfi_offset 7, -4
 1007 0002 85B0     		sub	sp, sp, #20
 1008              		.cfi_def_cfa_offset 32
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 0346     		mov	r3, r0
 1012 0008 3960     		str	r1, [r7]
 1013 000a FB71     		strb	r3, [r7, #7]
 1014 000c 1346     		mov	r3, r2	@ movhi
 1015 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1016              		.loc 1 1345 0
 1017 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1018 0012 002B     		cmp	r3, #0
 1019 0014 6DD0     		beq	.L56
 1020              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1021 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1022 0018 082B     		cmp	r3, #8
 1023 001a 6AD8     		bhi	.L56
1346:Generated_Source\PSoC5/USBFS_1.c ****     {
1347:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBFS_1.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBFS_1.c ****         if (length > (USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset))
 1024              		.loc 1 1349 0 is_stmt 1
 1025 001c B988     		ldrh	r1, [r7, #4]
 1026 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1027 0020 3648     		ldr	r0, .L57
 1028 0022 1346     		mov	r3, r2
 1029 0024 5B00     		lsls	r3, r3, #1
 1030 0026 1344     		add	r3, r3, r2
 1031 0028 9B00     		lsls	r3, r3, #2
 1032 002a 0344     		add	r3, r3, r0
 1033 002c 0633     		adds	r3, r3, #6
 1034 002e 1B88     		ldrh	r3, [r3]	@ movhi
 1035 0030 9BB2     		uxth	r3, r3
 1036 0032 C3F50073 		rsb	r3, r3, #512
 1037 0036 9942     		cmp	r1, r3
 1038 0038 0CD9     		bls	.L52
1350:Generated_Source\PSoC5/USBFS_1.c ****         {
1351:Generated_Source\PSoC5/USBFS_1.c ****             length = USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset;
 1039              		.loc 1 1351 0
 1040 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1041 003c 2F49     		ldr	r1, .L57
 1042 003e 1346     		mov	r3, r2
 1043 0040 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 43


 1044 0042 1344     		add	r3, r3, r2
 1045 0044 9B00     		lsls	r3, r3, #2
 1046 0046 0B44     		add	r3, r3, r1
 1047 0048 0633     		adds	r3, r3, #6
 1048 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1049 004c 9BB2     		uxth	r3, r3
 1050 004e C3F50073 		rsb	r3, r3, #512
 1051 0052 BB80     		strh	r3, [r7, #4]	@ movhi
 1052              	.L52:
1352:Generated_Source\PSoC5/USBFS_1.c ****         }
1353:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBFS_1.c **** 
1355:Generated_Source\PSoC5/USBFS_1.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBFS_1_EP[epNumber].epT
 1053              		.loc 1 1356 0
 1054 0054 2A4C     		ldr	r4, .L57+4
 1055 0056 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1056 0058 BB88     		ldrh	r3, [r7, #4]
 1057 005a 1B0A     		lsrs	r3, r3, #8
 1058 005c 9BB2     		uxth	r3, r3
 1059 005e D8B2     		uxtb	r0, r3
 1060 0060 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1061 0062 264D     		ldr	r5, .L57
 1062 0064 1346     		mov	r3, r2
 1063 0066 5B00     		lsls	r3, r3, #1
 1064 0068 1344     		add	r3, r3, r2
 1065 006a 9B00     		lsls	r3, r3, #2
 1066 006c 2B44     		add	r3, r3, r5
 1067 006e 0333     		adds	r3, r3, #3
 1068 0070 1B78     		ldrb	r3, [r3]
 1069 0072 DBB2     		uxtb	r3, r3
 1070 0074 0343     		orrs	r3, r3, r0
 1071 0076 DAB2     		uxtb	r2, r3
 1072 0078 0B01     		lsls	r3, r1, #4
 1073 007a 2344     		add	r3, r3, r4
 1074 007c 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1075              		.loc 1 1357 0
 1076 007e 204A     		ldr	r2, .L57+4
 1077 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1078 0082 B988     		ldrh	r1, [r7, #4]	@ movhi
 1079 0084 C9B2     		uxtb	r1, r1
 1080 0086 1B01     		lsls	r3, r3, #4
 1081 0088 1344     		add	r3, r3, r2
 1082 008a 0133     		adds	r3, r3, #1
 1083 008c 0A46     		mov	r2, r1
 1084 008e 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC5/USBFS_1.c **** 
1359:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != pData)
 1085              		.loc 1 1360 0
 1086 0090 3B68     		ldr	r3, [r7]
 1087 0092 002B     		cmp	r3, #0
 1088 0094 13D0     		beq	.L53
 1089              	.LBB2:
1361:Generated_Source\PSoC5/USBFS_1.c ****         {
1362:Generated_Source\PSoC5/USBFS_1.c **** 			/* Copy data using arbiter data register. */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 44


1363:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < length; ++i)
 1090              		.loc 1 1364 0
 1091 0096 0023     		movs	r3, #0
 1092 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 1093 009a 0CE0     		b	.L54
 1094              	.L55:
1365:Generated_Source\PSoC5/USBFS_1.c ****             {
1366:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1095              		.loc 1 1366 0 discriminator 3
 1096 009c 1948     		ldr	r0, .L57+8
 1097 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1098 00a0 FA89     		ldrh	r2, [r7, #14]
 1099 00a2 3968     		ldr	r1, [r7]
 1100 00a4 0A44     		add	r2, r2, r1
 1101 00a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1102 00a8 1B01     		lsls	r3, r3, #4
 1103 00aa 0344     		add	r3, r3, r0
 1104 00ac 0833     		adds	r3, r3, #8
 1105 00ae 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC5/USBFS_1.c ****             {
 1106              		.loc 1 1364 0 discriminator 3
 1107 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1108 00b2 0133     		adds	r3, r3, #1
 1109 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1110              	.L54:
1364:Generated_Source\PSoC5/USBFS_1.c ****             {
 1111              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1112 00b6 FA89     		ldrh	r2, [r7, #14]
 1113 00b8 BB88     		ldrh	r3, [r7, #4]
 1114 00ba 9A42     		cmp	r2, r3
 1115 00bc EED3     		bcc	.L55
 1116              	.L53:
 1117              	.LBE2:
1367:Generated_Source\PSoC5/USBFS_1.c ****             }
1368:Generated_Source\PSoC5/USBFS_1.c ****         }
1369:Generated_Source\PSoC5/USBFS_1.c **** 
1370:Generated_Source\PSoC5/USBFS_1.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
 1118              		.loc 1 1371 0 is_stmt 1
 1119 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1120 00c0 0E49     		ldr	r1, .L57
 1121 00c2 1346     		mov	r3, r2
 1122 00c4 5B00     		lsls	r3, r3, #1
 1123 00c6 1344     		add	r3, r3, r2
 1124 00c8 9B00     		lsls	r3, r3, #2
 1125 00ca 0B44     		add	r3, r3, r1
 1126 00cc 0133     		adds	r3, r3, #1
 1127 00ce 0022     		movs	r2, #0
 1128 00d0 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC5/USBFS_1.c **** 
1373:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
 1129              		.loc 1 1374 0
 1130 00d2 0B48     		ldr	r0, .L57+4
 1131 00d4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1132 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 45


 1133 00d8 084C     		ldr	r4, .L57
 1134 00da 1346     		mov	r3, r2
 1135 00dc 5B00     		lsls	r3, r3, #1
 1136 00de 1344     		add	r3, r3, r2
 1137 00e0 9B00     		lsls	r3, r3, #2
 1138 00e2 2344     		add	r3, r3, r4
 1139 00e4 0533     		adds	r3, r3, #5
 1140 00e6 1B78     		ldrb	r3, [r3]
 1141 00e8 DAB2     		uxtb	r2, r3
 1142 00ea 0B01     		lsls	r3, r1, #4
 1143 00ec 0344     		add	r3, r3, r0
 1144 00ee 0233     		adds	r3, r3, #2
 1145 00f0 1A70     		strb	r2, [r3]
 1146              	.L56:
1375:Generated_Source\PSoC5/USBFS_1.c **** 
1376:Generated_Source\PSoC5/USBFS_1.c ****     #else
1377:Generated_Source\PSoC5/USBFS_1.c **** 
1378:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBFS_1.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBFS_1.c ****             if (DMA_INVALID_TD == USBFS_1_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBFS_1.c ****             {
1382:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBFS_1.c ****             }
1384:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBFS_1.c **** 
1386:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBFS_1.c **** 
1390:Generated_Source\PSoC5/USBFS_1.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBFS_1.c ****             {
1392:Generated_Source\PSoC5/USBFS_1.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBFS_1.c **** 
1395:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBFS_1.c **** 
1398:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_
1401:Generated_Source\PSoC5/USBFS_1.c **** 
1402:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBFS_1.c ****                 --length;
1404:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBFS_1.c **** 
1407:Generated_Source\PSoC5/USBFS_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBFS_1.c **** 
1410:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBFS_1.c ****             #else
1413:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 46


1418:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBFS_1.c **** 
1423:Generated_Source\PSoC5/USBFS_1.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBFS_1.c **** 
1427:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBFS_1.c ****             }
1429:Generated_Source\PSoC5/USBFS_1.c ****             else
1430:Generated_Source\PSoC5/USBFS_1.c ****             {
1431:Generated_Source\PSoC5/USBFS_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBFS_1.c ****             }
1434:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBFS_1.c **** 
1436:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBFS_1.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBFS_1.c ****             {
1439:Generated_Source\PSoC5/USBFS_1.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBFS_1.c **** 
1442:Generated_Source\PSoC5/USBFS_1.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBFS_1.c **** 
1445:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBFS_1.c **** 
1448:Generated_Source\PSoC5/USBFS_1.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_
1450:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP_
1451:Generated_Source\PSoC5/USBFS_1.c **** 
1452:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBFS_1.c **** 
1456:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBFS_1.c **** 
1460:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBFS_1.c **** 
1463:Generated_Source\PSoC5/USBFS_1.c **** 
1464:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBFS_1.c **** 
1467:Generated_Source\PSoC5/USBFS_1.c ****             #else
1468:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBFS_1.c **** 
1470:Generated_Source\PSoC5/USBFS_1.c ****                 #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBFS_1.c **** 
1474:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send data only for first burst */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 47


1475:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBFS_1.c ****                         (length > USBFS_1_DMA_BYTES_PER_BURST) ? USBFS_1_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC5/USBFS_1.c **** 
1481:Generated_Source\PSoC5/USBFS_1.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBFS_1.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBFS_1.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBFS_1.c ****                     */
1485:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBFS_1.c **** 
1489:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBFS_1.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBFS_1.c ****                 #else
1493:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC5/USBFS_1.c ****                 #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBFS_1.c **** 
1500:Generated_Source\PSoC5/USBFS_1.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBFS_1.c ****             }
1507:Generated_Source\PSoC5/USBFS_1.c ****             else
1508:Generated_Source\PSoC5/USBFS_1.c ****             {
1509:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBFS_1.c **** 
1512:Generated_Source\PSoC5/USBFS_1.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBFS_1.c ****                 {
1514:Generated_Source\PSoC5/USBFS_1.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBFS_1.c **** 
1518:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBFS_1.c **** 
1521:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBFS_1.c **** 
1524:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBFS_1.c **** 
1527:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBFS_1.c ****                                                                           (USBFS_1_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBFS_1.c ****                                                                           (USBFS_1_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 48


1532:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBFS_1.c **** 
1536:Generated_Source\PSoC5/USBFS_1.c **** 
1537:Generated_Source\PSoC5/USBFS_1.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBFS_1.c ****                                                                             USBFS_1_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBFS_1.c **** 
1541:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBFS_1.c **** 
1544:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBFS_1.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBFS_1.c **** 
1549:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBFS_1.c **** 
1553:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBFS_1.c **** 
1557:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBFS_1.c ****                     if (USBFS_1_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBFS_1.c ****                     {
1560:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBFS_1.c ****                     }                   
1562:Generated_Source\PSoC5/USBFS_1.c **** 
1563:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstC
1565:Generated_Source\PSoC5/USBFS_1.c **** 
1566:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBFS_1.c **** 
1569:Generated_Source\PSoC5/USBFS_1.c ****                 #elif (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBFS_1.c **** 
1573:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaTd[epNumber], (length > USBFS_1_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32)  USBFS_1_inData
1580:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC5/USBFS_1.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBFS_1.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBFS_1.c **** 
1588:Generated_Source\PSoC5/USBFS_1.c ****                 #if !defined (USBFS_1_MANUAL_IN_EP_ARM)
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 49


1589:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBFS_1.c ****                 #endif  /* (USBFS_1_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBFS_1.c **** 
1593:Generated_Source\PSoC5/USBFS_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBFS_1.c ****                 }
1595:Generated_Source\PSoC5/USBFS_1.c ****                 else
1596:Generated_Source\PSoC5/USBFS_1.c ****                 {
1597:Generated_Source\PSoC5/USBFS_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBFS_1.c ****                 }
1600:Generated_Source\PSoC5/USBFS_1.c ****             }
1601:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBFS_1.c ****     }
1604:Generated_Source\PSoC5/USBFS_1.c **** }
 1147              		.loc 1 1604 0
 1148 00f2 00BF     		nop
 1149 00f4 1437     		adds	r7, r7, #20
 1150              		.cfi_def_cfa_offset 12
 1151 00f6 BD46     		mov	sp, r7
 1152              		.cfi_def_cfa_register 13
 1153              		@ sp needed
 1154 00f8 B0BC     		pop	{r4, r5, r7}
 1155              		.cfi_restore 7
 1156              		.cfi_restore 5
 1157              		.cfi_restore 4
 1158              		.cfi_def_cfa_offset 0
 1159 00fa 7047     		bx	lr
 1160              	.L58:
 1161              		.align	2
 1162              	.L57:
 1163 00fc 00000000 		.word	USBFS_1_EP
 1164 0100 FC5F0040 		.word	1073766396
 1165 0104 70600040 		.word	1073766512
 1166              		.cfi_endproc
 1167              	.LFE11:
 1168              		.size	USBFS_1_LoadInEP, .-USBFS_1_LoadInEP
 1169              		.section	.text.USBFS_1_ReadOutEP,"ax",%progbits
 1170              		.align	2
 1171              		.global	USBFS_1_ReadOutEP
 1172              		.thumb
 1173              		.thumb_func
 1174              		.type	USBFS_1_ReadOutEP, %function
 1175              	USBFS_1_ReadOutEP:
 1176              	.LFB12:
1605:Generated_Source\PSoC5/USBFS_1.c **** 
1606:Generated_Source\PSoC5/USBFS_1.c **** 
1607:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReadOutEP
1609:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBFS_1.c **** *
1611:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBFS_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBFS_1.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBFS_1.c **** *
1615:Generated_Source\PSoC5/USBFS_1.c **** *   *Manual (Static/Dynamic Allocation):*
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 50


1616:Generated_Source\PSoC5/USBFS_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBFS_1.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBFS_1.c **** *
1621:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBFS_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBFS_1.c **** *   transfer after calling the USBFS_1_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBFS_1.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBFS_1.c **** *
1627:Generated_Source\PSoC5/USBFS_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBFS_1.c **** *
1629:Generated_Source\PSoC5/USBFS_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBFS_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBFS_1.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBFS_1.c **** *
1633:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBFS_1.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBFS_1.c **** *
1637:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBFS_1.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBFS_1.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBFS_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBFS_1.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBFS_1.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBFS_1.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBFS_1.c **** *
1646:Generated_Source\PSoC5/USBFS_1.c **** * \return
1647:Generated_Source\PSoC5/USBFS_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBFS_1.c **** *
1649:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1650:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1651:Generated_Source\PSoC5/USBFS_1.c **** *
1652:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBFS_1.c ****                                                                         
1655:Generated_Source\PSoC5/USBFS_1.c **** {
 1177              		.loc 1 1655 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 16
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181 0000 80B5     		push	{r7, lr}
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 84B0     		sub	sp, sp, #16
 1186              		.cfi_def_cfa_offset 24
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0006 0346     		mov	r3, r0
 1190 0008 3960     		str	r1, [r7]
 1191 000a FB71     		strb	r3, [r7, #7]
 1192 000c 1346     		mov	r3, r2	@ movhi
 1193 000e BB80     		strh	r3, [r7, #4]	@ movhi
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 51


1656:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1194              		.loc 1 1656 0
 1195 0010 3B68     		ldr	r3, [r7]
 1196 0012 002B     		cmp	r3, #0
 1197 0014 30D0     		beq	.L60
 1198              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1199 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1200 0018 002B     		cmp	r3, #0
 1201 001a 2DD0     		beq	.L60
 1202              		.loc 1 1656 0 discriminator 2
 1203 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1204 001e 082B     		cmp	r3, #8
 1205 0020 2AD8     		bhi	.L60
1657:Generated_Source\PSoC5/USBFS_1.c ****     {
1658:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBFS_1.c ****         length = (length > USBFS_1_GetEPCount(epNumber)) ? USBFS_1_GetEPCount(epNumber) : length;
 1206              		.loc 1 1660 0 is_stmt 1
 1207 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 0024 1846     		mov	r0, r3
 1209 0026 FFF7FEFF 		bl	USBFS_1_GetEPCount
 1210 002a 0346     		mov	r3, r0
 1211 002c 1A46     		mov	r2, r3
 1212 002e BB88     		ldrh	r3, [r7, #4]
 1213 0030 9342     		cmp	r3, r2
 1214 0032 05D9     		bls	.L61
 1215              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1216 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1217 0036 1846     		mov	r0, r3
 1218 0038 FFF7FEFF 		bl	USBFS_1_GetEPCount
 1219 003c 0346     		mov	r3, r0
 1220 003e 00E0     		b	.L62
 1221              	.L61:
 1222              		.loc 1 1660 0 discriminator 2
 1223 0040 BB88     		ldrh	r3, [r7, #4]
 1224              	.L62:
 1225              		.loc 1 1660 0 discriminator 4
 1226 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 1227              	.LBB3:
1661:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBFS_1.c **** 
1663:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBFS_1.c ****         {
1665:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < length; ++i)
 1228              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1229 0044 0023     		movs	r3, #0
 1230 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1231 0048 0DE0     		b	.L63
 1232              	.L64:
1668:Generated_Source\PSoC5/USBFS_1.c ****             {
1669:Generated_Source\PSoC5/USBFS_1.c ****                 pData[i] = (uint8) USBFS_1_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1233              		.loc 1 1669 0 discriminator 3
 1234 004a FB89     		ldrh	r3, [r7, #14]
 1235 004c 3A68     		ldr	r2, [r7]
 1236 004e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 52


 1237 0050 0D49     		ldr	r1, .L67
 1238 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1239 0054 1201     		lsls	r2, r2, #4
 1240 0056 0A44     		add	r2, r2, r1
 1241 0058 0832     		adds	r2, r2, #8
 1242 005a 1278     		ldrb	r2, [r2]
 1243 005c D2B2     		uxtb	r2, r2
 1244 005e 1A70     		strb	r2, [r3]
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 1245              		.loc 1 1667 0 discriminator 3
 1246 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1247 0062 0133     		adds	r3, r3, #1
 1248 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 1249              	.L63:
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 1250              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1251 0066 FA89     		ldrh	r2, [r7, #14]
 1252 0068 BB88     		ldrh	r3, [r7, #4]
 1253 006a 9A42     		cmp	r2, r3
 1254 006c EDD3     		bcc	.L64
 1255              	.LBE3:
1670:Generated_Source\PSoC5/USBFS_1.c ****             }
1671:Generated_Source\PSoC5/USBFS_1.c ****         }
1672:Generated_Source\PSoC5/USBFS_1.c **** 
1673:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EnableOutEP(epNumber);
 1256              		.loc 1 1674 0 is_stmt 1
 1257 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1258 0070 1846     		mov	r0, r3
 1259 0072 FFF7FEFF 		bl	USBFS_1_EnableOutEP
 1260 0076 01E0     		b	.L65
 1261              	.L60:
1675:Generated_Source\PSoC5/USBFS_1.c ****     #else
1676:Generated_Source\PSoC5/USBFS_1.c **** 
1677:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBFS_1.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBFS_1.c ****             if (DMA_INVALID_TD == USBFS_1_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBFS_1.c ****             {
1681:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBFS_1.c ****             }
1683:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBFS_1.c **** 
1685:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBFS_1.c ****         {
1688:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBFS_1.c **** 
1690:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBFS_1.c **** 
1693:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBFS_1.c **** 
1697:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 53


1700:Generated_Source\PSoC5/USBFS_1.c **** 
1701:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBFS_1.c **** 
1704:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBFS_1.c ****         }
1707:Generated_Source\PSoC5/USBFS_1.c ****         #else
1708:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) &USBFS_1_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBFS_1.c **** 
1713:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBFS_1.c **** 
1718:Generated_Source\PSoC5/USBFS_1.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBFS_1.c **** 
1722:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBFS_1.c ****             */
1725:Generated_Source\PSoC5/USBFS_1.c **** 
1726:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBFS_1.c **** 
1728:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBFS_1.c ****         {
1731:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBFS_1.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBFS_1.c **** 
1734:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBFS_1.c **** 
1737:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBFS_1.c **** 
1740:Generated_Source\PSoC5/USBFS_1.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBFS_1.c **** 
1743:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBFS_1.c ****                                                                   (USBFS_1_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBFS_1.c ****                                                                   (USBFS_1_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBFS_1.c **** 
1748:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBFS_1.c **** 
1752:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (USBFS_1_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_1_
1754:Generated_Source\PSoC5/USBFS_1.c **** 
1755:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] & 0x1u)) 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 54


1757:Generated_Source\PSoC5/USBFS_1.c ****                                                                     USBFS_1_DMA_DESCR0_MASK : USBFS
1758:Generated_Source\PSoC5/USBFS_1.c **** 
1759:Generated_Source\PSoC5/USBFS_1.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCntBackup[epNumber]   = USBFS_1_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBFS_1.c **** 
1763:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBFS_1.c **** 
1766:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBFS_1.c **** 
1769:Generated_Source\PSoC5/USBFS_1.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBFS_1.c **** 
1773:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBFS_1.c **** 
1776:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBFS_1.c **** 
1780:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBFS_1.c **** 
1784:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBFS_1.c **** 
1787:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBFS_1.c **** 
1790:Generated_Source\PSoC5/USBFS_1.c ****             if (USBFS_1_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBFS_1.c ****             {
1792:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBFS_1.c ****             }
1794:Generated_Source\PSoC5/USBFS_1.c **** 
1795:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBFS_1.c ****         }
1798:Generated_Source\PSoC5/USBFS_1.c ****         #else
1799:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length,  USBFS_1_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) &USBFS_1_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBFS_1.c **** 
1803:Generated_Source\PSoC5/USBFS_1.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBFS_1.c **** 
1806:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBFS_1.c **** 
1811:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBFS_1.c ****             */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 55


1814:Generated_Source\PSoC5/USBFS_1.c **** 
1815:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBFS_1.c ****     }
1818:Generated_Source\PSoC5/USBFS_1.c ****     else
1819:Generated_Source\PSoC5/USBFS_1.c ****     {
1820:Generated_Source\PSoC5/USBFS_1.c ****         length = 0u;
 1262              		.loc 1 1820 0
 1263 0078 0023     		movs	r3, #0
 1264 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1265              	.L65:
1821:Generated_Source\PSoC5/USBFS_1.c ****     }
1822:Generated_Source\PSoC5/USBFS_1.c **** 
1823:Generated_Source\PSoC5/USBFS_1.c ****     return (length);
 1266              		.loc 1 1823 0
 1267 007c BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USBFS_1.c **** }
 1268              		.loc 1 1824 0
 1269 007e 1846     		mov	r0, r3
 1270 0080 1037     		adds	r7, r7, #16
 1271              		.cfi_def_cfa_offset 8
 1272 0082 BD46     		mov	sp, r7
 1273              		.cfi_def_cfa_register 13
 1274              		@ sp needed
 1275 0084 80BD     		pop	{r7, pc}
 1276              	.L68:
 1277 0086 00BF     		.align	2
 1278              	.L67:
 1279 0088 70600040 		.word	1073766512
 1280              		.cfi_endproc
 1281              	.LFE12:
 1282              		.size	USBFS_1_ReadOutEP, .-USBFS_1_ReadOutEP
 1283              		.section	.text.USBFS_1_EnableOutEP,"ax",%progbits
 1284              		.align	2
 1285              		.global	USBFS_1_EnableOutEP
 1286              		.thumb
 1287              		.thumb_func
 1288              		.type	USBFS_1_EnableOutEP, %function
 1289              	USBFS_1_EnableOutEP:
 1290              	.LFB13:
1825:Generated_Source\PSoC5/USBFS_1.c **** 
1826:Generated_Source\PSoC5/USBFS_1.c **** 
1827:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_LoadInEP16
1830:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBFS_1.c **** *
1832:Generated_Source\PSoC5/USBFS_1.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBFS_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBFS_1.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBFS_1.c **** *
1836:Generated_Source\PSoC5/USBFS_1.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBFS_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBFS_1.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBFS_1.c **** *
1840:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 56


1842:Generated_Source\PSoC5/USBFS_1.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBFS_1.c **** *
1844:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBFS_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBFS_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBFS_1.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBFS_1.c **** *
1850:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBFS_1.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBFS_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBFS_1.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBFS_1.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBFS_1.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBFS_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBFS_1.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBFS_1.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBFS_1.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBFS_1.c **** *
1861:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1862:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1863:Generated_Source\PSoC5/USBFS_1.c **** *
1864:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBFS_1.c **** {
1867:Generated_Source\PSoC5/USBFS_1.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBFS_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBFS_1.c **** 
1870:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1871:Generated_Source\PSoC5/USBFS_1.c ****     {
1872:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBFS_1.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBFS_1.c ****         if (length > (USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBFS_1.c ****         {
1876:Generated_Source\PSoC5/USBFS_1.c ****             length = USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBFS_1.c ****         }
1878:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBFS_1.c **** 
1880:Generated_Source\PSoC5/USBFS_1.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_1_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBFS_1.c **** 
1884:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBFS_1.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBFS_1.c **** 
1887:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBFS_1.c ****         {
1890:Generated_Source\PSoC5/USBFS_1.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBFS_1.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBFS_1.c **** 
1893:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBFS_1.c ****             {
1897:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBFS_1.c ****             }
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 57


1899:Generated_Source\PSoC5/USBFS_1.c ****         }
1900:Generated_Source\PSoC5/USBFS_1.c **** 
1901:Generated_Source\PSoC5/USBFS_1.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBFS_1.c **** 
1904:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBFS_1.c **** 
1907:Generated_Source\PSoC5/USBFS_1.c ****     #else
1908:Generated_Source\PSoC5/USBFS_1.c **** 
1909:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBFS_1.c **** 
1913:Generated_Source\PSoC5/USBFS_1.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBFS_1.c ****             {
1915:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBFS_1.c **** 
1917:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBFS_1.c **** 
1920:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP1
1923:Generated_Source\PSoC5/USBFS_1.c **** 
1924:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBFS_1.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBFS_1.c **** 
1929:Generated_Source\PSoC5/USBFS_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBFS_1.c **** 
1932:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBFS_1.c **** 
1935:Generated_Source\PSoC5/USBFS_1.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_1_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_1_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBFS_1.c **** 
1939:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBFS_1.c ****             }
1941:Generated_Source\PSoC5/USBFS_1.c ****             else
1942:Generated_Source\PSoC5/USBFS_1.c ****             {
1943:Generated_Source\PSoC5/USBFS_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBFS_1.c ****             }
1946:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBFS_1.c **** 
1948:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBFS_1.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBFS_1.c ****             {
1951:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBFS_1.c **** 
1953:Generated_Source\PSoC5/USBFS_1.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 58


1956:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBFS_1.c **** 
1959:Generated_Source\PSoC5/USBFS_1.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP1
1961:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP1
1962:Generated_Source\PSoC5/USBFS_1.c **** 
1963:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBFS_1.c **** 
1967:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBFS_1.c **** 
1971:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBFS_1.c **** 
1974:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBFS_1.c ****             }
1977:Generated_Source\PSoC5/USBFS_1.c ****             else
1978:Generated_Source\PSoC5/USBFS_1.c ****             {
1979:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBFS_1.c **** 
1982:Generated_Source\PSoC5/USBFS_1.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBFS_1.c ****                 {
1984:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBFS_1.c **** 
1987:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBFS_1.c **** 
1990:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBFS_1.c **** 
1993:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBFS_1.c **** 
1996:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBFS_1.c ****                                                                           ((USBFS_1_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBFS_1.c ****                                                                            (USBFS_1_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBFS_1.c **** 
2001:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBFS_1.c **** 
2005:Generated_Source\PSoC5/USBFS_1.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBFS_1.c ****                                                                             USBFS_1_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBFS_1.c **** 
2009:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBFS_1.c **** 
2012:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore destination address for input endpoint. */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 59


2013:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBFS_1.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBFS_1.c **** 
2017:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBFS_1.c **** 
2021:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBFS_1.c **** 
2025:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBFS_1.c ****                     if (USBFS_1_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBFS_1.c ****                     {
2028:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBFS_1.c ****                     }
2030:Generated_Source\PSoC5/USBFS_1.c **** 
2031:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstC
2033:Generated_Source\PSoC5/USBFS_1.c **** 
2034:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBFS_1.c **** 
2037:Generated_Source\PSoC5/USBFS_1.c ****                 #if !defined (USBFS_1_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBFS_1.c ****                 #endif  /* (USBFS_1_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBFS_1.c **** 
2042:Generated_Source\PSoC5/USBFS_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBFS_1.c ****                 }
2044:Generated_Source\PSoC5/USBFS_1.c ****                 else
2045:Generated_Source\PSoC5/USBFS_1.c ****                 {
2046:Generated_Source\PSoC5/USBFS_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBFS_1.c ****                 }
2049:Generated_Source\PSoC5/USBFS_1.c ****             }
2050:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBFS_1.c ****     }
2053:Generated_Source\PSoC5/USBFS_1.c **** }
2054:Generated_Source\PSoC5/USBFS_1.c **** 
2055:Generated_Source\PSoC5/USBFS_1.c **** 
2056:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReadOutEP16
2058:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBFS_1.c **** *
2060:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBFS_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBFS_1.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBFS_1.c **** *
2064:Generated_Source\PSoC5/USBFS_1.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBFS_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBFS_1.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 60


2070:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBFS_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBFS_1.c **** *   transfer after calling the USBFS_1_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBFS_1.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBFS_1.c **** *
2076:Generated_Source\PSoC5/USBFS_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBFS_1.c **** *
2078:Generated_Source\PSoC5/USBFS_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBFS_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBFS_1.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBFS_1.c **** *
2082:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBFS_1.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBFS_1.c **** *
2086:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBFS_1.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBFS_1.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBFS_1.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBFS_1.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBFS_1.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBFS_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBFS_1.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBFS_1.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBFS_1.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBFS_1.c **** *
2097:Generated_Source\PSoC5/USBFS_1.c **** * \return
2098:Generated_Source\PSoC5/USBFS_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBFS_1.c **** *
2100:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2101:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2102:Generated_Source\PSoC5/USBFS_1.c **** *
2103:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBFS_1.c **** {
2106:Generated_Source\PSoC5/USBFS_1.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBFS_1.c **** 
2108:Generated_Source\PSoC5/USBFS_1.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBFS_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBFS_1.c **** 
2111:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
2112:Generated_Source\PSoC5/USBFS_1.c ****     {
2113:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBFS_1.c ****         length = (length > USBFS_1_GetEPCount(epNumber)) ? USBFS_1_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBFS_1.c **** 
2118:Generated_Source\PSoC5/USBFS_1.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBFS_1.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBFS_1.c **** 
2121:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBFS_1.c ****         {
2123:Generated_Source\PSoC5/USBFS_1.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBFS_1.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBFS_1.c **** 
2126:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using 16-bits arbiter data register. */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 61


2127:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBFS_1.c ****             {
2130:Generated_Source\PSoC5/USBFS_1.c ****                 dataBuf[i] = (uint16) USBFS_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBFS_1.c ****             }
2132:Generated_Source\PSoC5/USBFS_1.c ****         }
2133:Generated_Source\PSoC5/USBFS_1.c **** 
2134:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBFS_1.c ****     #else
2137:Generated_Source\PSoC5/USBFS_1.c **** 
2138:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBFS_1.c ****         {
2140:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBFS_1.c **** 
2142:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBFS_1.c **** 
2145:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBFS_1.c **** 
2149:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBFS_1.c **** 
2153:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBFS_1.c **** 
2156:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBFS_1.c **** 
2159:Generated_Source\PSoC5/USBFS_1.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBFS_1.c **** 
2163:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBFS_1.c ****             */
2166:Generated_Source\PSoC5/USBFS_1.c ****         }
2167:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBFS_1.c **** 
2169:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBFS_1.c ****         {
2171:Generated_Source\PSoC5/USBFS_1.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBFS_1.c **** 
2174:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_1_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBFS_1.c **** 
2177:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_1_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBFS_1.c **** 
2180:Generated_Source\PSoC5/USBFS_1.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBFS_1.c **** 
2183:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust number of data elements transferred in last burst. */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 62


2184:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBFS_1.c ****                                                                   ((USBFS_1_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBFS_1.c ****                                                                    (USBFS_1_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBFS_1.c **** 
2188:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBFS_1.c **** 
2192:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBFS_1.c ****                                                                     USBFS_1_DMA_DESCR0_MASK : USBFS
2195:Generated_Source\PSoC5/USBFS_1.c **** 
2196:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (USBFS_1_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_1_
2198:Generated_Source\PSoC5/USBFS_1.c **** 
2199:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= USBFS_1_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBFS_1.c **** 
2202:Generated_Source\PSoC5/USBFS_1.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCntBackup[epNumber]   = USBFS_1_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBFS_1.c **** 
2206:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBFS_1.c **** 
2209:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBFS_1.c **** 
2212:Generated_Source\PSoC5/USBFS_1.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBFS_1.c **** 
2216:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBFS_1.c **** 
2219:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBFS_1.c **** 
2223:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBFS_1.c **** 
2227:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBFS_1.c **** 
2230:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBFS_1.c ****             
2233:Generated_Source\PSoC5/USBFS_1.c ****             if (USBFS_1_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBFS_1.c ****             {
2235:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBFS_1.c ****             }
2237:Generated_Source\PSoC5/USBFS_1.c **** 
2238:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 63


2241:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBFS_1.c ****             */
2244:Generated_Source\PSoC5/USBFS_1.c ****         }
2245:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBFS_1.c ****     }
2248:Generated_Source\PSoC5/USBFS_1.c ****     else
2249:Generated_Source\PSoC5/USBFS_1.c ****     {
2250:Generated_Source\PSoC5/USBFS_1.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBFS_1.c ****     }
2252:Generated_Source\PSoC5/USBFS_1.c **** 
2253:Generated_Source\PSoC5/USBFS_1.c ****     return (length);
2254:Generated_Source\PSoC5/USBFS_1.c **** }
2255:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBFS_1.c **** 
2257:Generated_Source\PSoC5/USBFS_1.c **** 
2258:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_EnableOutEP
2260:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBFS_1.c **** *
2262:Generated_Source\PSoC5/USBFS_1.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBFS_1.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBFS_1.c **** *
2265:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBFS_1.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBFS_1.c **** *
2268:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2269:Generated_Source\PSoC5/USBFS_1.c **** *
2270:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBFS_1.c **** *
2272:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2273:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2274:Generated_Source\PSoC5/USBFS_1.c **** *
2275:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBFS_1.c **** {
 1291              		.loc 1 2277 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 8
 1294              		@ frame_needed = 1, uses_anonymous_args = 0
 1295              		@ link register save eliminated.
 1296 0000 90B4     		push	{r4, r7}
 1297              		.cfi_def_cfa_offset 8
 1298              		.cfi_offset 4, -8
 1299              		.cfi_offset 7, -4
 1300 0002 82B0     		sub	sp, sp, #8
 1301              		.cfi_def_cfa_offset 16
 1302 0004 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 1304 0006 0346     		mov	r3, r0
 1305 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1306              		.loc 1 2278 0
 1307 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1308 000c 002B     		cmp	r3, #0
 1309 000e 1CD0     		beq	.L71
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 64


 1310              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1311 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1312 0012 082B     		cmp	r3, #8
 1313 0014 19D8     		bhi	.L71
2279:Generated_Source\PSoC5/USBFS_1.c ****     {
2280:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
 1314              		.loc 1 2280 0 is_stmt 1
 1315 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1316 0018 0E49     		ldr	r1, .L72
 1317 001a 1346     		mov	r3, r2
 1318 001c 5B00     		lsls	r3, r3, #1
 1319 001e 1344     		add	r3, r3, r2
 1320 0020 9B00     		lsls	r3, r3, #2
 1321 0022 0B44     		add	r3, r3, r1
 1322 0024 0133     		adds	r3, r3, #1
 1323 0026 0022     		movs	r2, #0
 1324 0028 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC5/USBFS_1.c **** 
2282:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
 1325              		.loc 1 2283 0
 1326 002a 0B48     		ldr	r0, .L72+4
 1327 002c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1328 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1329 0030 084C     		ldr	r4, .L72
 1330 0032 1346     		mov	r3, r2
 1331 0034 5B00     		lsls	r3, r3, #1
 1332 0036 1344     		add	r3, r3, r2
 1333 0038 9B00     		lsls	r3, r3, #2
 1334 003a 2344     		add	r3, r3, r4
 1335 003c 0533     		adds	r3, r3, #5
 1336 003e 1B78     		ldrb	r3, [r3]
 1337 0040 DAB2     		uxtb	r2, r3
 1338 0042 0B01     		lsls	r3, r1, #4
 1339 0044 0344     		add	r3, r3, r0
 1340 0046 0233     		adds	r3, r3, #2
 1341 0048 1A70     		strb	r2, [r3]
 1342              	.L71:
2284:Generated_Source\PSoC5/USBFS_1.c ****         
2285:Generated_Source\PSoC5/USBFS_1.c ****     }
2286:Generated_Source\PSoC5/USBFS_1.c **** }
 1343              		.loc 1 2286 0
 1344 004a 00BF     		nop
 1345 004c 0837     		adds	r7, r7, #8
 1346              		.cfi_def_cfa_offset 8
 1347 004e BD46     		mov	sp, r7
 1348              		.cfi_def_cfa_register 13
 1349              		@ sp needed
 1350 0050 90BC     		pop	{r4, r7}
 1351              		.cfi_restore 7
 1352              		.cfi_restore 4
 1353              		.cfi_def_cfa_offset 0
 1354 0052 7047     		bx	lr
 1355              	.L73:
 1356              		.align	2
 1357              	.L72:
 1358 0054 00000000 		.word	USBFS_1_EP
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 65


 1359 0058 FC5F0040 		.word	1073766396
 1360              		.cfi_endproc
 1361              	.LFE13:
 1362              		.size	USBFS_1_EnableOutEP, .-USBFS_1_EnableOutEP
 1363              		.section	.text.USBFS_1_DisableOutEP,"ax",%progbits
 1364              		.align	2
 1365              		.global	USBFS_1_DisableOutEP
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	USBFS_1_DisableOutEP, %function
 1369              	USBFS_1_DisableOutEP:
 1370              	.LFB14:
2287:Generated_Source\PSoC5/USBFS_1.c **** 
2288:Generated_Source\PSoC5/USBFS_1.c **** 
2289:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_DisableOutEP
2291:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBFS_1.c **** *
2293:Generated_Source\PSoC5/USBFS_1.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBFS_1.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBFS_1.c **** *
2296:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBFS_1.c **** *
2299:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBFS_1.c **** {
 1371              		.loc 1 2301 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 8
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376 0000 80B4     		push	{r7}
 1377              		.cfi_def_cfa_offset 4
 1378              		.cfi_offset 7, -4
 1379 0002 83B0     		sub	sp, sp, #12
 1380              		.cfi_def_cfa_offset 16
 1381 0004 00AF     		add	r7, sp, #0
 1382              		.cfi_def_cfa_register 7
 1383 0006 0346     		mov	r3, r0
 1384 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1385              		.loc 1 2302 0
 1386 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1387 000c 002B     		cmp	r3, #0
 1388 000e 09D0     		beq	.L76
 1389              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1390 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1391 0012 082B     		cmp	r3, #8
 1392 0014 06D8     		bhi	.L76
2303:Generated_Source\PSoC5/USBFS_1.c ****     {
2304:Generated_Source\PSoC5/USBFS_1.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_MODE_NAK_OUT;
 1393              		.loc 1 2305 0 is_stmt 1
 1394 0016 064A     		ldr	r2, .L77
 1395 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1396 001a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 66


 1397 001c 1344     		add	r3, r3, r2
 1398 001e 0233     		adds	r3, r3, #2
 1399 0020 0822     		movs	r2, #8
 1400 0022 1A70     		strb	r2, [r3]
 1401              	.L76:
2306:Generated_Source\PSoC5/USBFS_1.c ****     }
2307:Generated_Source\PSoC5/USBFS_1.c **** }
 1402              		.loc 1 2307 0
 1403 0024 00BF     		nop
 1404 0026 0C37     		adds	r7, r7, #12
 1405              		.cfi_def_cfa_offset 4
 1406 0028 BD46     		mov	sp, r7
 1407              		.cfi_def_cfa_register 13
 1408              		@ sp needed
 1409 002a 80BC     		pop	{r7}
 1410              		.cfi_restore 7
 1411              		.cfi_def_cfa_offset 0
 1412 002c 7047     		bx	lr
 1413              	.L78:
 1414 002e 00BF     		.align	2
 1415              	.L77:
 1416 0030 FC5F0040 		.word	1073766396
 1417              		.cfi_endproc
 1418              	.LFE14:
 1419              		.size	USBFS_1_DisableOutEP, .-USBFS_1_DisableOutEP
 1420              		.section	.text.USBFS_1_Force,"ax",%progbits
 1421              		.align	2
 1422              		.global	USBFS_1_Force
 1423              		.thumb
 1424              		.thumb_func
 1425              		.type	USBFS_1_Force, %function
 1426              	USBFS_1_Force:
 1427              	.LFB15:
2308:Generated_Source\PSoC5/USBFS_1.c **** 
2309:Generated_Source\PSoC5/USBFS_1.c **** 
2310:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Force
2312:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBFS_1.c **** *
2314:Generated_Source\PSoC5/USBFS_1.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBFS_1.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBFS_1.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBFS_1.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBFS_1.c **** *
2319:Generated_Source\PSoC5/USBFS_1.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBFS_1.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBFS_1.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBFS_1.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBFS_1.c **** *
2328:Generated_Source\PSoC5/USBFS_1.c **** *
2329:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBFS_1.c **** {
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 67


 1428              		.loc 1 2331 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 8
 1431              		@ frame_needed = 1, uses_anonymous_args = 0
 1432              		@ link register save eliminated.
 1433 0000 80B4     		push	{r7}
 1434              		.cfi_def_cfa_offset 4
 1435              		.cfi_offset 7, -4
 1436 0002 83B0     		sub	sp, sp, #12
 1437              		.cfi_def_cfa_offset 16
 1438 0004 00AF     		add	r7, sp, #0
 1439              		.cfi_def_cfa_register 7
 1440 0006 0346     		mov	r3, r0
 1441 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USBFS_1.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBFS_1.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBFS_1.c ****     */
2335:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR0_REG = bState;
 1442              		.loc 1 2335 0
 1443 000a 044A     		ldr	r2, .L80
 1444 000c FB79     		ldrb	r3, [r7, #7]
 1445 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USBFS_1.c **** }
 1446              		.loc 1 2336 0
 1447 0010 00BF     		nop
 1448 0012 0C37     		adds	r7, r7, #12
 1449              		.cfi_def_cfa_offset 4
 1450 0014 BD46     		mov	sp, r7
 1451              		.cfi_def_cfa_register 13
 1452              		@ sp needed
 1453 0016 80BC     		pop	{r7}
 1454              		.cfi_restore 7
 1455              		.cfi_def_cfa_offset 0
 1456 0018 7047     		bx	lr
 1457              	.L81:
 1458 001a 00BF     		.align	2
 1459              	.L80:
 1460 001c 10600040 		.word	1073766416
 1461              		.cfi_endproc
 1462              	.LFE15:
 1463              		.size	USBFS_1_Force, .-USBFS_1_Force
 1464              		.section	.text.USBFS_1_GetEPAckState,"ax",%progbits
 1465              		.align	2
 1466              		.global	USBFS_1_GetEPAckState
 1467              		.thumb
 1468              		.thumb_func
 1469              		.type	USBFS_1_GetEPAckState, %function
 1470              	USBFS_1_GetEPAckState:
 1471              	.LFB16:
2337:Generated_Source\PSoC5/USBFS_1.c **** 
2338:Generated_Source\PSoC5/USBFS_1.c **** 
2339:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPAckState
2341:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBFS_1.c **** *
2343:Generated_Source\PSoC5/USBFS_1.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBFS_1.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 68


2345:Generated_Source\PSoC5/USBFS_1.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBFS_1.c **** *
2347:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBFS_1.c **** *
2350:Generated_Source\PSoC5/USBFS_1.c **** *  \return
2351:Generated_Source\PSoC5/USBFS_1.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBFS_1.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBFS_1.c **** *
2354:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBFS_1.c **** {
 1472              		.loc 1 2356 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 16
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477 0000 80B4     		push	{r7}
 1478              		.cfi_def_cfa_offset 4
 1479              		.cfi_offset 7, -4
 1480 0002 85B0     		sub	sp, sp, #20
 1481              		.cfi_def_cfa_offset 24
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 0006 0346     		mov	r3, r0
 1485 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr = 0u;
 1486              		.loc 1 2357 0
 1487 000a 0023     		movs	r3, #0
 1488 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USBFS_1.c **** 
2359:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1489              		.loc 1 2359 0
 1490 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1491 0010 002B     		cmp	r3, #0
 1492 0012 0CD0     		beq	.L83
 1493              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1494 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1495 0016 082B     		cmp	r3, #8
 1496 0018 09D8     		bhi	.L83
2360:Generated_Source\PSoC5/USBFS_1.c ****     {
2361:Generated_Source\PSoC5/USBFS_1.c ****         cr = USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_1_MODE_ACKD;
 1497              		.loc 1 2361 0 is_stmt 1
 1498 001a 084A     		ldr	r2, .L85
 1499 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1500 001e 1B01     		lsls	r3, r3, #4
 1501 0020 1344     		add	r3, r3, r2
 1502 0022 0233     		adds	r3, r3, #2
 1503 0024 1B78     		ldrb	r3, [r3]
 1504 0026 DBB2     		uxtb	r3, r3
 1505 0028 03F01003 		and	r3, r3, #16
 1506 002c FB73     		strb	r3, [r7, #15]
 1507              	.L83:
2362:Generated_Source\PSoC5/USBFS_1.c ****     }
2363:Generated_Source\PSoC5/USBFS_1.c **** 
2364:Generated_Source\PSoC5/USBFS_1.c ****     return ((uint8) cr);
 1508              		.loc 1 2364 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 69


 1509 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USBFS_1.c **** }
 1510              		.loc 1 2365 0
 1511 0030 1846     		mov	r0, r3
 1512 0032 1437     		adds	r7, r7, #20
 1513              		.cfi_def_cfa_offset 4
 1514 0034 BD46     		mov	sp, r7
 1515              		.cfi_def_cfa_register 13
 1516              		@ sp needed
 1517 0036 80BC     		pop	{r7}
 1518              		.cfi_restore 7
 1519              		.cfi_def_cfa_offset 0
 1520 0038 7047     		bx	lr
 1521              	.L86:
 1522 003a 00BF     		.align	2
 1523              	.L85:
 1524 003c FC5F0040 		.word	1073766396
 1525              		.cfi_endproc
 1526              	.LFE16:
 1527              		.size	USBFS_1_GetEPAckState, .-USBFS_1_GetEPAckState
 1528              		.section	.text.USBFS_1_SetPowerStatus,"ax",%progbits
 1529              		.align	2
 1530              		.global	USBFS_1_SetPowerStatus
 1531              		.thumb
 1532              		.thumb_func
 1533              		.type	USBFS_1_SetPowerStatus, %function
 1534              	USBFS_1_SetPowerStatus:
 1535              	.LFB17:
2366:Generated_Source\PSoC5/USBFS_1.c **** 
2367:Generated_Source\PSoC5/USBFS_1.c **** 
2368:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_SetPowerStatus
2370:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBFS_1.c **** *
2372:Generated_Source\PSoC5/USBFS_1.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBFS_1.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBFS_1.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBFS_1.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBFS_1.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBFS_1.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBFS_1.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBFS_1.c **** *
2380:Generated_Source\PSoC5/USBFS_1.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBFS_1.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBFS_1.c **** *        given here:
2383:Generated_Source\PSoC5/USBFS_1.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBFS_1.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBFS_1.c **** *
2388:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2389:Generated_Source\PSoC5/USBFS_1.c **** *
2390:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBFS_1.c **** *
2392:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2393:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2394:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 70


2395:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBFS_1.c **** {
 1536              		.loc 1 2397 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 8
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
 1541 0000 80B4     		push	{r7}
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 7, -4
 1544 0002 83B0     		sub	sp, sp, #12
 1545              		.cfi_def_cfa_offset 16
 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
 1548 0006 0346     		mov	r3, r0
 1549 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USBFS_1.c ****     if (powerStatus != USBFS_1_DEVICE_STATUS_BUS_POWERED)
 1550              		.loc 1 2398 0
 1551 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1552 000c 002B     		cmp	r3, #0
 1553 000e 08D0     		beq	.L88
2399:Generated_Source\PSoC5/USBFS_1.c ****     {
2400:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_deviceStatus |= (uint8)  USBFS_1_DEVICE_STATUS_SELF_POWERED;
 1554              		.loc 1 2400 0
 1555 0010 0A4B     		ldr	r3, .L91
 1556 0012 1B78     		ldrb	r3, [r3]
 1557 0014 DBB2     		uxtb	r3, r3
 1558 0016 43F00103 		orr	r3, r3, #1
 1559 001a DAB2     		uxtb	r2, r3
 1560 001c 074B     		ldr	r3, .L91
 1561 001e 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC5/USBFS_1.c ****     }
2402:Generated_Source\PSoC5/USBFS_1.c ****     else
2403:Generated_Source\PSoC5/USBFS_1.c ****     {
2404:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_deviceStatus &= (uint8) ~USBFS_1_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC5/USBFS_1.c ****     }
2406:Generated_Source\PSoC5/USBFS_1.c **** }
 1562              		.loc 1 2406 0
 1563 0020 07E0     		b	.L90
 1564              	.L88:
2404:Generated_Source\PSoC5/USBFS_1.c ****     }
 1565              		.loc 1 2404 0
 1566 0022 064B     		ldr	r3, .L91
 1567 0024 1B78     		ldrb	r3, [r3]
 1568 0026 DBB2     		uxtb	r3, r3
 1569 0028 23F00103 		bic	r3, r3, #1
 1570 002c DAB2     		uxtb	r2, r3
 1571 002e 034B     		ldr	r3, .L91
 1572 0030 1A70     		strb	r2, [r3]
 1573              	.L90:
 1574              		.loc 1 2406 0
 1575 0032 00BF     		nop
 1576 0034 0C37     		adds	r7, r7, #12
 1577              		.cfi_def_cfa_offset 4
 1578 0036 BD46     		mov	sp, r7
 1579              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 71


 1580              		@ sp needed
 1581 0038 80BC     		pop	{r7}
 1582              		.cfi_restore 7
 1583              		.cfi_def_cfa_offset 0
 1584 003a 7047     		bx	lr
 1585              	.L92:
 1586              		.align	2
 1587              	.L91:
 1588 003c 00000000 		.word	USBFS_1_deviceStatus
 1589              		.cfi_endproc
 1590              	.LFE17:
 1591              		.size	USBFS_1_SetPowerStatus, .-USBFS_1_SetPowerStatus
 1592              		.section	.text.USBFS_1_RWUEnabled,"ax",%progbits
 1593              		.align	2
 1594              		.global	USBFS_1_RWUEnabled
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	USBFS_1_RWUEnabled, %function
 1598              	USBFS_1_RWUEnabled:
 1599              	.LFB18:
2407:Generated_Source\PSoC5/USBFS_1.c **** 
2408:Generated_Source\PSoC5/USBFS_1.c **** 
2409:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_VBusPresent
2412:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBFS_1.c ****     *
2414:Generated_Source\PSoC5/USBFS_1.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBFS_1.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBFS_1.c ****     *
2417:Generated_Source\PSoC5/USBFS_1.c ****     * \return
2418:Generated_Source\PSoC5/USBFS_1.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBFS_1.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBFS_1.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBFS_1.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBFS_1.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBFS_1.c ****     *
2424:Generated_Source\PSoC5/USBFS_1.c ****     *
2425:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBFS_1.c ****     uint8 USBFS_1_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBFS_1.c ****     {
2428:Generated_Source\PSoC5/USBFS_1.c ****         return ((0u != (USBFS_1_VBUS_STATUS_REG & USBFS_1_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBFS_1.c ****     }
2430:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBFS_1.c **** 
2432:Generated_Source\PSoC5/USBFS_1.c **** 
2433:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_RWUEnabled
2435:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBFS_1.c **** *
2437:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBFS_1.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBFS_1.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBFS_1.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBFS_1.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBFS_1.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBFS_1.c **** *  wakeup.
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 72


2444:Generated_Source\PSoC5/USBFS_1.c **** *
2445:Generated_Source\PSoC5/USBFS_1.c **** *
2446:Generated_Source\PSoC5/USBFS_1.c **** * \return
2447:Generated_Source\PSoC5/USBFS_1.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBFS_1.c **** *
2449:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2450:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBFS_1.c **** *
2452:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBFS_1.c **** {
 1600              		.loc 1 2454 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 8
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604              		@ link register save eliminated.
 1605 0000 80B4     		push	{r7}
 1606              		.cfi_def_cfa_offset 4
 1607              		.cfi_offset 7, -4
 1608 0002 83B0     		sub	sp, sp, #12
 1609              		.cfi_def_cfa_offset 16
 1610 0004 00AF     		add	r7, sp, #0
 1611              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC5/USBFS_1.c ****     uint8 result = USBFS_1_FALSE;
 1612              		.loc 1 2455 0
 1613 0006 0023     		movs	r3, #0
 1614 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USBFS_1.c **** 
2457:Generated_Source\PSoC5/USBFS_1.c ****     if (0u != (USBFS_1_deviceStatus & USBFS_1_DEVICE_STATUS_REMOTE_WAKEUP))
 1615              		.loc 1 2457 0
 1616 000a 074B     		ldr	r3, .L96
 1617 000c 1B78     		ldrb	r3, [r3]
 1618 000e DBB2     		uxtb	r3, r3
 1619 0010 03F00203 		and	r3, r3, #2
 1620 0014 002B     		cmp	r3, #0
 1621 0016 01D0     		beq	.L94
2458:Generated_Source\PSoC5/USBFS_1.c ****     {
2459:Generated_Source\PSoC5/USBFS_1.c ****         result = USBFS_1_TRUE;
 1622              		.loc 1 2459 0
 1623 0018 0123     		movs	r3, #1
 1624 001a FB71     		strb	r3, [r7, #7]
 1625              	.L94:
2460:Generated_Source\PSoC5/USBFS_1.c ****     }
2461:Generated_Source\PSoC5/USBFS_1.c **** 
2462:Generated_Source\PSoC5/USBFS_1.c ****     return (result);
 1626              		.loc 1 2462 0
 1627 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USBFS_1.c **** }
 1628              		.loc 1 2463 0
 1629 001e 1846     		mov	r0, r3
 1630 0020 0C37     		adds	r7, r7, #12
 1631              		.cfi_def_cfa_offset 4
 1632 0022 BD46     		mov	sp, r7
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed
 1635 0024 80BC     		pop	{r7}
 1636              		.cfi_restore 7
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 73


 1637              		.cfi_def_cfa_offset 0
 1638 0026 7047     		bx	lr
 1639              	.L97:
 1640              		.align	2
 1641              	.L96:
 1642 0028 00000000 		.word	USBFS_1_deviceStatus
 1643              		.cfi_endproc
 1644              	.LFE18:
 1645              		.size	USBFS_1_RWUEnabled, .-USBFS_1_RWUEnabled
 1646              		.section	.text.USBFS_1_GetDeviceAddress,"ax",%progbits
 1647              		.align	2
 1648              		.global	USBFS_1_GetDeviceAddress
 1649              		.thumb
 1650              		.thumb_func
 1651              		.type	USBFS_1_GetDeviceAddress, %function
 1652              	USBFS_1_GetDeviceAddress:
 1653              	.LFB19:
2464:Generated_Source\PSoC5/USBFS_1.c **** 
2465:Generated_Source\PSoC5/USBFS_1.c **** 
2466:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetDeviceAddress
2468:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBFS_1.c **** *
2470:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBFS_1.c **** *
2472:Generated_Source\PSoC5/USBFS_1.c **** * \return
2473:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBFS_1.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBFS_1.c **** *
2476:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBFS_1.c **** {
 1654              		.loc 1 2478 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 1, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659 0000 80B4     		push	{r7}
 1660              		.cfi_def_cfa_offset 4
 1661              		.cfi_offset 7, -4
 1662 0002 00AF     		add	r7, sp, #0
 1663              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USBFS_1.c ****     return (uint8)(USBFS_1_CR0_REG & USBFS_1_CR0_DEVICE_ADDRESS_MASK);
 1664              		.loc 1 2479 0
 1665 0004 044B     		ldr	r3, .L100
 1666 0006 1B78     		ldrb	r3, [r3]
 1667 0008 DBB2     		uxtb	r3, r3
 1668 000a 03F07F03 		and	r3, r3, #127
 1669 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USBFS_1.c **** }
 1670              		.loc 1 2480 0
 1671 0010 1846     		mov	r0, r3
 1672 0012 BD46     		mov	sp, r7
 1673              		.cfi_def_cfa_register 13
 1674              		@ sp needed
 1675 0014 80BC     		pop	{r7}
 1676              		.cfi_restore 7
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 74


 1677              		.cfi_def_cfa_offset 0
 1678 0016 7047     		bx	lr
 1679              	.L101:
 1680              		.align	2
 1681              	.L100:
 1682 0018 08600040 		.word	1073766408
 1683              		.cfi_endproc
 1684              	.LFE19:
 1685              		.size	USBFS_1_GetDeviceAddress, .-USBFS_1_GetDeviceAddress
 1686              		.section	.text.USBFS_1_EnableSofInt,"ax",%progbits
 1687              		.align	2
 1688              		.global	USBFS_1_EnableSofInt
 1689              		.thumb
 1690              		.thumb_func
 1691              		.type	USBFS_1_EnableSofInt, %function
 1692              	USBFS_1_EnableSofInt:
 1693              	.LFB20:
2481:Generated_Source\PSoC5/USBFS_1.c **** 
2482:Generated_Source\PSoC5/USBFS_1.c **** 
2483:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_EnableSofInt
2485:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBFS_1.c **** *
2487:Generated_Source\PSoC5/USBFS_1.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBFS_1.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBFS_1.c **** *
2490:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBFS_1.c **** {
 1694              		.loc 1 2492 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698              		@ link register save eliminated.
 1699 0000 80B4     		push	{r7}
 1700              		.cfi_def_cfa_offset 4
 1701              		.cfi_offset 7, -4
 1702 0002 00AF     		add	r7, sp, #0
 1703              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG |= (uint32) USBFS_1_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBFS_1.c **** #else
2497:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_SOF_VECT_NUM);
2500:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBFS_1.c **** }
 1704              		.loc 1 2502 0
 1705 0004 00BF     		nop
 1706 0006 BD46     		mov	sp, r7
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 0008 80BC     		pop	{r7}
 1710              		.cfi_restore 7
 1711              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 75


 1712 000a 7047     		bx	lr
 1713              		.cfi_endproc
 1714              	.LFE20:
 1715              		.size	USBFS_1_EnableSofInt, .-USBFS_1_EnableSofInt
 1716              		.section	.text.USBFS_1_DisableSofInt,"ax",%progbits
 1717              		.align	2
 1718              		.global	USBFS_1_DisableSofInt
 1719              		.thumb
 1720              		.thumb_func
 1721              		.type	USBFS_1_DisableSofInt, %function
 1722              	USBFS_1_DisableSofInt:
 1723              	.LFB21:
2503:Generated_Source\PSoC5/USBFS_1.c **** 
2504:Generated_Source\PSoC5/USBFS_1.c **** 
2505:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_DisableSofInt
2507:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBFS_1.c **** *
2509:Generated_Source\PSoC5/USBFS_1.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBFS_1.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBFS_1.c **** *
2512:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBFS_1.c **** {
 1724              		.loc 1 2514 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
 1729 0000 80B4     		push	{r7}
 1730              		.cfi_def_cfa_offset 4
 1731              		.cfi_offset 7, -4
 1732 0002 00AF     		add	r7, sp, #0
 1733              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG &= (uint32) ~USBFS_1_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBFS_1.c **** #else
2519:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_SOF_VECT_NUM);
2522:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USBFS_1.c **** }
 1734              		.loc 1 2524 0
 1735 0004 00BF     		nop
 1736 0006 BD46     		mov	sp, r7
 1737              		.cfi_def_cfa_register 13
 1738              		@ sp needed
 1739 0008 80BC     		pop	{r7}
 1740              		.cfi_restore 7
 1741              		.cfi_def_cfa_offset 0
 1742 000a 7047     		bx	lr
 1743              		.cfi_endproc
 1744              	.LFE21:
 1745              		.size	USBFS_1_DisableSofInt, .-USBFS_1_DisableSofInt
 1746              		.text
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 76


 1747              	.Letext0:
 1748              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1749              		.file 3 "Generated_Source\\PSoC5\\USBFS_1.h"
 1750              		.file 4 "Generated_Source\\PSoC5\\USBFS_1_pvt.h"
 1751              		.section	.debug_info,"",%progbits
 1752              	.Ldebug_info0:
 1753 0000 13070000 		.4byte	0x713
 1754 0004 0400     		.2byte	0x4
 1755 0006 00000000 		.4byte	.Ldebug_abbrev0
 1756 000a 04       		.byte	0x4
 1757 000b 01       		.uleb128 0x1
 1758 000c 44000000 		.4byte	.LASF92
 1759 0010 0C       		.byte	0xc
 1760 0011 19040000 		.4byte	.LASF93
 1761 0015 44040000 		.4byte	.LASF94
 1762 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1763 001d 00000000 		.4byte	0
 1764 0021 00000000 		.4byte	.Ldebug_line0
 1765 0025 02       		.uleb128 0x2
 1766 0026 01       		.byte	0x1
 1767 0027 06       		.byte	0x6
 1768 0028 43010000 		.4byte	.LASF0
 1769 002c 02       		.uleb128 0x2
 1770 002d 01       		.byte	0x1
 1771 002e 08       		.byte	0x8
 1772 002f 0B040000 		.4byte	.LASF1
 1773 0033 02       		.uleb128 0x2
 1774 0034 02       		.byte	0x2
 1775 0035 05       		.byte	0x5
 1776 0036 3A040000 		.4byte	.LASF2
 1777 003a 02       		.uleb128 0x2
 1778 003b 02       		.byte	0x2
 1779 003c 07       		.byte	0x7
 1780 003d B4020000 		.4byte	.LASF3
 1781 0041 02       		.uleb128 0x2
 1782 0042 04       		.byte	0x4
 1783 0043 05       		.byte	0x5
 1784 0044 54010000 		.4byte	.LASF4
 1785 0048 02       		.uleb128 0x2
 1786 0049 04       		.byte	0x4
 1787 004a 07       		.byte	0x7
 1788 004b 40020000 		.4byte	.LASF5
 1789 004f 02       		.uleb128 0x2
 1790 0050 08       		.byte	0x8
 1791 0051 05       		.byte	0x5
 1792 0052 35010000 		.4byte	.LASF6
 1793 0056 02       		.uleb128 0x2
 1794 0057 08       		.byte	0x8
 1795 0058 07       		.byte	0x7
 1796 0059 E2000000 		.4byte	.LASF7
 1797 005d 03       		.uleb128 0x3
 1798 005e 04       		.byte	0x4
 1799 005f 05       		.byte	0x5
 1800 0060 696E7400 		.ascii	"int\000"
 1801 0064 02       		.uleb128 0x2
 1802 0065 04       		.byte	0x4
 1803 0066 07       		.byte	0x7
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 77


 1804 0067 07020000 		.4byte	.LASF8
 1805 006b 04       		.uleb128 0x4
 1806 006c 6F010000 		.4byte	.LASF9
 1807 0070 02       		.byte	0x2
 1808 0071 E401     		.2byte	0x1e4
 1809 0073 2C000000 		.4byte	0x2c
 1810 0077 04       		.uleb128 0x4
 1811 0078 00000000 		.4byte	.LASF10
 1812 007c 02       		.byte	0x2
 1813 007d E501     		.2byte	0x1e5
 1814 007f 3A000000 		.4byte	0x3a
 1815 0083 04       		.uleb128 0x4
 1816 0084 B7010000 		.4byte	.LASF11
 1817 0088 02       		.byte	0x2
 1818 0089 E601     		.2byte	0x1e6
 1819 008b 48000000 		.4byte	0x48
 1820 008f 02       		.uleb128 0x2
 1821 0090 04       		.byte	0x4
 1822 0091 04       		.byte	0x4
 1823 0092 C9030000 		.4byte	.LASF12
 1824 0096 02       		.uleb128 0x2
 1825 0097 08       		.byte	0x8
 1826 0098 04       		.byte	0x4
 1827 0099 8A010000 		.4byte	.LASF13
 1828 009d 02       		.uleb128 0x2
 1829 009e 01       		.byte	0x1
 1830 009f 08       		.byte	0x8
 1831 00a0 0E050000 		.4byte	.LASF14
 1832 00a4 04       		.uleb128 0x4
 1833 00a5 06040000 		.4byte	.LASF15
 1834 00a9 02       		.byte	0x2
 1835 00aa 8E02     		.2byte	0x28e
 1836 00ac B0000000 		.4byte	0xb0
 1837 00b0 05       		.uleb128 0x5
 1838 00b1 6B000000 		.4byte	0x6b
 1839 00b5 04       		.uleb128 0x4
 1840 00b6 20030000 		.4byte	.LASF16
 1841 00ba 02       		.byte	0x2
 1842 00bb 9002     		.2byte	0x290
 1843 00bd C1000000 		.4byte	0xc1
 1844 00c1 05       		.uleb128 0x5
 1845 00c2 83000000 		.4byte	0x83
 1846 00c6 02       		.uleb128 0x2
 1847 00c7 08       		.byte	0x8
 1848 00c8 04       		.byte	0x4
 1849 00c9 65030000 		.4byte	.LASF17
 1850 00cd 02       		.uleb128 0x2
 1851 00ce 04       		.byte	0x4
 1852 00cf 07       		.byte	0x7
 1853 00d0 49030000 		.4byte	.LASF18
 1854 00d4 06       		.uleb128 0x6
 1855 00d5 0C       		.byte	0xc
 1856 00d6 03       		.byte	0x3
 1857 00d7 8A       		.byte	0x8a
 1858 00d8 49010000 		.4byte	0x149
 1859 00dc 07       		.uleb128 0x7
 1860 00dd 71030000 		.4byte	.LASF19
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 78


 1861 00e1 03       		.byte	0x3
 1862 00e2 8C       		.byte	0x8c
 1863 00e3 6B000000 		.4byte	0x6b
 1864 00e7 00       		.byte	0
 1865 00e8 07       		.uleb128 0x7
 1866 00e9 CF030000 		.4byte	.LASF20
 1867 00ed 03       		.byte	0x3
 1868 00ee 8D       		.byte	0x8d
 1869 00ef 6B000000 		.4byte	0x6b
 1870 00f3 01       		.byte	0x1
 1871 00f4 07       		.uleb128 0x7
 1872 00f5 26030000 		.4byte	.LASF21
 1873 00f9 03       		.byte	0x3
 1874 00fa 8E       		.byte	0x8e
 1875 00fb 6B000000 		.4byte	0x6b
 1876 00ff 02       		.byte	0x2
 1877 0100 07       		.uleb128 0x7
 1878 0101 75010000 		.4byte	.LASF22
 1879 0105 03       		.byte	0x3
 1880 0106 8F       		.byte	0x8f
 1881 0107 6B000000 		.4byte	0x6b
 1882 010b 03       		.byte	0x3
 1883 010c 07       		.uleb128 0x7
 1884 010d 0F010000 		.4byte	.LASF23
 1885 0111 03       		.byte	0x3
 1886 0112 90       		.byte	0x90
 1887 0113 6B000000 		.4byte	0x6b
 1888 0117 04       		.byte	0x4
 1889 0118 07       		.uleb128 0x7
 1890 0119 CA010000 		.4byte	.LASF24
 1891 011d 03       		.byte	0x3
 1892 011e 91       		.byte	0x91
 1893 011f 6B000000 		.4byte	0x6b
 1894 0123 05       		.byte	0x5
 1895 0124 07       		.uleb128 0x7
 1896 0125 23050000 		.4byte	.LASF25
 1897 0129 03       		.byte	0x3
 1898 012a 92       		.byte	0x92
 1899 012b 77000000 		.4byte	0x77
 1900 012f 06       		.byte	0x6
 1901 0130 07       		.uleb128 0x7
 1902 0131 18050000 		.4byte	.LASF26
 1903 0135 03       		.byte	0x3
 1904 0136 93       		.byte	0x93
 1905 0137 77000000 		.4byte	0x77
 1906 013b 08       		.byte	0x8
 1907 013c 07       		.uleb128 0x7
 1908 013d 0F030000 		.4byte	.LASF27
 1909 0141 03       		.byte	0x3
 1910 0142 94       		.byte	0x94
 1911 0143 6B000000 		.4byte	0x6b
 1912 0147 0A       		.byte	0xa
 1913 0148 00       		.byte	0
 1914 0149 08       		.uleb128 0x8
 1915 014a C7020000 		.4byte	.LASF28
 1916 014e 03       		.byte	0x3
 1917 014f 95       		.byte	0x95
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 79


 1918 0150 D4000000 		.4byte	0xd4
 1919 0154 06       		.uleb128 0x6
 1920 0155 10       		.byte	0x10
 1921 0156 03       		.byte	0x3
 1922 0157 D1       		.byte	0xd1
 1923 0158 8D010000 		.4byte	0x18d
 1924 015c 07       		.uleb128 0x7
 1925 015d 9F030000 		.4byte	.LASF29
 1926 0161 03       		.byte	0x3
 1927 0162 D3       		.byte	0xd3
 1928 0163 6B000000 		.4byte	0x6b
 1929 0167 00       		.byte	0
 1930 0168 07       		.uleb128 0x7
 1931 0169 A6030000 		.4byte	.LASF30
 1932 016d 03       		.byte	0x3
 1933 016e D4       		.byte	0xd4
 1934 016f 6B000000 		.4byte	0x6b
 1935 0173 01       		.byte	0x1
 1936 0174 07       		.uleb128 0x7
 1937 0175 C3030000 		.4byte	.LASF31
 1938 0179 03       		.byte	0x3
 1939 017a D5       		.byte	0xd5
 1940 017b 6B000000 		.4byte	0x6b
 1941 017f 02       		.byte	0x2
 1942 0180 09       		.uleb128 0x9
 1943 0181 67617000 		.ascii	"gap\000"
 1944 0185 03       		.byte	0x3
 1945 0186 D6       		.byte	0xd6
 1946 0187 8D010000 		.4byte	0x18d
 1947 018b 03       		.byte	0x3
 1948 018c 00       		.byte	0
 1949 018d 0A       		.uleb128 0xa
 1950 018e 6B000000 		.4byte	0x6b
 1951 0192 9D010000 		.4byte	0x19d
 1952 0196 0B       		.uleb128 0xb
 1953 0197 CD000000 		.4byte	0xcd
 1954 019b 0C       		.byte	0xc
 1955 019c 00       		.byte	0
 1956 019d 08       		.uleb128 0x8
 1957 019e AD030000 		.4byte	.LASF32
 1958 01a2 03       		.byte	0x3
 1959 01a3 D7       		.byte	0xd7
 1960 01a4 54010000 		.4byte	0x154
 1961 01a8 06       		.uleb128 0x6
 1962 01a9 10       		.byte	0x10
 1963 01aa 03       		.byte	0x3
 1964 01ab E3       		.byte	0xe3
 1965 01ac 29020000 		.4byte	0x229
 1966 01b0 07       		.uleb128 0x7
 1967 01b1 14010000 		.4byte	.LASF33
 1968 01b5 03       		.byte	0x3
 1969 01b6 E5       		.byte	0xe5
 1970 01b7 6B000000 		.4byte	0x6b
 1971 01bb 00       		.byte	0
 1972 01bc 07       		.uleb128 0x7
 1973 01bd AF050000 		.4byte	.LASF34
 1974 01c1 03       		.byte	0x3
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 80


 1975 01c2 E6       		.byte	0xe6
 1976 01c3 6B000000 		.4byte	0x6b
 1977 01c7 01       		.byte	0x1
 1978 01c8 07       		.uleb128 0x7
 1979 01c9 B2010000 		.4byte	.LASF35
 1980 01cd 03       		.byte	0x3
 1981 01ce E7       		.byte	0xe7
 1982 01cf 6B000000 		.4byte	0x6b
 1983 01d3 02       		.byte	0x2
 1984 01d4 07       		.uleb128 0x7
 1985 01d5 E9010000 		.4byte	.LASF36
 1986 01d9 03       		.byte	0x3
 1987 01da E8       		.byte	0xe8
 1988 01db 6B000000 		.4byte	0x6b
 1989 01df 03       		.byte	0x3
 1990 01e0 07       		.uleb128 0x7
 1991 01e1 7E010000 		.4byte	.LASF37
 1992 01e5 03       		.byte	0x3
 1993 01e6 E9       		.byte	0xe9
 1994 01e7 6B000000 		.4byte	0x6b
 1995 01eb 04       		.byte	0x4
 1996 01ec 07       		.uleb128 0x7
 1997 01ed BF040000 		.4byte	.LASF38
 1998 01f1 03       		.byte	0x3
 1999 01f2 EA       		.byte	0xea
 2000 01f3 6B000000 		.4byte	0x6b
 2001 01f7 05       		.byte	0x5
 2002 01f8 07       		.uleb128 0x7
 2003 01f9 BA040000 		.4byte	.LASF39
 2004 01fd 03       		.byte	0x3
 2005 01fe EB       		.byte	0xeb
 2006 01ff 6B000000 		.4byte	0x6b
 2007 0203 06       		.byte	0x6
 2008 0204 07       		.uleb128 0x7
 2009 0205 97030000 		.4byte	.LASF40
 2010 0209 03       		.byte	0x3
 2011 020a EC       		.byte	0xec
 2012 020b 6B000000 		.4byte	0x6b
 2013 020f 07       		.byte	0x7
 2014 0210 07       		.uleb128 0x7
 2015 0211 95050000 		.4byte	.LASF41
 2016 0215 03       		.byte	0x3
 2017 0216 ED       		.byte	0xed
 2018 0217 6B000000 		.4byte	0x6b
 2019 021b 08       		.byte	0x8
 2020 021c 09       		.uleb128 0x9
 2021 021d 67617000 		.ascii	"gap\000"
 2022 0221 03       		.byte	0x3
 2023 0222 EE       		.byte	0xee
 2024 0223 29020000 		.4byte	0x229
 2025 0227 09       		.byte	0x9
 2026 0228 00       		.byte	0
 2027 0229 0A       		.uleb128 0xa
 2028 022a 6B000000 		.4byte	0x6b
 2029 022e 39020000 		.4byte	0x239
 2030 0232 0B       		.uleb128 0xb
 2031 0233 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 81


 2032 0237 06       		.byte	0x6
 2033 0238 00       		.byte	0
 2034 0239 08       		.uleb128 0x8
 2035 023a 2A020000 		.4byte	.LASF42
 2036 023e 03       		.byte	0x3
 2037 023f EF       		.byte	0xef
 2038 0240 A8010000 		.4byte	0x1a8
 2039 0244 0C       		.uleb128 0xc
 2040 0245 90       		.byte	0x90
 2041 0246 03       		.byte	0x3
 2042 0247 0B01     		.2byte	0x10b
 2043 0249 5B020000 		.4byte	0x25b
 2044 024d 0D       		.uleb128 0xd
 2045 024e C4010000 		.4byte	.LASF43
 2046 0252 03       		.byte	0x3
 2047 0253 0D01     		.2byte	0x10d
 2048 0255 5B020000 		.4byte	0x25b
 2049 0259 00       		.byte	0
 2050 025a 00       		.byte	0
 2051 025b 0A       		.uleb128 0xa
 2052 025c 9D010000 		.4byte	0x19d
 2053 0260 6B020000 		.4byte	0x26b
 2054 0264 0B       		.uleb128 0xb
 2055 0265 CD000000 		.4byte	0xcd
 2056 0269 08       		.byte	0x8
 2057 026a 00       		.byte	0
 2058 026b 04       		.uleb128 0x4
 2059 026c 5F020000 		.4byte	.LASF44
 2060 0270 03       		.byte	0x3
 2061 0271 0E01     		.2byte	0x10e
 2062 0273 44020000 		.4byte	0x244
 2063 0277 0C       		.uleb128 0xc
 2064 0278 90       		.byte	0x90
 2065 0279 03       		.byte	0x3
 2066 027a 1101     		.2byte	0x111
 2067 027c 8E020000 		.4byte	0x28e
 2068 0280 0D       		.uleb128 0xd
 2069 0281 09030000 		.4byte	.LASF45
 2070 0285 03       		.byte	0x3
 2071 0286 1301     		.2byte	0x113
 2072 0288 8E020000 		.4byte	0x28e
 2073 028c 00       		.byte	0
 2074 028d 00       		.byte	0
 2075 028e 0A       		.uleb128 0xa
 2076 028f 39020000 		.4byte	0x239
 2077 0293 9E020000 		.4byte	0x29e
 2078 0297 0B       		.uleb128 0xb
 2079 0298 CD000000 		.4byte	0xcd
 2080 029c 08       		.byte	0x8
 2081 029d 00       		.byte	0
 2082 029e 04       		.uleb128 0x4
 2083 029f 76020000 		.4byte	.LASF46
 2084 02a3 03       		.byte	0x3
 2085 02a4 1401     		.2byte	0x114
 2086 02a6 77020000 		.4byte	0x277
 2087 02aa 0E       		.uleb128 0xe
 2088 02ab A6020000 		.4byte	.LASF49
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 82


 2089 02af 01       		.byte	0x1
 2090 02b0 BA       		.byte	0xba
 2091 02b1 00000000 		.4byte	.LFB0
 2092 02b5 3C000000 		.4byte	.LFE0-.LFB0
 2093 02b9 01       		.uleb128 0x1
 2094 02ba 9C       		.byte	0x9c
 2095 02bb DC020000 		.4byte	0x2dc
 2096 02bf 0F       		.uleb128 0xf
 2097 02c0 2E010000 		.4byte	.LASF47
 2098 02c4 01       		.byte	0x1
 2099 02c5 BA       		.byte	0xba
 2100 02c6 6B000000 		.4byte	0x6b
 2101 02ca 02       		.uleb128 0x2
 2102 02cb 91       		.byte	0x91
 2103 02cc 77       		.sleb128 -9
 2104 02cd 0F       		.uleb128 0xf
 2105 02ce 13050000 		.4byte	.LASF48
 2106 02d2 01       		.byte	0x1
 2107 02d3 BA       		.byte	0xba
 2108 02d4 6B000000 		.4byte	0x6b
 2109 02d8 02       		.uleb128 0x2
 2110 02d9 91       		.byte	0x91
 2111 02da 76       		.sleb128 -10
 2112 02db 00       		.byte	0
 2113 02dc 0E       		.uleb128 0xe
 2114 02dd 01050000 		.4byte	.LASF50
 2115 02e1 01       		.byte	0x1
 2116 02e2 D3       		.byte	0xd3
 2117 02e3 00000000 		.4byte	.LFB1
 2118 02e7 68010000 		.4byte	.LFE1-.LFB1
 2119 02eb 01       		.uleb128 0x1
 2120 02ec 9C       		.byte	0x9c
 2121 02ed 00030000 		.4byte	0x300
 2122 02f1 10       		.uleb128 0x10
 2123 02f2 84050000 		.4byte	.LASF53
 2124 02f6 01       		.byte	0x1
 2125 02f7 FA       		.byte	0xfa
 2126 02f8 6B000000 		.4byte	0x6b
 2127 02fc 02       		.uleb128 0x2
 2128 02fd 91       		.byte	0x91
 2129 02fe 77       		.sleb128 -9
 2130 02ff 00       		.byte	0
 2131 0300 11       		.uleb128 0x11
 2132 0301 EB040000 		.4byte	.LASF51
 2133 0305 01       		.byte	0x1
 2134 0306 CC01     		.2byte	0x1cc
 2135 0308 00000000 		.4byte	.LFB2
 2136 030c EC000000 		.4byte	.LFE2-.LFB2
 2137 0310 01       		.uleb128 0x1
 2138 0311 9C       		.byte	0x9c
 2139 0312 35030000 		.4byte	0x335
 2140 0316 12       		.uleb128 0x12
 2141 0317 2E010000 		.4byte	.LASF47
 2142 031b 01       		.byte	0x1
 2143 031c CC01     		.2byte	0x1cc
 2144 031e 6B000000 		.4byte	0x6b
 2145 0322 02       		.uleb128 0x2
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 83


 2146 0323 91       		.byte	0x91
 2147 0324 77       		.sleb128 -9
 2148 0325 12       		.uleb128 0x12
 2149 0326 13050000 		.4byte	.LASF48
 2150 032a 01       		.byte	0x1
 2151 032b CC01     		.2byte	0x1cc
 2152 032d 6B000000 		.4byte	0x6b
 2153 0331 02       		.uleb128 0x2
 2154 0332 91       		.byte	0x91
 2155 0333 76       		.sleb128 -10
 2156 0334 00       		.byte	0
 2157 0335 13       		.uleb128 0x13
 2158 0336 EA050000 		.4byte	.LASF78
 2159 033a 01       		.byte	0x1
 2160 033b 9F02     		.2byte	0x29f
 2161 033d 00000000 		.4byte	.LFB3
 2162 0341 68000000 		.4byte	.LFE3-.LFB3
 2163 0345 01       		.uleb128 0x1
 2164 0346 9C       		.byte	0x9c
 2165 0347 11       		.uleb128 0x11
 2166 0348 52020000 		.4byte	.LASF52
 2167 034c 01       		.byte	0x1
 2168 034d D902     		.2byte	0x2d9
 2169 034f 00000000 		.4byte	.LFB4
 2170 0353 F8000000 		.4byte	.LFE4-.LFB4
 2171 0357 01       		.uleb128 0x1
 2172 0358 9C       		.byte	0x9c
 2173 0359 6D030000 		.4byte	0x36d
 2174 035d 14       		.uleb128 0x14
 2175 035e 84050000 		.4byte	.LASF53
 2176 0362 01       		.byte	0x1
 2177 0363 DB02     		.2byte	0x2db
 2178 0365 6B000000 		.4byte	0x6b
 2179 0369 02       		.uleb128 0x2
 2180 036a 91       		.byte	0x91
 2181 036b 77       		.sleb128 -9
 2182 036c 00       		.byte	0
 2183 036d 15       		.uleb128 0x15
 2184 036e 2E000000 		.4byte	.LASF55
 2185 0372 01       		.byte	0x1
 2186 0373 5103     		.2byte	0x351
 2187 0375 6B000000 		.4byte	0x6b
 2188 0379 00000000 		.4byte	.LFB5
 2189 037d 38000000 		.4byte	.LFE5-.LFB5
 2190 0381 01       		.uleb128 0x1
 2191 0382 9C       		.byte	0x9c
 2192 0383 97030000 		.4byte	0x397
 2193 0387 14       		.uleb128 0x14
 2194 0388 19030000 		.4byte	.LASF54
 2195 038c 01       		.byte	0x1
 2196 038d 5303     		.2byte	0x353
 2197 038f 6B000000 		.4byte	0x6b
 2198 0393 02       		.uleb128 0x2
 2199 0394 91       		.byte	0x91
 2200 0395 77       		.sleb128 -9
 2201 0396 00       		.byte	0
 2202 0397 16       		.uleb128 0x16
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 84


 2203 0398 30030000 		.4byte	.LASF76
 2204 039c 01       		.byte	0x1
 2205 039d 6803     		.2byte	0x368
 2206 039f 6B000000 		.4byte	0x6b
 2207 03a3 00000000 		.4byte	.LFB6
 2208 03a7 18000000 		.4byte	.LFE6-.LFB6
 2209 03ab 01       		.uleb128 0x1
 2210 03ac 9C       		.byte	0x9c
 2211 03ad 15       		.uleb128 0x15
 2212 03ae 78030000 		.4byte	.LASF56
 2213 03b2 01       		.byte	0x1
 2214 03b3 8203     		.2byte	0x382
 2215 03b5 6B000000 		.4byte	0x6b
 2216 03b9 00000000 		.4byte	.LFB7
 2217 03bd 30000000 		.4byte	.LFE7-.LFB7
 2218 03c1 01       		.uleb128 0x1
 2219 03c2 9C       		.byte	0x9c
 2220 03c3 D7030000 		.4byte	0x3d7
 2221 03c7 17       		.uleb128 0x17
 2222 03c8 72657300 		.ascii	"res\000"
 2223 03cc 01       		.byte	0x1
 2224 03cd 8403     		.2byte	0x384
 2225 03cf 6B000000 		.4byte	0x6b
 2226 03d3 02       		.uleb128 0x2
 2227 03d4 91       		.byte	0x91
 2228 03d5 77       		.sleb128 -9
 2229 03d6 00       		.byte	0
 2230 03d7 15       		.uleb128 0x15
 2231 03d8 CE050000 		.4byte	.LASF57
 2232 03dc 01       		.byte	0x1
 2233 03dd 9F03     		.2byte	0x39f
 2234 03df 6B000000 		.4byte	0x6b
 2235 03e3 00000000 		.4byte	.LFB8
 2236 03e7 20000000 		.4byte	.LFE8-.LFB8
 2237 03eb 01       		.uleb128 0x1
 2238 03ec 9C       		.byte	0x9c
 2239 03ed 01040000 		.4byte	0x401
 2240 03f1 12       		.uleb128 0x12
 2241 03f2 2E050000 		.4byte	.LASF58
 2242 03f6 01       		.byte	0x1
 2243 03f7 9F03     		.2byte	0x39f
 2244 03f9 6B000000 		.4byte	0x6b
 2245 03fd 02       		.uleb128 0x2
 2246 03fe 91       		.byte	0x91
 2247 03ff 77       		.sleb128 -9
 2248 0400 00       		.byte	0
 2249 0401 15       		.uleb128 0x15
 2250 0402 52030000 		.4byte	.LASF59
 2251 0406 01       		.byte	0x1
 2252 0407 BF03     		.2byte	0x3bf
 2253 0409 6B000000 		.4byte	0x6b
 2254 040d 00000000 		.4byte	.LFB9
 2255 0411 2C000000 		.4byte	.LFE9-.LFB9
 2256 0415 01       		.uleb128 0x1
 2257 0416 9C       		.byte	0x9c
 2258 0417 2B040000 		.4byte	0x42b
 2259 041b 12       		.uleb128 0x12
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 85


 2260 041c 25010000 		.4byte	.LASF60
 2261 0420 01       		.byte	0x1
 2262 0421 BF03     		.2byte	0x3bf
 2263 0423 6B000000 		.4byte	0x6b
 2264 0427 02       		.uleb128 0x2
 2265 0428 91       		.byte	0x91
 2266 0429 77       		.sleb128 -9
 2267 042a 00       		.byte	0
 2268 042b 15       		.uleb128 0x15
 2269 042c F3030000 		.4byte	.LASF61
 2270 0430 01       		.byte	0x1
 2271 0431 D603     		.2byte	0x3d6
 2272 0433 77000000 		.4byte	0x77
 2273 0437 00000000 		.4byte	.LFB10
 2274 043b 60000000 		.4byte	.LFE10-.LFB10
 2275 043f 01       		.uleb128 0x1
 2276 0440 9C       		.byte	0x9c
 2277 0441 64040000 		.4byte	0x464
 2278 0445 12       		.uleb128 0x12
 2279 0446 25010000 		.4byte	.LASF60
 2280 044a 01       		.byte	0x1
 2281 044b D603     		.2byte	0x3d6
 2282 044d 6B000000 		.4byte	0x6b
 2283 0451 02       		.uleb128 0x2
 2284 0452 91       		.byte	0x91
 2285 0453 6F       		.sleb128 -17
 2286 0454 14       		.uleb128 0x14
 2287 0455 4F010000 		.4byte	.LASF62
 2288 0459 01       		.byte	0x1
 2289 045a D803     		.2byte	0x3d8
 2290 045c 77000000 		.4byte	0x77
 2291 0460 02       		.uleb128 0x2
 2292 0461 91       		.byte	0x91
 2293 0462 76       		.sleb128 -10
 2294 0463 00       		.byte	0
 2295 0464 18       		.uleb128 0x18
 2296 0465 07000000 		.4byte	.LASF63
 2297 0469 01       		.byte	0x1
 2298 046a 3E05     		.2byte	0x53e
 2299 046c 00000000 		.4byte	.LFB11
 2300 0470 08010000 		.4byte	.LFE11-.LFB11
 2301 0474 01       		.uleb128 0x1
 2302 0475 9C       		.byte	0x9c
 2303 0476 BF040000 		.4byte	0x4bf
 2304 047a 12       		.uleb128 0x12
 2305 047b 25010000 		.4byte	.LASF60
 2306 047f 01       		.byte	0x1
 2307 0480 3E05     		.2byte	0x53e
 2308 0482 6B000000 		.4byte	0x6b
 2309 0486 02       		.uleb128 0x2
 2310 0487 91       		.byte	0x91
 2311 0488 67       		.sleb128 -25
 2312 0489 12       		.uleb128 0x12
 2313 048a BE010000 		.4byte	.LASF64
 2314 048e 01       		.byte	0x1
 2315 048f 3E05     		.2byte	0x53e
 2316 0491 BF040000 		.4byte	0x4bf
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 86


 2317 0495 02       		.uleb128 0x2
 2318 0496 91       		.byte	0x91
 2319 0497 60       		.sleb128 -32
 2320 0498 12       		.uleb128 0x12
 2321 0499 7D050000 		.4byte	.LASF65
 2322 049d 01       		.byte	0x1
 2323 049e 3E05     		.2byte	0x53e
 2324 04a0 77000000 		.4byte	0x77
 2325 04a4 02       		.uleb128 0x2
 2326 04a5 91       		.byte	0x91
 2327 04a6 64       		.sleb128 -28
 2328 04a7 19       		.uleb128 0x19
 2329 04a8 96000000 		.4byte	.LBB2
 2330 04ac 28000000 		.4byte	.LBE2-.LBB2
 2331 04b0 17       		.uleb128 0x17
 2332 04b1 6900     		.ascii	"i\000"
 2333 04b3 01       		.byte	0x1
 2334 04b4 5305     		.2byte	0x553
 2335 04b6 77000000 		.4byte	0x77
 2336 04ba 02       		.uleb128 0x2
 2337 04bb 91       		.byte	0x91
 2338 04bc 6E       		.sleb128 -18
 2339 04bd 00       		.byte	0
 2340 04be 00       		.byte	0
 2341 04bf 1A       		.uleb128 0x1a
 2342 04c0 04       		.byte	0x4
 2343 04c1 C5040000 		.4byte	0x4c5
 2344 04c5 1B       		.uleb128 0x1b
 2345 04c6 6B000000 		.4byte	0x6b
 2346 04ca 1C       		.uleb128 0x1c
 2347 04cb 5D010000 		.4byte	.LASF66
 2348 04cf 01       		.byte	0x1
 2349 04d0 7506     		.2byte	0x675
 2350 04d2 77000000 		.4byte	0x77
 2351 04d6 00000000 		.4byte	.LFB12
 2352 04da 8C000000 		.4byte	.LFE12-.LFB12
 2353 04de 01       		.uleb128 0x1
 2354 04df 9C       		.byte	0x9c
 2355 04e0 29050000 		.4byte	0x529
 2356 04e4 12       		.uleb128 0x12
 2357 04e5 25010000 		.4byte	.LASF60
 2358 04e9 01       		.byte	0x1
 2359 04ea 7506     		.2byte	0x675
 2360 04ec 6B000000 		.4byte	0x6b
 2361 04f0 02       		.uleb128 0x2
 2362 04f1 91       		.byte	0x91
 2363 04f2 6F       		.sleb128 -17
 2364 04f3 12       		.uleb128 0x12
 2365 04f4 BE010000 		.4byte	.LASF64
 2366 04f8 01       		.byte	0x1
 2367 04f9 7506     		.2byte	0x675
 2368 04fb 29050000 		.4byte	0x529
 2369 04ff 02       		.uleb128 0x2
 2370 0500 91       		.byte	0x91
 2371 0501 68       		.sleb128 -24
 2372 0502 12       		.uleb128 0x12
 2373 0503 7D050000 		.4byte	.LASF65
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 87


 2374 0507 01       		.byte	0x1
 2375 0508 7506     		.2byte	0x675
 2376 050a 77000000 		.4byte	0x77
 2377 050e 02       		.uleb128 0x2
 2378 050f 91       		.byte	0x91
 2379 0510 6C       		.sleb128 -20
 2380 0511 19       		.uleb128 0x19
 2381 0512 44000000 		.4byte	.LBB3
 2382 0516 2A000000 		.4byte	.LBE3-.LBB3
 2383 051a 17       		.uleb128 0x17
 2384 051b 6900     		.ascii	"i\000"
 2385 051d 01       		.byte	0x1
 2386 051e 8206     		.2byte	0x682
 2387 0520 77000000 		.4byte	0x77
 2388 0524 02       		.uleb128 0x2
 2389 0525 91       		.byte	0x91
 2390 0526 76       		.sleb128 -10
 2391 0527 00       		.byte	0
 2392 0528 00       		.byte	0
 2393 0529 1A       		.uleb128 0x1a
 2394 052a 04       		.byte	0x4
 2395 052b 6B000000 		.4byte	0x6b
 2396 052f 18       		.uleb128 0x18
 2397 0530 F5020000 		.4byte	.LASF67
 2398 0534 01       		.byte	0x1
 2399 0535 E408     		.2byte	0x8e4
 2400 0537 00000000 		.4byte	.LFB13
 2401 053b 5C000000 		.4byte	.LFE13-.LFB13
 2402 053f 01       		.uleb128 0x1
 2403 0540 9C       		.byte	0x9c
 2404 0541 55050000 		.4byte	0x555
 2405 0545 12       		.uleb128 0x12
 2406 0546 25010000 		.4byte	.LASF60
 2407 054a 01       		.byte	0x1
 2408 054b E408     		.2byte	0x8e4
 2409 054d 6B000000 		.4byte	0x6b
 2410 0551 02       		.uleb128 0x2
 2411 0552 91       		.byte	0x91
 2412 0553 77       		.sleb128 -9
 2413 0554 00       		.byte	0
 2414 0555 18       		.uleb128 0x18
 2415 0556 F2010000 		.4byte	.LASF68
 2416 055a 01       		.byte	0x1
 2417 055b FC08     		.2byte	0x8fc
 2418 055d 00000000 		.4byte	.LFB14
 2419 0561 34000000 		.4byte	.LFE14-.LFB14
 2420 0565 01       		.uleb128 0x1
 2421 0566 9C       		.byte	0x9c
 2422 0567 7B050000 		.4byte	0x57b
 2423 056b 12       		.uleb128 0x12
 2424 056c 25010000 		.4byte	.LASF60
 2425 0570 01       		.byte	0x1
 2426 0571 FC08     		.2byte	0x8fc
 2427 0573 6B000000 		.4byte	0x6b
 2428 0577 02       		.uleb128 0x2
 2429 0578 91       		.byte	0x91
 2430 0579 77       		.sleb128 -9
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 88


 2431 057a 00       		.byte	0
 2432 057b 18       		.uleb128 0x18
 2433 057c AC040000 		.4byte	.LASF69
 2434 0580 01       		.byte	0x1
 2435 0581 1A09     		.2byte	0x91a
 2436 0583 00000000 		.4byte	.LFB15
 2437 0587 20000000 		.4byte	.LFE15-.LFB15
 2438 058b 01       		.uleb128 0x1
 2439 058c 9C       		.byte	0x9c
 2440 058d A1050000 		.4byte	0x5a1
 2441 0591 12       		.uleb128 0x12
 2442 0592 C7040000 		.4byte	.LASF70
 2443 0596 01       		.byte	0x1
 2444 0597 1A09     		.2byte	0x91a
 2445 0599 6B000000 		.4byte	0x6b
 2446 059d 02       		.uleb128 0x2
 2447 059e 91       		.byte	0x91
 2448 059f 77       		.sleb128 -9
 2449 05a0 00       		.byte	0
 2450 05a1 15       		.uleb128 0x15
 2451 05a2 18000000 		.4byte	.LASF71
 2452 05a6 01       		.byte	0x1
 2453 05a7 3309     		.2byte	0x933
 2454 05a9 6B000000 		.4byte	0x6b
 2455 05ad 00000000 		.4byte	.LFB16
 2456 05b1 40000000 		.4byte	.LFE16-.LFB16
 2457 05b5 01       		.uleb128 0x1
 2458 05b6 9C       		.byte	0x9c
 2459 05b7 D9050000 		.4byte	0x5d9
 2460 05bb 12       		.uleb128 0x12
 2461 05bc 25010000 		.4byte	.LASF60
 2462 05c0 01       		.byte	0x1
 2463 05c1 3309     		.2byte	0x933
 2464 05c3 6B000000 		.4byte	0x6b
 2465 05c7 02       		.uleb128 0x2
 2466 05c8 91       		.byte	0x91
 2467 05c9 6F       		.sleb128 -17
 2468 05ca 17       		.uleb128 0x17
 2469 05cb 637200   		.ascii	"cr\000"
 2470 05ce 01       		.byte	0x1
 2471 05cf 3509     		.2byte	0x935
 2472 05d1 6B000000 		.4byte	0x6b
 2473 05d5 02       		.uleb128 0x2
 2474 05d6 91       		.byte	0x91
 2475 05d7 77       		.sleb128 -9
 2476 05d8 00       		.byte	0
 2477 05d9 18       		.uleb128 0x18
 2478 05da DE020000 		.4byte	.LASF72
 2479 05de 01       		.byte	0x1
 2480 05df 5C09     		.2byte	0x95c
 2481 05e1 00000000 		.4byte	.LFB17
 2482 05e5 40000000 		.4byte	.LFE17-.LFB17
 2483 05e9 01       		.uleb128 0x1
 2484 05ea 9C       		.byte	0x9c
 2485 05eb FF050000 		.4byte	0x5ff
 2486 05ef 12       		.uleb128 0x12
 2487 05f0 91010000 		.4byte	.LASF73
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 89


 2488 05f4 01       		.byte	0x1
 2489 05f5 5C09     		.2byte	0x95c
 2490 05f7 6B000000 		.4byte	0x6b
 2491 05fb 02       		.uleb128 0x2
 2492 05fc 91       		.byte	0x91
 2493 05fd 77       		.sleb128 -9
 2494 05fe 00       		.byte	0
 2495 05ff 15       		.uleb128 0x15
 2496 0600 54050000 		.4byte	.LASF74
 2497 0604 01       		.byte	0x1
 2498 0605 9509     		.2byte	0x995
 2499 0607 6B000000 		.4byte	0x6b
 2500 060b 00000000 		.4byte	.LFB18
 2501 060f 2C000000 		.4byte	.LFE18-.LFB18
 2502 0613 01       		.uleb128 0x1
 2503 0614 9C       		.byte	0x9c
 2504 0615 29060000 		.4byte	0x629
 2505 0619 14       		.uleb128 0x14
 2506 061a 83010000 		.4byte	.LASF75
 2507 061e 01       		.byte	0x1
 2508 061f 9709     		.2byte	0x997
 2509 0621 6B000000 		.4byte	0x6b
 2510 0625 02       		.uleb128 0x2
 2511 0626 91       		.byte	0x91
 2512 0627 77       		.sleb128 -9
 2513 0628 00       		.byte	0
 2514 0629 16       		.uleb128 0x16
 2515 062a 8D020000 		.4byte	.LASF77
 2516 062e 01       		.byte	0x1
 2517 062f AD09     		.2byte	0x9ad
 2518 0631 6B000000 		.4byte	0x6b
 2519 0635 00000000 		.4byte	.LFB19
 2520 0639 1C000000 		.4byte	.LFE19-.LFB19
 2521 063d 01       		.uleb128 0x1
 2522 063e 9C       		.byte	0x9c
 2523 063f 13       		.uleb128 0x13
 2524 0640 9A050000 		.4byte	.LASF79
 2525 0644 01       		.byte	0x1
 2526 0645 BB09     		.2byte	0x9bb
 2527 0647 00000000 		.4byte	.LFB20
 2528 064b 0C000000 		.4byte	.LFE20-.LFB20
 2529 064f 01       		.uleb128 0x1
 2530 0650 9C       		.byte	0x9c
 2531 0651 13       		.uleb128 0x13
 2532 0652 F9000000 		.4byte	.LASF80
 2533 0656 01       		.byte	0x1
 2534 0657 D109     		.2byte	0x9d1
 2535 0659 00000000 		.4byte	.LFB21
 2536 065d 0C000000 		.4byte	.LFE21-.LFB21
 2537 0661 01       		.uleb128 0x1
 2538 0662 9C       		.byte	0x9c
 2539 0663 1D       		.uleb128 0x1d
 2540 0664 D2000000 		.4byte	.LASF81
 2541 0668 01       		.byte	0x1
 2542 0669 28       		.byte	0x28
 2543 066a 6B000000 		.4byte	0x6b
 2544 066e 05       		.uleb128 0x5
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 90


 2545 066f 03       		.byte	0x3
 2546 0670 00000000 		.4byte	USBFS_1_initVar
 2547 0674 1E       		.uleb128 0x1e
 2548 0675 9D040000 		.4byte	.LASF82
 2549 0679 03       		.byte	0x3
 2550 067a CF02     		.2byte	0x2cf
 2551 067c B0000000 		.4byte	0xb0
 2552 0680 1E       		.uleb128 0x1e
 2553 0681 3E050000 		.4byte	.LASF83
 2554 0685 03       		.byte	0x3
 2555 0686 D002     		.2byte	0x2d0
 2556 0688 B0000000 		.4byte	0xb0
 2557 068c 1E       		.uleb128 0x1e
 2558 068d 14020000 		.4byte	.LASF84
 2559 0691 03       		.byte	0x3
 2560 0692 D102     		.2byte	0x2d1
 2561 0694 B0000000 		.4byte	0xb0
 2562 0698 1E       		.uleb128 0x1e
 2563 0699 CE040000 		.4byte	.LASF85
 2564 069d 03       		.byte	0x3
 2565 069e D202     		.2byte	0x2d2
 2566 06a0 B0000000 		.4byte	0xb0
 2567 06a4 1E       		.uleb128 0x1e
 2568 06a5 9D010000 		.4byte	.LASF86
 2569 06a9 03       		.byte	0x3
 2570 06aa D302     		.2byte	0x2d3
 2571 06ac B0000000 		.4byte	0xb0
 2572 06b0 1F       		.uleb128 0x1f
 2573 06b1 D1010000 		.4byte	.LASF87
 2574 06b5 04       		.byte	0x4
 2575 06b6 71       		.byte	0x71
 2576 06b7 B0000000 		.4byte	0xb0
 2577 06bb 0A       		.uleb128 0xa
 2578 06bc B0000000 		.4byte	0xb0
 2579 06c0 CB060000 		.4byte	0x6cb
 2580 06c4 0B       		.uleb128 0xb
 2581 06c5 CD000000 		.4byte	0xcd
 2582 06c9 00       		.byte	0
 2583 06ca 00       		.byte	0
 2584 06cb 1F       		.uleb128 0x1f
 2585 06cc DA030000 		.4byte	.LASF88
 2586 06d0 04       		.byte	0x4
 2587 06d1 72       		.byte	0x72
 2588 06d2 D6060000 		.4byte	0x6d6
 2589 06d6 05       		.uleb128 0x5
 2590 06d7 BB060000 		.4byte	0x6bb
 2591 06db 1F       		.uleb128 0x1f
 2592 06dc 67050000 		.4byte	.LASF89
 2593 06e0 04       		.byte	0x4
 2594 06e1 74       		.byte	0x74
 2595 06e2 B0000000 		.4byte	0xb0
 2596 06e6 0A       		.uleb128 0xa
 2597 06e7 F6060000 		.4byte	0x6f6
 2598 06eb F6060000 		.4byte	0x6f6
 2599 06ef 0B       		.uleb128 0xb
 2600 06f0 CD000000 		.4byte	0xcd
 2601 06f4 08       		.byte	0x8
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 91


 2602 06f5 00       		.byte	0
 2603 06f6 05       		.uleb128 0x5
 2604 06f7 49010000 		.4byte	0x149
 2605 06fb 1F       		.uleb128 0x1f
 2606 06fc 1A010000 		.4byte	.LASF90
 2607 0700 04       		.byte	0x4
 2608 0701 78       		.byte	0x78
 2609 0702 06070000 		.4byte	0x706
 2610 0706 05       		.uleb128 0x5
 2611 0707 E6060000 		.4byte	0x6e6
 2612 070b 1F       		.uleb128 0x1f
 2613 070c B7050000 		.4byte	.LASF91
 2614 0710 04       		.byte	0x4
 2615 0711 9A       		.byte	0x9a
 2616 0712 B0000000 		.4byte	0xb0
 2617 0716 00       		.byte	0
 2618              		.section	.debug_abbrev,"",%progbits
 2619              	.Ldebug_abbrev0:
 2620 0000 01       		.uleb128 0x1
 2621 0001 11       		.uleb128 0x11
 2622 0002 01       		.byte	0x1
 2623 0003 25       		.uleb128 0x25
 2624 0004 0E       		.uleb128 0xe
 2625 0005 13       		.uleb128 0x13
 2626 0006 0B       		.uleb128 0xb
 2627 0007 03       		.uleb128 0x3
 2628 0008 0E       		.uleb128 0xe
 2629 0009 1B       		.uleb128 0x1b
 2630 000a 0E       		.uleb128 0xe
 2631 000b 55       		.uleb128 0x55
 2632 000c 17       		.uleb128 0x17
 2633 000d 11       		.uleb128 0x11
 2634 000e 01       		.uleb128 0x1
 2635 000f 10       		.uleb128 0x10
 2636 0010 17       		.uleb128 0x17
 2637 0011 00       		.byte	0
 2638 0012 00       		.byte	0
 2639 0013 02       		.uleb128 0x2
 2640 0014 24       		.uleb128 0x24
 2641 0015 00       		.byte	0
 2642 0016 0B       		.uleb128 0xb
 2643 0017 0B       		.uleb128 0xb
 2644 0018 3E       		.uleb128 0x3e
 2645 0019 0B       		.uleb128 0xb
 2646 001a 03       		.uleb128 0x3
 2647 001b 0E       		.uleb128 0xe
 2648 001c 00       		.byte	0
 2649 001d 00       		.byte	0
 2650 001e 03       		.uleb128 0x3
 2651 001f 24       		.uleb128 0x24
 2652 0020 00       		.byte	0
 2653 0021 0B       		.uleb128 0xb
 2654 0022 0B       		.uleb128 0xb
 2655 0023 3E       		.uleb128 0x3e
 2656 0024 0B       		.uleb128 0xb
 2657 0025 03       		.uleb128 0x3
 2658 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 92


 2659 0027 00       		.byte	0
 2660 0028 00       		.byte	0
 2661 0029 04       		.uleb128 0x4
 2662 002a 16       		.uleb128 0x16
 2663 002b 00       		.byte	0
 2664 002c 03       		.uleb128 0x3
 2665 002d 0E       		.uleb128 0xe
 2666 002e 3A       		.uleb128 0x3a
 2667 002f 0B       		.uleb128 0xb
 2668 0030 3B       		.uleb128 0x3b
 2669 0031 05       		.uleb128 0x5
 2670 0032 49       		.uleb128 0x49
 2671 0033 13       		.uleb128 0x13
 2672 0034 00       		.byte	0
 2673 0035 00       		.byte	0
 2674 0036 05       		.uleb128 0x5
 2675 0037 35       		.uleb128 0x35
 2676 0038 00       		.byte	0
 2677 0039 49       		.uleb128 0x49
 2678 003a 13       		.uleb128 0x13
 2679 003b 00       		.byte	0
 2680 003c 00       		.byte	0
 2681 003d 06       		.uleb128 0x6
 2682 003e 13       		.uleb128 0x13
 2683 003f 01       		.byte	0x1
 2684 0040 0B       		.uleb128 0xb
 2685 0041 0B       		.uleb128 0xb
 2686 0042 3A       		.uleb128 0x3a
 2687 0043 0B       		.uleb128 0xb
 2688 0044 3B       		.uleb128 0x3b
 2689 0045 0B       		.uleb128 0xb
 2690 0046 01       		.uleb128 0x1
 2691 0047 13       		.uleb128 0x13
 2692 0048 00       		.byte	0
 2693 0049 00       		.byte	0
 2694 004a 07       		.uleb128 0x7
 2695 004b 0D       		.uleb128 0xd
 2696 004c 00       		.byte	0
 2697 004d 03       		.uleb128 0x3
 2698 004e 0E       		.uleb128 0xe
 2699 004f 3A       		.uleb128 0x3a
 2700 0050 0B       		.uleb128 0xb
 2701 0051 3B       		.uleb128 0x3b
 2702 0052 0B       		.uleb128 0xb
 2703 0053 49       		.uleb128 0x49
 2704 0054 13       		.uleb128 0x13
 2705 0055 38       		.uleb128 0x38
 2706 0056 0B       		.uleb128 0xb
 2707 0057 00       		.byte	0
 2708 0058 00       		.byte	0
 2709 0059 08       		.uleb128 0x8
 2710 005a 16       		.uleb128 0x16
 2711 005b 00       		.byte	0
 2712 005c 03       		.uleb128 0x3
 2713 005d 0E       		.uleb128 0xe
 2714 005e 3A       		.uleb128 0x3a
 2715 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 93


 2716 0060 3B       		.uleb128 0x3b
 2717 0061 0B       		.uleb128 0xb
 2718 0062 49       		.uleb128 0x49
 2719 0063 13       		.uleb128 0x13
 2720 0064 00       		.byte	0
 2721 0065 00       		.byte	0
 2722 0066 09       		.uleb128 0x9
 2723 0067 0D       		.uleb128 0xd
 2724 0068 00       		.byte	0
 2725 0069 03       		.uleb128 0x3
 2726 006a 08       		.uleb128 0x8
 2727 006b 3A       		.uleb128 0x3a
 2728 006c 0B       		.uleb128 0xb
 2729 006d 3B       		.uleb128 0x3b
 2730 006e 0B       		.uleb128 0xb
 2731 006f 49       		.uleb128 0x49
 2732 0070 13       		.uleb128 0x13
 2733 0071 38       		.uleb128 0x38
 2734 0072 0B       		.uleb128 0xb
 2735 0073 00       		.byte	0
 2736 0074 00       		.byte	0
 2737 0075 0A       		.uleb128 0xa
 2738 0076 01       		.uleb128 0x1
 2739 0077 01       		.byte	0x1
 2740 0078 49       		.uleb128 0x49
 2741 0079 13       		.uleb128 0x13
 2742 007a 01       		.uleb128 0x1
 2743 007b 13       		.uleb128 0x13
 2744 007c 00       		.byte	0
 2745 007d 00       		.byte	0
 2746 007e 0B       		.uleb128 0xb
 2747 007f 21       		.uleb128 0x21
 2748 0080 00       		.byte	0
 2749 0081 49       		.uleb128 0x49
 2750 0082 13       		.uleb128 0x13
 2751 0083 2F       		.uleb128 0x2f
 2752 0084 0B       		.uleb128 0xb
 2753 0085 00       		.byte	0
 2754 0086 00       		.byte	0
 2755 0087 0C       		.uleb128 0xc
 2756 0088 13       		.uleb128 0x13
 2757 0089 01       		.byte	0x1
 2758 008a 0B       		.uleb128 0xb
 2759 008b 0B       		.uleb128 0xb
 2760 008c 3A       		.uleb128 0x3a
 2761 008d 0B       		.uleb128 0xb
 2762 008e 3B       		.uleb128 0x3b
 2763 008f 05       		.uleb128 0x5
 2764 0090 01       		.uleb128 0x1
 2765 0091 13       		.uleb128 0x13
 2766 0092 00       		.byte	0
 2767 0093 00       		.byte	0
 2768 0094 0D       		.uleb128 0xd
 2769 0095 0D       		.uleb128 0xd
 2770 0096 00       		.byte	0
 2771 0097 03       		.uleb128 0x3
 2772 0098 0E       		.uleb128 0xe
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 94


 2773 0099 3A       		.uleb128 0x3a
 2774 009a 0B       		.uleb128 0xb
 2775 009b 3B       		.uleb128 0x3b
 2776 009c 05       		.uleb128 0x5
 2777 009d 49       		.uleb128 0x49
 2778 009e 13       		.uleb128 0x13
 2779 009f 38       		.uleb128 0x38
 2780 00a0 0B       		.uleb128 0xb
 2781 00a1 00       		.byte	0
 2782 00a2 00       		.byte	0
 2783 00a3 0E       		.uleb128 0xe
 2784 00a4 2E       		.uleb128 0x2e
 2785 00a5 01       		.byte	0x1
 2786 00a6 3F       		.uleb128 0x3f
 2787 00a7 19       		.uleb128 0x19
 2788 00a8 03       		.uleb128 0x3
 2789 00a9 0E       		.uleb128 0xe
 2790 00aa 3A       		.uleb128 0x3a
 2791 00ab 0B       		.uleb128 0xb
 2792 00ac 3B       		.uleb128 0x3b
 2793 00ad 0B       		.uleb128 0xb
 2794 00ae 27       		.uleb128 0x27
 2795 00af 19       		.uleb128 0x19
 2796 00b0 11       		.uleb128 0x11
 2797 00b1 01       		.uleb128 0x1
 2798 00b2 12       		.uleb128 0x12
 2799 00b3 06       		.uleb128 0x6
 2800 00b4 40       		.uleb128 0x40
 2801 00b5 18       		.uleb128 0x18
 2802 00b6 9642     		.uleb128 0x2116
 2803 00b8 19       		.uleb128 0x19
 2804 00b9 01       		.uleb128 0x1
 2805 00ba 13       		.uleb128 0x13
 2806 00bb 00       		.byte	0
 2807 00bc 00       		.byte	0
 2808 00bd 0F       		.uleb128 0xf
 2809 00be 05       		.uleb128 0x5
 2810 00bf 00       		.byte	0
 2811 00c0 03       		.uleb128 0x3
 2812 00c1 0E       		.uleb128 0xe
 2813 00c2 3A       		.uleb128 0x3a
 2814 00c3 0B       		.uleb128 0xb
 2815 00c4 3B       		.uleb128 0x3b
 2816 00c5 0B       		.uleb128 0xb
 2817 00c6 49       		.uleb128 0x49
 2818 00c7 13       		.uleb128 0x13
 2819 00c8 02       		.uleb128 0x2
 2820 00c9 18       		.uleb128 0x18
 2821 00ca 00       		.byte	0
 2822 00cb 00       		.byte	0
 2823 00cc 10       		.uleb128 0x10
 2824 00cd 34       		.uleb128 0x34
 2825 00ce 00       		.byte	0
 2826 00cf 03       		.uleb128 0x3
 2827 00d0 0E       		.uleb128 0xe
 2828 00d1 3A       		.uleb128 0x3a
 2829 00d2 0B       		.uleb128 0xb
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 95


 2830 00d3 3B       		.uleb128 0x3b
 2831 00d4 0B       		.uleb128 0xb
 2832 00d5 49       		.uleb128 0x49
 2833 00d6 13       		.uleb128 0x13
 2834 00d7 02       		.uleb128 0x2
 2835 00d8 18       		.uleb128 0x18
 2836 00d9 00       		.byte	0
 2837 00da 00       		.byte	0
 2838 00db 11       		.uleb128 0x11
 2839 00dc 2E       		.uleb128 0x2e
 2840 00dd 01       		.byte	0x1
 2841 00de 3F       		.uleb128 0x3f
 2842 00df 19       		.uleb128 0x19
 2843 00e0 03       		.uleb128 0x3
 2844 00e1 0E       		.uleb128 0xe
 2845 00e2 3A       		.uleb128 0x3a
 2846 00e3 0B       		.uleb128 0xb
 2847 00e4 3B       		.uleb128 0x3b
 2848 00e5 05       		.uleb128 0x5
 2849 00e6 27       		.uleb128 0x27
 2850 00e7 19       		.uleb128 0x19
 2851 00e8 11       		.uleb128 0x11
 2852 00e9 01       		.uleb128 0x1
 2853 00ea 12       		.uleb128 0x12
 2854 00eb 06       		.uleb128 0x6
 2855 00ec 40       		.uleb128 0x40
 2856 00ed 18       		.uleb128 0x18
 2857 00ee 9642     		.uleb128 0x2116
 2858 00f0 19       		.uleb128 0x19
 2859 00f1 01       		.uleb128 0x1
 2860 00f2 13       		.uleb128 0x13
 2861 00f3 00       		.byte	0
 2862 00f4 00       		.byte	0
 2863 00f5 12       		.uleb128 0x12
 2864 00f6 05       		.uleb128 0x5
 2865 00f7 00       		.byte	0
 2866 00f8 03       		.uleb128 0x3
 2867 00f9 0E       		.uleb128 0xe
 2868 00fa 3A       		.uleb128 0x3a
 2869 00fb 0B       		.uleb128 0xb
 2870 00fc 3B       		.uleb128 0x3b
 2871 00fd 05       		.uleb128 0x5
 2872 00fe 49       		.uleb128 0x49
 2873 00ff 13       		.uleb128 0x13
 2874 0100 02       		.uleb128 0x2
 2875 0101 18       		.uleb128 0x18
 2876 0102 00       		.byte	0
 2877 0103 00       		.byte	0
 2878 0104 13       		.uleb128 0x13
 2879 0105 2E       		.uleb128 0x2e
 2880 0106 00       		.byte	0
 2881 0107 3F       		.uleb128 0x3f
 2882 0108 19       		.uleb128 0x19
 2883 0109 03       		.uleb128 0x3
 2884 010a 0E       		.uleb128 0xe
 2885 010b 3A       		.uleb128 0x3a
 2886 010c 0B       		.uleb128 0xb
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 96


 2887 010d 3B       		.uleb128 0x3b
 2888 010e 05       		.uleb128 0x5
 2889 010f 27       		.uleb128 0x27
 2890 0110 19       		.uleb128 0x19
 2891 0111 11       		.uleb128 0x11
 2892 0112 01       		.uleb128 0x1
 2893 0113 12       		.uleb128 0x12
 2894 0114 06       		.uleb128 0x6
 2895 0115 40       		.uleb128 0x40
 2896 0116 18       		.uleb128 0x18
 2897 0117 9742     		.uleb128 0x2117
 2898 0119 19       		.uleb128 0x19
 2899 011a 00       		.byte	0
 2900 011b 00       		.byte	0
 2901 011c 14       		.uleb128 0x14
 2902 011d 34       		.uleb128 0x34
 2903 011e 00       		.byte	0
 2904 011f 03       		.uleb128 0x3
 2905 0120 0E       		.uleb128 0xe
 2906 0121 3A       		.uleb128 0x3a
 2907 0122 0B       		.uleb128 0xb
 2908 0123 3B       		.uleb128 0x3b
 2909 0124 05       		.uleb128 0x5
 2910 0125 49       		.uleb128 0x49
 2911 0126 13       		.uleb128 0x13
 2912 0127 02       		.uleb128 0x2
 2913 0128 18       		.uleb128 0x18
 2914 0129 00       		.byte	0
 2915 012a 00       		.byte	0
 2916 012b 15       		.uleb128 0x15
 2917 012c 2E       		.uleb128 0x2e
 2918 012d 01       		.byte	0x1
 2919 012e 3F       		.uleb128 0x3f
 2920 012f 19       		.uleb128 0x19
 2921 0130 03       		.uleb128 0x3
 2922 0131 0E       		.uleb128 0xe
 2923 0132 3A       		.uleb128 0x3a
 2924 0133 0B       		.uleb128 0xb
 2925 0134 3B       		.uleb128 0x3b
 2926 0135 05       		.uleb128 0x5
 2927 0136 27       		.uleb128 0x27
 2928 0137 19       		.uleb128 0x19
 2929 0138 49       		.uleb128 0x49
 2930 0139 13       		.uleb128 0x13
 2931 013a 11       		.uleb128 0x11
 2932 013b 01       		.uleb128 0x1
 2933 013c 12       		.uleb128 0x12
 2934 013d 06       		.uleb128 0x6
 2935 013e 40       		.uleb128 0x40
 2936 013f 18       		.uleb128 0x18
 2937 0140 9742     		.uleb128 0x2117
 2938 0142 19       		.uleb128 0x19
 2939 0143 01       		.uleb128 0x1
 2940 0144 13       		.uleb128 0x13
 2941 0145 00       		.byte	0
 2942 0146 00       		.byte	0
 2943 0147 16       		.uleb128 0x16
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 97


 2944 0148 2E       		.uleb128 0x2e
 2945 0149 00       		.byte	0
 2946 014a 3F       		.uleb128 0x3f
 2947 014b 19       		.uleb128 0x19
 2948 014c 03       		.uleb128 0x3
 2949 014d 0E       		.uleb128 0xe
 2950 014e 3A       		.uleb128 0x3a
 2951 014f 0B       		.uleb128 0xb
 2952 0150 3B       		.uleb128 0x3b
 2953 0151 05       		.uleb128 0x5
 2954 0152 27       		.uleb128 0x27
 2955 0153 19       		.uleb128 0x19
 2956 0154 49       		.uleb128 0x49
 2957 0155 13       		.uleb128 0x13
 2958 0156 11       		.uleb128 0x11
 2959 0157 01       		.uleb128 0x1
 2960 0158 12       		.uleb128 0x12
 2961 0159 06       		.uleb128 0x6
 2962 015a 40       		.uleb128 0x40
 2963 015b 18       		.uleb128 0x18
 2964 015c 9742     		.uleb128 0x2117
 2965 015e 19       		.uleb128 0x19
 2966 015f 00       		.byte	0
 2967 0160 00       		.byte	0
 2968 0161 17       		.uleb128 0x17
 2969 0162 34       		.uleb128 0x34
 2970 0163 00       		.byte	0
 2971 0164 03       		.uleb128 0x3
 2972 0165 08       		.uleb128 0x8
 2973 0166 3A       		.uleb128 0x3a
 2974 0167 0B       		.uleb128 0xb
 2975 0168 3B       		.uleb128 0x3b
 2976 0169 05       		.uleb128 0x5
 2977 016a 49       		.uleb128 0x49
 2978 016b 13       		.uleb128 0x13
 2979 016c 02       		.uleb128 0x2
 2980 016d 18       		.uleb128 0x18
 2981 016e 00       		.byte	0
 2982 016f 00       		.byte	0
 2983 0170 18       		.uleb128 0x18
 2984 0171 2E       		.uleb128 0x2e
 2985 0172 01       		.byte	0x1
 2986 0173 3F       		.uleb128 0x3f
 2987 0174 19       		.uleb128 0x19
 2988 0175 03       		.uleb128 0x3
 2989 0176 0E       		.uleb128 0xe
 2990 0177 3A       		.uleb128 0x3a
 2991 0178 0B       		.uleb128 0xb
 2992 0179 3B       		.uleb128 0x3b
 2993 017a 05       		.uleb128 0x5
 2994 017b 27       		.uleb128 0x27
 2995 017c 19       		.uleb128 0x19
 2996 017d 11       		.uleb128 0x11
 2997 017e 01       		.uleb128 0x1
 2998 017f 12       		.uleb128 0x12
 2999 0180 06       		.uleb128 0x6
 3000 0181 40       		.uleb128 0x40
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 98


 3001 0182 18       		.uleb128 0x18
 3002 0183 9742     		.uleb128 0x2117
 3003 0185 19       		.uleb128 0x19
 3004 0186 01       		.uleb128 0x1
 3005 0187 13       		.uleb128 0x13
 3006 0188 00       		.byte	0
 3007 0189 00       		.byte	0
 3008 018a 19       		.uleb128 0x19
 3009 018b 0B       		.uleb128 0xb
 3010 018c 01       		.byte	0x1
 3011 018d 11       		.uleb128 0x11
 3012 018e 01       		.uleb128 0x1
 3013 018f 12       		.uleb128 0x12
 3014 0190 06       		.uleb128 0x6
 3015 0191 00       		.byte	0
 3016 0192 00       		.byte	0
 3017 0193 1A       		.uleb128 0x1a
 3018 0194 0F       		.uleb128 0xf
 3019 0195 00       		.byte	0
 3020 0196 0B       		.uleb128 0xb
 3021 0197 0B       		.uleb128 0xb
 3022 0198 49       		.uleb128 0x49
 3023 0199 13       		.uleb128 0x13
 3024 019a 00       		.byte	0
 3025 019b 00       		.byte	0
 3026 019c 1B       		.uleb128 0x1b
 3027 019d 26       		.uleb128 0x26
 3028 019e 00       		.byte	0
 3029 019f 49       		.uleb128 0x49
 3030 01a0 13       		.uleb128 0x13
 3031 01a1 00       		.byte	0
 3032 01a2 00       		.byte	0
 3033 01a3 1C       		.uleb128 0x1c
 3034 01a4 2E       		.uleb128 0x2e
 3035 01a5 01       		.byte	0x1
 3036 01a6 3F       		.uleb128 0x3f
 3037 01a7 19       		.uleb128 0x19
 3038 01a8 03       		.uleb128 0x3
 3039 01a9 0E       		.uleb128 0xe
 3040 01aa 3A       		.uleb128 0x3a
 3041 01ab 0B       		.uleb128 0xb
 3042 01ac 3B       		.uleb128 0x3b
 3043 01ad 05       		.uleb128 0x5
 3044 01ae 27       		.uleb128 0x27
 3045 01af 19       		.uleb128 0x19
 3046 01b0 49       		.uleb128 0x49
 3047 01b1 13       		.uleb128 0x13
 3048 01b2 11       		.uleb128 0x11
 3049 01b3 01       		.uleb128 0x1
 3050 01b4 12       		.uleb128 0x12
 3051 01b5 06       		.uleb128 0x6
 3052 01b6 40       		.uleb128 0x40
 3053 01b7 18       		.uleb128 0x18
 3054 01b8 9642     		.uleb128 0x2116
 3055 01ba 19       		.uleb128 0x19
 3056 01bb 01       		.uleb128 0x1
 3057 01bc 13       		.uleb128 0x13
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 99


 3058 01bd 00       		.byte	0
 3059 01be 00       		.byte	0
 3060 01bf 1D       		.uleb128 0x1d
 3061 01c0 34       		.uleb128 0x34
 3062 01c1 00       		.byte	0
 3063 01c2 03       		.uleb128 0x3
 3064 01c3 0E       		.uleb128 0xe
 3065 01c4 3A       		.uleb128 0x3a
 3066 01c5 0B       		.uleb128 0xb
 3067 01c6 3B       		.uleb128 0x3b
 3068 01c7 0B       		.uleb128 0xb
 3069 01c8 49       		.uleb128 0x49
 3070 01c9 13       		.uleb128 0x13
 3071 01ca 3F       		.uleb128 0x3f
 3072 01cb 19       		.uleb128 0x19
 3073 01cc 02       		.uleb128 0x2
 3074 01cd 18       		.uleb128 0x18
 3075 01ce 00       		.byte	0
 3076 01cf 00       		.byte	0
 3077 01d0 1E       		.uleb128 0x1e
 3078 01d1 34       		.uleb128 0x34
 3079 01d2 00       		.byte	0
 3080 01d3 03       		.uleb128 0x3
 3081 01d4 0E       		.uleb128 0xe
 3082 01d5 3A       		.uleb128 0x3a
 3083 01d6 0B       		.uleb128 0xb
 3084 01d7 3B       		.uleb128 0x3b
 3085 01d8 05       		.uleb128 0x5
 3086 01d9 49       		.uleb128 0x49
 3087 01da 13       		.uleb128 0x13
 3088 01db 3F       		.uleb128 0x3f
 3089 01dc 19       		.uleb128 0x19
 3090 01dd 3C       		.uleb128 0x3c
 3091 01de 19       		.uleb128 0x19
 3092 01df 00       		.byte	0
 3093 01e0 00       		.byte	0
 3094 01e1 1F       		.uleb128 0x1f
 3095 01e2 34       		.uleb128 0x34
 3096 01e3 00       		.byte	0
 3097 01e4 03       		.uleb128 0x3
 3098 01e5 0E       		.uleb128 0xe
 3099 01e6 3A       		.uleb128 0x3a
 3100 01e7 0B       		.uleb128 0xb
 3101 01e8 3B       		.uleb128 0x3b
 3102 01e9 0B       		.uleb128 0xb
 3103 01ea 49       		.uleb128 0x49
 3104 01eb 13       		.uleb128 0x13
 3105 01ec 3F       		.uleb128 0x3f
 3106 01ed 19       		.uleb128 0x19
 3107 01ee 3C       		.uleb128 0x3c
 3108 01ef 19       		.uleb128 0x19
 3109 01f0 00       		.byte	0
 3110 01f1 00       		.byte	0
 3111 01f2 00       		.byte	0
 3112              		.section	.debug_aranges,"",%progbits
 3113 0000 C4000000 		.4byte	0xc4
 3114 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 100


 3115 0006 00000000 		.4byte	.Ldebug_info0
 3116 000a 04       		.byte	0x4
 3117 000b 00       		.byte	0
 3118 000c 0000     		.2byte	0
 3119 000e 0000     		.2byte	0
 3120 0010 00000000 		.4byte	.LFB0
 3121 0014 3C000000 		.4byte	.LFE0-.LFB0
 3122 0018 00000000 		.4byte	.LFB1
 3123 001c 68010000 		.4byte	.LFE1-.LFB1
 3124 0020 00000000 		.4byte	.LFB2
 3125 0024 EC000000 		.4byte	.LFE2-.LFB2
 3126 0028 00000000 		.4byte	.LFB3
 3127 002c 68000000 		.4byte	.LFE3-.LFB3
 3128 0030 00000000 		.4byte	.LFB4
 3129 0034 F8000000 		.4byte	.LFE4-.LFB4
 3130 0038 00000000 		.4byte	.LFB5
 3131 003c 38000000 		.4byte	.LFE5-.LFB5
 3132 0040 00000000 		.4byte	.LFB6
 3133 0044 18000000 		.4byte	.LFE6-.LFB6
 3134 0048 00000000 		.4byte	.LFB7
 3135 004c 30000000 		.4byte	.LFE7-.LFB7
 3136 0050 00000000 		.4byte	.LFB8
 3137 0054 20000000 		.4byte	.LFE8-.LFB8
 3138 0058 00000000 		.4byte	.LFB9
 3139 005c 2C000000 		.4byte	.LFE9-.LFB9
 3140 0060 00000000 		.4byte	.LFB10
 3141 0064 60000000 		.4byte	.LFE10-.LFB10
 3142 0068 00000000 		.4byte	.LFB11
 3143 006c 08010000 		.4byte	.LFE11-.LFB11
 3144 0070 00000000 		.4byte	.LFB12
 3145 0074 8C000000 		.4byte	.LFE12-.LFB12
 3146 0078 00000000 		.4byte	.LFB13
 3147 007c 5C000000 		.4byte	.LFE13-.LFB13
 3148 0080 00000000 		.4byte	.LFB14
 3149 0084 34000000 		.4byte	.LFE14-.LFB14
 3150 0088 00000000 		.4byte	.LFB15
 3151 008c 20000000 		.4byte	.LFE15-.LFB15
 3152 0090 00000000 		.4byte	.LFB16
 3153 0094 40000000 		.4byte	.LFE16-.LFB16
 3154 0098 00000000 		.4byte	.LFB17
 3155 009c 40000000 		.4byte	.LFE17-.LFB17
 3156 00a0 00000000 		.4byte	.LFB18
 3157 00a4 2C000000 		.4byte	.LFE18-.LFB18
 3158 00a8 00000000 		.4byte	.LFB19
 3159 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3160 00b0 00000000 		.4byte	.LFB20
 3161 00b4 0C000000 		.4byte	.LFE20-.LFB20
 3162 00b8 00000000 		.4byte	.LFB21
 3163 00bc 0C000000 		.4byte	.LFE21-.LFB21
 3164 00c0 00000000 		.4byte	0
 3165 00c4 00000000 		.4byte	0
 3166              		.section	.debug_ranges,"",%progbits
 3167              	.Ldebug_ranges0:
 3168 0000 00000000 		.4byte	.LFB0
 3169 0004 3C000000 		.4byte	.LFE0
 3170 0008 00000000 		.4byte	.LFB1
 3171 000c 68010000 		.4byte	.LFE1
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 101


 3172 0010 00000000 		.4byte	.LFB2
 3173 0014 EC000000 		.4byte	.LFE2
 3174 0018 00000000 		.4byte	.LFB3
 3175 001c 68000000 		.4byte	.LFE3
 3176 0020 00000000 		.4byte	.LFB4
 3177 0024 F8000000 		.4byte	.LFE4
 3178 0028 00000000 		.4byte	.LFB5
 3179 002c 38000000 		.4byte	.LFE5
 3180 0030 00000000 		.4byte	.LFB6
 3181 0034 18000000 		.4byte	.LFE6
 3182 0038 00000000 		.4byte	.LFB7
 3183 003c 30000000 		.4byte	.LFE7
 3184 0040 00000000 		.4byte	.LFB8
 3185 0044 20000000 		.4byte	.LFE8
 3186 0048 00000000 		.4byte	.LFB9
 3187 004c 2C000000 		.4byte	.LFE9
 3188 0050 00000000 		.4byte	.LFB10
 3189 0054 60000000 		.4byte	.LFE10
 3190 0058 00000000 		.4byte	.LFB11
 3191 005c 08010000 		.4byte	.LFE11
 3192 0060 00000000 		.4byte	.LFB12
 3193 0064 8C000000 		.4byte	.LFE12
 3194 0068 00000000 		.4byte	.LFB13
 3195 006c 5C000000 		.4byte	.LFE13
 3196 0070 00000000 		.4byte	.LFB14
 3197 0074 34000000 		.4byte	.LFE14
 3198 0078 00000000 		.4byte	.LFB15
 3199 007c 20000000 		.4byte	.LFE15
 3200 0080 00000000 		.4byte	.LFB16
 3201 0084 40000000 		.4byte	.LFE16
 3202 0088 00000000 		.4byte	.LFB17
 3203 008c 40000000 		.4byte	.LFE17
 3204 0090 00000000 		.4byte	.LFB18
 3205 0094 2C000000 		.4byte	.LFE18
 3206 0098 00000000 		.4byte	.LFB19
 3207 009c 1C000000 		.4byte	.LFE19
 3208 00a0 00000000 		.4byte	.LFB20
 3209 00a4 0C000000 		.4byte	.LFE20
 3210 00a8 00000000 		.4byte	.LFB21
 3211 00ac 0C000000 		.4byte	.LFE21
 3212 00b0 00000000 		.4byte	0
 3213 00b4 00000000 		.4byte	0
 3214              		.section	.debug_line,"",%progbits
 3215              	.Ldebug_line0:
 3216 0000 FB020000 		.section	.debug_str,"MS",%progbits,1
 3216      02006200 
 3216      00000201 
 3216      FB0E0D00 
 3216      01010101 
 3217              	.LASF10:
 3218 0000 75696E74 		.ascii	"uint16\000"
 3218      313600
 3219              	.LASF63:
 3220 0007 55534246 		.ascii	"USBFS_1_LoadInEP\000"
 3220      535F315F 
 3220      4C6F6164 
 3220      496E4550 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 102


 3220      00
 3221              	.LASF71:
 3222 0018 55534246 		.ascii	"USBFS_1_GetEPAckState\000"
 3222      535F315F 
 3222      47657445 
 3222      5041636B 
 3222      53746174 
 3223              	.LASF55:
 3224 002e 55534246 		.ascii	"USBFS_1_CheckActivity\000"
 3224      535F315F 
 3224      43686563 
 3224      6B416374 
 3224      69766974 
 3225              	.LASF92:
 3226 0044 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3226      43313120 
 3226      352E342E 
 3226      31203230 
 3226      31363036 
 3227 0077 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3227      20726576 
 3227      6973696F 
 3227      6E203233 
 3227      37373135 
 3228 00aa 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3228      66756E63 
 3228      74696F6E 
 3228      2D736563 
 3228      74696F6E 
 3229              	.LASF81:
 3230 00d2 55534246 		.ascii	"USBFS_1_initVar\000"
 3230      535F315F 
 3230      696E6974 
 3230      56617200 
 3231              	.LASF7:
 3232 00e2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3232      206C6F6E 
 3232      6720756E 
 3232      7369676E 
 3232      65642069 
 3233              	.LASF80:
 3234 00f9 55534246 		.ascii	"USBFS_1_DisableSofInt\000"
 3234      535F315F 
 3234      44697361 
 3234      626C6553 
 3234      6F66496E 
 3235              	.LASF23:
 3236 010f 61646472 		.ascii	"addr\000"
 3236      00
 3237              	.LASF33:
 3238 0114 65704366 		.ascii	"epCfg\000"
 3238      6700
 3239              	.LASF90:
 3240 011a 55534246 		.ascii	"USBFS_1_EP\000"
 3240      535F315F 
 3240      455000
 3241              	.LASF60:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 103


 3242 0125 65704E75 		.ascii	"epNumber\000"
 3242      6D626572 
 3242      00
 3243              	.LASF47:
 3244 012e 64657669 		.ascii	"device\000"
 3244      636500
 3245              	.LASF6:
 3246 0135 6C6F6E67 		.ascii	"long long int\000"
 3246      206C6F6E 
 3246      6720696E 
 3246      7400
 3247              	.LASF0:
 3248 0143 7369676E 		.ascii	"signed char\000"
 3248      65642063 
 3248      68617200 
 3249              	.LASF62:
 3250 014f 636E7472 		.ascii	"cntr\000"
 3250      00
 3251              	.LASF4:
 3252 0154 6C6F6E67 		.ascii	"long int\000"
 3252      20696E74 
 3252      00
 3253              	.LASF66:
 3254 015d 55534246 		.ascii	"USBFS_1_ReadOutEP\000"
 3254      535F315F 
 3254      52656164 
 3254      4F757445 
 3254      5000
 3255              	.LASF9:
 3256 016f 75696E74 		.ascii	"uint8\000"
 3256      3800
 3257              	.LASF22:
 3258 0175 6570546F 		.ascii	"epToggle\000"
 3258      67676C65 
 3258      00
 3259              	.LASF37:
 3260 017e 72775761 		.ascii	"rwWa\000"
 3260      00
 3261              	.LASF75:
 3262 0183 72657375 		.ascii	"result\000"
 3262      6C7400
 3263              	.LASF13:
 3264 018a 646F7562 		.ascii	"double\000"
 3264      6C6500
 3265              	.LASF73:
 3266 0191 706F7765 		.ascii	"powerStatus\000"
 3266      72537461 
 3266      74757300 
 3267              	.LASF86:
 3268 019d 55534246 		.ascii	"USBFS_1_deviceStatus\000"
 3268      535F315F 
 3268      64657669 
 3268      63655374 
 3268      61747573 
 3269              	.LASF35:
 3270 01b2 65705372 		.ascii	"epSr\000"
 3270      00
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 104


 3271              	.LASF11:
 3272 01b7 75696E74 		.ascii	"uint32\000"
 3272      333200
 3273              	.LASF64:
 3274 01be 70446174 		.ascii	"pData\000"
 3274      6100
 3275              	.LASF43:
 3276 01c4 73696545 		.ascii	"sieEp\000"
 3276      7000
 3277              	.LASF24:
 3278 01ca 65704D6F 		.ascii	"epMode\000"
 3278      646500
 3279              	.LASF87:
 3280 01d1 55534246 		.ascii	"USBFS_1_interfaceNumber\000"
 3280      535F315F 
 3280      696E7465 
 3280      72666163 
 3280      654E756D 
 3281              	.LASF36:
 3282 01e9 72657365 		.ascii	"reserved\000"
 3282      72766564 
 3282      00
 3283              	.LASF68:
 3284 01f2 55534246 		.ascii	"USBFS_1_DisableOutEP\000"
 3284      535F315F 
 3284      44697361 
 3284      626C654F 
 3284      75744550 
 3285              	.LASF8:
 3286 0207 756E7369 		.ascii	"unsigned int\000"
 3286      676E6564 
 3286      20696E74 
 3286      00
 3287              	.LASF84:
 3288 0214 55534246 		.ascii	"USBFS_1_configuration\000"
 3288      535F315F 
 3288      636F6E66 
 3288      69677572 
 3288      6174696F 
 3289              	.LASF42:
 3290 022a 55534246 		.ascii	"USBFS_1_arb_ep_struct\000"
 3290      535F315F 
 3290      6172625F 
 3290      65705F73 
 3290      74727563 
 3291              	.LASF5:
 3292 0240 6C6F6E67 		.ascii	"long unsigned int\000"
 3292      20756E73 
 3292      69676E65 
 3292      6420696E 
 3292      7400
 3293              	.LASF52:
 3294 0252 55534246 		.ascii	"USBFS_1_Stop\000"
 3294      535F315F 
 3294      53746F70 
 3294      00
 3295              	.LASF44:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 105


 3296 025f 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 3296      535F315F 
 3296      7369655F 
 3296      6570735F 
 3296      73747275 
 3297              	.LASF46:
 3298 0276 55534246 		.ascii	"USBFS_1_arb_eps_struct\000"
 3298      535F315F 
 3298      6172625F 
 3298      6570735F 
 3298      73747275 
 3299              	.LASF77:
 3300 028d 55534246 		.ascii	"USBFS_1_GetDeviceAddress\000"
 3300      535F315F 
 3300      47657444 
 3300      65766963 
 3300      65416464 
 3301              	.LASF49:
 3302 02a6 55534246 		.ascii	"USBFS_1_Start\000"
 3302      535F315F 
 3302      53746172 
 3302      7400
 3303              	.LASF3:
 3304 02b4 73686F72 		.ascii	"short unsigned int\000"
 3304      7420756E 
 3304      7369676E 
 3304      65642069 
 3304      6E7400
 3305              	.LASF28:
 3306 02c7 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 3306      4246535F 
 3306      315F4550 
 3306      5F43544C 
 3306      5F424C4F 
 3307              	.LASF72:
 3308 02de 55534246 		.ascii	"USBFS_1_SetPowerStatus\000"
 3308      535F315F 
 3308      53657450 
 3308      6F776572 
 3308      53746174 
 3309              	.LASF67:
 3310 02f5 55534246 		.ascii	"USBFS_1_EnableOutEP\000"
 3310      535F315F 
 3310      456E6162 
 3310      6C654F75 
 3310      74455000 
 3311              	.LASF45:
 3312 0309 61726245 		.ascii	"arbEp\000"
 3312      7000
 3313              	.LASF27:
 3314 030f 696E7465 		.ascii	"interface\000"
 3314      72666163 
 3314      6500
 3315              	.LASF54:
 3316 0319 63723152 		.ascii	"cr1Reg\000"
 3316      656700
 3317              	.LASF16:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 106


 3318 0320 72656733 		.ascii	"reg32\000"
 3318      3200
 3319              	.LASF21:
 3320 0326 68774570 		.ascii	"hwEpState\000"
 3320      53746174 
 3320      6500
 3321              	.LASF76:
 3322 0330 55534246 		.ascii	"USBFS_1_GetConfiguration\000"
 3322      535F315F 
 3322      47657443 
 3322      6F6E6669 
 3322      67757261 
 3323              	.LASF18:
 3324 0349 73697A65 		.ascii	"sizetype\000"
 3324      74797065 
 3324      00
 3325              	.LASF59:
 3326 0352 55534246 		.ascii	"USBFS_1_GetEPState\000"
 3326      535F315F 
 3326      47657445 
 3326      50537461 
 3326      746500
 3327              	.LASF17:
 3328 0365 6C6F6E67 		.ascii	"long double\000"
 3328      20646F75 
 3328      626C6500 
 3329              	.LASF19:
 3330 0371 61747472 		.ascii	"attrib\000"
 3330      696200
 3331              	.LASF56:
 3332 0378 55534246 		.ascii	"USBFS_1_IsConfigurationChanged\000"
 3332      535F315F 
 3332      4973436F 
 3332      6E666967 
 3332      75726174 
 3333              	.LASF40:
 3334 0397 72775261 		.ascii	"rwRaMsb\000"
 3334      4D736200 
 3335              	.LASF29:
 3336 039f 6570436E 		.ascii	"epCnt0\000"
 3336      743000
 3337              	.LASF30:
 3338 03a6 6570436E 		.ascii	"epCnt1\000"
 3338      743100
 3339              	.LASF32:
 3340 03ad 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 3340      535F315F 
 3340      7369655F 
 3340      65705F73 
 3340      74727563 
 3341              	.LASF31:
 3342 03c3 65704372 		.ascii	"epCr0\000"
 3342      3000
 3343              	.LASF12:
 3344 03c9 666C6F61 		.ascii	"float\000"
 3344      7400
 3345              	.LASF20:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 107


 3346 03cf 61706945 		.ascii	"apiEpState\000"
 3346      70537461 
 3346      746500
 3347              	.LASF88:
 3348 03da 55534246 		.ascii	"USBFS_1_interfaceSetting\000"
 3348      535F315F 
 3348      696E7465 
 3348      72666163 
 3348      65536574 
 3349              	.LASF61:
 3350 03f3 55534246 		.ascii	"USBFS_1_GetEPCount\000"
 3350      535F315F 
 3350      47657445 
 3350      50436F75 
 3350      6E7400
 3351              	.LASF15:
 3352 0406 72656738 		.ascii	"reg8\000"
 3352      00
 3353              	.LASF1:
 3354 040b 756E7369 		.ascii	"unsigned char\000"
 3354      676E6564 
 3354      20636861 
 3354      7200
 3355              	.LASF93:
 3356 0419 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_1.c\000"
 3356      72617465 
 3356      645F536F 
 3356      75726365 
 3356      5C50536F 
 3357              	.LASF2:
 3358 043a 73686F72 		.ascii	"short int\000"
 3358      7420696E 
 3358      7400
 3359              	.LASF94:
 3360 0444 433A5C55 		.ascii	"C:\\Users\\gerwi\\OneDrive\\Documenten\\PSoC Creato"
 3360      73657273 
 3360      5C676572 
 3360      77695C4F 
 3360      6E654472 
 3361 0472 725C4144 		.ascii	"r\\ADC_SAR_Seq_Example01\\ADC_DMA_UART.cydsn\000"
 3361      435F5341 
 3361      525F5365 
 3361      715F4578 
 3361      616D706C 
 3362              	.LASF82:
 3363 049d 55534246 		.ascii	"USBFS_1_device\000"
 3363      535F315F 
 3363      64657669 
 3363      636500
 3364              	.LASF69:
 3365 04ac 55534246 		.ascii	"USBFS_1_Force\000"
 3365      535F315F 
 3365      466F7263 
 3365      6500
 3366              	.LASF39:
 3367 04ba 72775261 		.ascii	"rwRa\000"
 3367      00
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 108


 3368              	.LASF38:
 3369 04bf 72775761 		.ascii	"rwWaMsb\000"
 3369      4D736200 
 3370              	.LASF70:
 3371 04c7 62537461 		.ascii	"bState\000"
 3371      746500
 3372              	.LASF85:
 3373 04ce 55534246 		.ascii	"USBFS_1_configurationChanged\000"
 3373      535F315F 
 3373      636F6E66 
 3373      69677572 
 3373      6174696F 
 3374              	.LASF51:
 3375 04eb 55534246 		.ascii	"USBFS_1_InitComponent\000"
 3375      535F315F 
 3375      496E6974 
 3375      436F6D70 
 3375      6F6E656E 
 3376              	.LASF50:
 3377 0501 55534246 		.ascii	"USBFS_1_Init\000"
 3377      535F315F 
 3377      496E6974 
 3377      00
 3378              	.LASF14:
 3379 050e 63686172 		.ascii	"char\000"
 3379      00
 3380              	.LASF48:
 3381 0513 6D6F6465 		.ascii	"mode\000"
 3381      00
 3382              	.LASF26:
 3383 0518 62756666 		.ascii	"bufferSize\000"
 3383      65725369 
 3383      7A6500
 3384              	.LASF25:
 3385 0523 62756666 		.ascii	"buffOffset\000"
 3385      4F666673 
 3385      657400
 3386              	.LASF58:
 3387 052e 696E7465 		.ascii	"interfaceNumber\000"
 3387      72666163 
 3387      654E756D 
 3387      62657200 
 3388              	.LASF83:
 3389 053e 55534246 		.ascii	"USBFS_1_transferState\000"
 3389      535F315F 
 3389      7472616E 
 3389      73666572 
 3389      53746174 
 3390              	.LASF74:
 3391 0554 55534246 		.ascii	"USBFS_1_RWUEnabled\000"
 3391      535F315F 
 3391      52575545 
 3391      6E61626C 
 3391      656400
 3392              	.LASF89:
 3393 0567 55534246 		.ascii	"USBFS_1_deviceAddress\000"
 3393      535F315F 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccHns5pe.s 			page 109


 3393      64657669 
 3393      63654164 
 3393      64726573 
 3394              	.LASF65:
 3395 057d 6C656E67 		.ascii	"length\000"
 3395      746800
 3396              	.LASF53:
 3397 0584 656E6162 		.ascii	"enableInterrupts\000"
 3397      6C65496E 
 3397      74657272 
 3397      75707473 
 3397      00
 3398              	.LASF41:
 3399 0595 72774472 		.ascii	"rwDr\000"
 3399      00
 3400              	.LASF79:
 3401 059a 55534246 		.ascii	"USBFS_1_EnableSofInt\000"
 3401      535F315F 
 3401      456E6162 
 3401      6C65536F 
 3401      66496E74 
 3402              	.LASF34:
 3403 05af 6570496E 		.ascii	"epIntEn\000"
 3403      74456E00 
 3404              	.LASF91:
 3405 05b7 55534246 		.ascii	"USBFS_1_lastPacketSize\000"
 3405      535F315F 
 3405      6C617374 
 3405      5061636B 
 3405      65745369 
 3406              	.LASF57:
 3407 05ce 55534246 		.ascii	"USBFS_1_GetInterfaceSetting\000"
 3407      535F315F 
 3407      47657449 
 3407      6E746572 
 3407      66616365 
 3408              	.LASF78:
 3409 05ea 55534246 		.ascii	"USBFS_1_ReInitComponent\000"
 3409      535F315F 
 3409      5265496E 
 3409      6974436F 
 3409      6D706F6E 
 3410              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
