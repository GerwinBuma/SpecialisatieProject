ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_RXISR,"ax",%progbits
  20              		.align	2
  21              		.global	UART_1_RXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_1_RXISR, %function
  25              	UART_1_RXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_1_INT.c"
   1:Generated_Source\PSoC5/UART_1_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1_INT.c **** * File Name: UART_1INT.c
   3:Generated_Source\PSoC5/UART_1_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1_INT.c **** *
   5:Generated_Source\PSoC5/UART_1_INT.c **** * Description:
   6:Generated_Source\PSoC5/UART_1_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/UART_1_INT.c **** *
   8:Generated_Source\PSoC5/UART_1_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/UART_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/UART_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/UART_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/UART_1_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/UART_1_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/UART_1_INT.c **** 
  15:Generated_Source\PSoC5/UART_1_INT.c **** #include "UART_1.h"
  16:Generated_Source\PSoC5/UART_1_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/UART_1_INT.c **** 
  18:Generated_Source\PSoC5/UART_1_INT.c **** 
  19:Generated_Source\PSoC5/UART_1_INT.c **** /***************************************
  20:Generated_Source\PSoC5/UART_1_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/UART_1_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/UART_1_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/UART_1_INT.c **** 
  24:Generated_Source\PSoC5/UART_1_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/UART_1_INT.c **** 
  26:Generated_Source\PSoC5/UART_1_INT.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  27:Generated_Source\PSoC5/UART_1_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/UART_1_INT.c ****     * Function Name: UART_1_RXISR
  29:Generated_Source\PSoC5/UART_1_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/UART_1_INT.c ****     *
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 2


  31:Generated_Source\PSoC5/UART_1_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/UART_1_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/UART_1_INT.c ****     *
  34:Generated_Source\PSoC5/UART_1_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
  36:Generated_Source\PSoC5/UART_1_INT.c ****     *
  37:Generated_Source\PSoC5/UART_1_INT.c ****     * Return:
  38:Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
  39:Generated_Source\PSoC5/UART_1_INT.c ****     *
  40:Generated_Source\PSoC5/UART_1_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/UART_1_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/UART_1_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/UART_1_INT.c ****     *     when UART_1_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/UART_1_INT.c ****     *     UART_1_rxBufferRead index.
  49:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/UART_1_INT.c ****     *     Set to one when UART_1_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/UART_1_INT.c ****     *    UART_1_rxBufferRead
  52:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/UART_1_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/UART_1_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/UART_1_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/UART_1_INT.c ****     *
  58:Generated_Source\PSoC5/UART_1_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/UART_1_INT.c ****     CY_ISR(UART_1_RXISR)
  60:Generated_Source\PSoC5/UART_1_INT.c ****     {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  61:Generated_Source\PSoC5/UART_1_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/UART_1_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/UART_1_INT.c ****         uint8 increment_pointer = 0u;
  40              		.loc 1 63 0
  41 0006 0023     		movs	r3, #0
  42 0008 FB71     		strb	r3, [r7, #7]
  43              	.L6:
  64:Generated_Source\PSoC5/UART_1_INT.c **** 
  65:Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/UART_1_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/UART_1_INT.c **** 
  69:Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_RXISR_ENTRY_CALLBACK */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 3


  72:Generated_Source\PSoC5/UART_1_INT.c **** 
  73:Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_RXISR_START` */
  75:Generated_Source\PSoC5/UART_1_INT.c **** 
  76:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/UART_1_INT.c **** 
  78:Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/UART_1_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/UART_1_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/UART_1_INT.c **** 
  83:Generated_Source\PSoC5/UART_1_INT.c ****         do
  84:Generated_Source\PSoC5/UART_1_INT.c ****         {
  85:Generated_Source\PSoC5/UART_1_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/UART_1_INT.c ****             readStatus = UART_1_RXSTATUS_REG;
  44              		.loc 1 86 0
  45 000a 2B4B     		ldr	r3, .L7
  46 000c 1B78     		ldrb	r3, [r3]
  47 000e BB71     		strb	r3, [r7, #6]
  87:Generated_Source\PSoC5/UART_1_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/UART_1_INT.c ****             *  of the user code in UART_1_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/UART_1_INT.c ****             */
  90:Generated_Source\PSoC5/UART_1_INT.c ****             readData = readStatus;
  48              		.loc 1 90 0
  49 0010 BB79     		ldrb	r3, [r7, #6]
  50 0012 7B71     		strb	r3, [r7, #5]
  91:Generated_Source\PSoC5/UART_1_INT.c **** 
  92:Generated_Source\PSoC5/UART_1_INT.c ****             if((readStatus & (UART_1_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_OVERRUN)) != 0u)
  51              		.loc 1 95 0
  52 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  53 0016 03F01E03 		and	r3, r3, #30
  92:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_PAR_ERROR |
  54              		.loc 1 92 0
  55 001a 002B     		cmp	r3, #0
  56 001c 0CD0     		beq	.L2
  96:Generated_Source\PSoC5/UART_1_INT.c ****             {
  97:Generated_Source\PSoC5/UART_1_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_errorStatus |= readStatus & ( UART_1_RX_STS_BREAK | 
  57              		.loc 1 98 0
  58 001e 97F90630 		ldrsb	r3, [r7, #6]
  59 0022 03F01E03 		and	r3, r3, #30
  60 0026 5AB2     		sxtb	r2, r3
  61 0028 244B     		ldr	r3, .L7+4
  62 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63 002c 5BB2     		sxtb	r3, r3
  64 002e 1343     		orrs	r3, r3, r2
  65 0030 5BB2     		sxtb	r3, r3
  66 0032 DAB2     		uxtb	r2, r3
  67 0034 214B     		ldr	r3, .L7+4
  68 0036 1A70     		strb	r2, [r3]
  69              	.L2:
  99:Generated_Source\PSoC5/UART_1_INT.c ****                                                             UART_1_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/UART_1_INT.c ****                                                             UART_1_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/UART_1_INT.c ****                                                             UART_1_RX_STS_OVERRUN);
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 4


 102:Generated_Source\PSoC5/UART_1_INT.c ****                 /* `#START UART_1_RXISR_ERROR` */
 103:Generated_Source\PSoC5/UART_1_INT.c **** 
 104:Generated_Source\PSoC5/UART_1_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/UART_1_INT.c ****                 
 106:Generated_Source\PSoC5/UART_1_INT.c ****             #ifdef UART_1_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/UART_1_INT.c ****             #endif /* UART_1_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/UART_1_INT.c ****             }
 110:Generated_Source\PSoC5/UART_1_INT.c ****             
 111:Generated_Source\PSoC5/UART_1_INT.c ****             if((readStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
  70              		.loc 1 111 0
  71 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  72 003a 03F02003 		and	r3, r3, #32
  73 003e 002B     		cmp	r3, #0
  74 0040 30D0     		beq	.L3
 112:Generated_Source\PSoC5/UART_1_INT.c ****             {
 113:Generated_Source\PSoC5/UART_1_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/UART_1_INT.c ****                 readData = UART_1_RXDATA_REG;
  75              		.loc 1 114 0
  76 0042 1F4B     		ldr	r3, .L7+8
  77 0044 1B78     		ldrb	r3, [r3]
  78 0046 7B71     		strb	r3, [r7, #5]
 115:Generated_Source\PSoC5/UART_1_INT.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/UART_1_INT.c ****                 if(UART_1_rxAddressMode == (uint8)UART_1__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/UART_1_INT.c ****                 {
 118:Generated_Source\PSoC5/UART_1_INT.c ****                     if((readStatus & UART_1_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/UART_1_INT.c ****                     {
 120:Generated_Source\PSoC5/UART_1_INT.c ****                         if ((readStatus & UART_1_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/UART_1_INT.c ****                         {
 122:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/UART_1_INT.c ****                         }
 124:Generated_Source\PSoC5/UART_1_INT.c ****                         else
 125:Generated_Source\PSoC5/UART_1_INT.c ****                         {
 126:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/UART_1_INT.c ****                         }
 128:Generated_Source\PSoC5/UART_1_INT.c ****                     }
 129:Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/UART_1_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/UART_1_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/UART_1_INT.c ****                     }
 134:Generated_Source\PSoC5/UART_1_INT.c ****                 }
 135:Generated_Source\PSoC5/UART_1_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/UART_1_INT.c ****                 {
 137:Generated_Source\PSoC5/UART_1_INT.c ****                     UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/UART_1_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/UART_1_INT.c ****                 }
 140:Generated_Source\PSoC5/UART_1_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
  79              		.loc 1 141 0
  80 0048 1E4B     		ldr	r3, .L7+12
  81 004a 1B78     		ldrb	r3, [r3]
  82 004c DBB2     		uxtb	r3, r3
  83 004e 1946     		mov	r1, r3
  84 0050 1D4A     		ldr	r2, .L7+16
  85 0052 7B79     		ldrb	r3, [r7, #5]
  86 0054 5354     		strb	r3, [r2, r1]
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 5


 142:Generated_Source\PSoC5/UART_1_INT.c ****                 increment_pointer = 1u;
  87              		.loc 1 142 0
  88 0056 0123     		movs	r3, #1
  89 0058 FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/UART_1_INT.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/UART_1_INT.c **** 
 145:Generated_Source\PSoC5/UART_1_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/UART_1_INT.c ****                 if(increment_pointer != 0u)
  90              		.loc 1 146 0
  91 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  92 005c 002B     		cmp	r3, #0
  93 005e 21D0     		beq	.L3
 147:Generated_Source\PSoC5/UART_1_INT.c ****                 {
 148:Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxBufferLoopDetect != 0u)
  94              		.loc 1 148 0
  95 0060 1A4B     		ldr	r3, .L7+20
  96 0062 1B78     		ldrb	r3, [r3]
  97 0064 DBB2     		uxtb	r3, r3
  98 0066 002B     		cmp	r3, #0
  99 0068 02D0     		beq	.L4
 149:Generated_Source\PSoC5/UART_1_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBufferOverflow = 1u;
 100              		.loc 1 150 0
 101 006a 194B     		ldr	r3, .L7+24
 102 006c 0122     		movs	r2, #1
 103 006e 1A70     		strb	r2, [r3]
 104              	.L4:
 151:Generated_Source\PSoC5/UART_1_INT.c ****                     }
 152:Generated_Source\PSoC5/UART_1_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/UART_1_INT.c ****                     UART_1_rxBufferWrite++;
 105              		.loc 1 153 0
 106 0070 144B     		ldr	r3, .L7+12
 107 0072 1B78     		ldrb	r3, [r3]
 108 0074 DBB2     		uxtb	r3, r3
 109 0076 0133     		adds	r3, r3, #1
 110 0078 DAB2     		uxtb	r2, r3
 111 007a 124B     		ldr	r3, .L7+12
 112 007c 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC5/UART_1_INT.c **** 
 155:Generated_Source\PSoC5/UART_1_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxBufferWrite >= UART_1_RX_BUFFER_SIZE)
 113              		.loc 1 156 0
 114 007e 114B     		ldr	r3, .L7+12
 115 0080 1B78     		ldrb	r3, [r3]
 116 0082 DBB2     		uxtb	r3, r3
 117 0084 092B     		cmp	r3, #9
 118 0086 02D9     		bls	.L5
 157:Generated_Source\PSoC5/UART_1_INT.c ****                     {
 158:Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBufferWrite = 0u;
 119              		.loc 1 158 0
 120 0088 0E4B     		ldr	r3, .L7+12
 121 008a 0022     		movs	r2, #0
 122 008c 1A70     		strb	r2, [r3]
 123              	.L5:
 159:Generated_Source\PSoC5/UART_1_INT.c ****                     }
 160:Generated_Source\PSoC5/UART_1_INT.c **** 
 161:Generated_Source\PSoC5/UART_1_INT.c ****                     /* Detect pre-overload condition and set flag */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 6


 162:Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxBufferWrite == UART_1_rxBufferRead)
 124              		.loc 1 162 0
 125 008e 0D4B     		ldr	r3, .L7+12
 126 0090 1B78     		ldrb	r3, [r3]
 127 0092 DAB2     		uxtb	r2, r3
 128 0094 0F4B     		ldr	r3, .L7+28
 129 0096 1B78     		ldrb	r3, [r3]
 130 0098 DBB2     		uxtb	r3, r3
 131 009a 9A42     		cmp	r2, r3
 132 009c 02D1     		bne	.L3
 163:Generated_Source\PSoC5/UART_1_INT.c ****                     {
 164:Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBufferLoopDetect = 1u;
 133              		.loc 1 164 0
 134 009e 0B4B     		ldr	r3, .L7+20
 135 00a0 0122     		movs	r2, #1
 136 00a2 1A70     		strb	r2, [r3]
 137              	.L3:
 165:Generated_Source\PSoC5/UART_1_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/UART_1_INT.c ****                         #if (UART_1_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/UART_1_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RXSTATUS_MASK_REG  &= (uint8)~UART_1_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/UART_1_INT.c ****                             CyIntClearPending(UART_1_RX_VECT_NUM);
 170:Generated_Source\PSoC5/UART_1_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/UART_1_INT.c ****                         #endif /* (UART_1_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/UART_1_INT.c ****                     }
 173:Generated_Source\PSoC5/UART_1_INT.c ****                 }
 174:Generated_Source\PSoC5/UART_1_INT.c ****             }
 175:Generated_Source\PSoC5/UART_1_INT.c ****         }while((readStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u);
 138              		.loc 1 175 0
 139 00a4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 140 00a6 03F02003 		and	r3, r3, #32
 141 00aa 002B     		cmp	r3, #0
 142 00ac ADD1     		bne	.L6
 176:Generated_Source\PSoC5/UART_1_INT.c **** 
 177:Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_RXISR_END` */
 179:Generated_Source\PSoC5/UART_1_INT.c **** 
 180:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/UART_1_INT.c **** 
 182:Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/UART_1_INT.c **** 
 186:Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/UART_1_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/UART_1_INT.c ****     }
 143              		.loc 1 189 0
 144 00ae 00BF     		nop
 145 00b0 0C37     		adds	r7, r7, #12
 146              		.cfi_def_cfa_offset 4
 147 00b2 BD46     		mov	sp, r7
 148              		.cfi_def_cfa_register 13
 149              		@ sp needed
 150 00b4 80BC     		pop	{r7}
 151              		.cfi_restore 7
 152              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 7


 153 00b6 7047     		bx	lr
 154              	.L8:
 155              		.align	2
 156              	.L7:
 157 00b8 6A650040 		.word	1073767786
 158 00bc 00000000 		.word	UART_1_errorStatus
 159 00c0 4B650040 		.word	1073767755
 160 00c4 00000000 		.word	UART_1_rxBufferWrite
 161 00c8 00000000 		.word	UART_1_rxBuffer
 162 00cc 00000000 		.word	UART_1_rxBufferLoopDetect
 163 00d0 00000000 		.word	UART_1_rxBufferOverflow
 164 00d4 00000000 		.word	UART_1_rxBufferRead
 165              		.cfi_endproc
 166              	.LFE0:
 167              		.size	UART_1_RXISR, .-UART_1_RXISR
 168              		.section	.text.UART_1_TXISR,"ax",%progbits
 169              		.align	2
 170              		.global	UART_1_TXISR
 171              		.thumb
 172              		.thumb_func
 173              		.type	UART_1_TXISR, %function
 174              	UART_1_TXISR:
 175              	.LFB1:
 190:Generated_Source\PSoC5/UART_1_INT.c ****     
 191:Generated_Source\PSoC5/UART_1_INT.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
 192:Generated_Source\PSoC5/UART_1_INT.c **** 
 193:Generated_Source\PSoC5/UART_1_INT.c **** 
 194:Generated_Source\PSoC5/UART_1_INT.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
 195:Generated_Source\PSoC5/UART_1_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/UART_1_INT.c ****     * Function Name: UART_1_TXISR
 197:Generated_Source\PSoC5/UART_1_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/UART_1_INT.c ****     *
 199:Generated_Source\PSoC5/UART_1_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/UART_1_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/UART_1_INT.c ****     *
 202:Generated_Source\PSoC5/UART_1_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
 204:Generated_Source\PSoC5/UART_1_INT.c ****     *
 205:Generated_Source\PSoC5/UART_1_INT.c ****     * Return:
 206:Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
 207:Generated_Source\PSoC5/UART_1_INT.c ****     *
 208:Generated_Source\PSoC5/UART_1_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/UART_1_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/UART_1_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/UART_1_INT.c ****     *
 215:Generated_Source\PSoC5/UART_1_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/UART_1_INT.c ****     CY_ISR(UART_1_TXISR)
 217:Generated_Source\PSoC5/UART_1_INT.c ****     {
 176              		.loc 1 217 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 8


 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 7, -4
 184 0002 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/UART_1_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/UART_1_INT.c **** 
 222:Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/UART_1_INT.c **** 
 226:Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_TXISR_START` */
 228:Generated_Source\PSoC5/UART_1_INT.c **** 
 229:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/UART_1_INT.c **** 
 231:Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/UART_1_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/UART_1_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/UART_1_INT.c **** 
 236:Generated_Source\PSoC5/UART_1_INT.c ****         while((UART_1_txBufferRead != UART_1_txBufferWrite) &&
 186              		.loc 1 236 0
 187 0004 19E0     		b	.L10
 188              	.L13:
 237:Generated_Source\PSoC5/UART_1_INT.c ****              ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u))
 238:Generated_Source\PSoC5/UART_1_INT.c ****         {
 239:Generated_Source\PSoC5/UART_1_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/UART_1_INT.c ****             if(UART_1_txBufferRead >= UART_1_TX_BUFFER_SIZE)
 189              		.loc 1 240 0
 190 0006 164B     		ldr	r3, .L15
 191 0008 1B88     		ldrh	r3, [r3]	@ movhi
 192 000a 9BB2     		uxth	r3, r3
 193 000c 41F28732 		movw	r2, #4999
 194 0010 9342     		cmp	r3, r2
 195 0012 02D9     		bls	.L11
 241:Generated_Source\PSoC5/UART_1_INT.c ****             {
 242:Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_txBufferRead = 0u;
 196              		.loc 1 242 0
 197 0014 124B     		ldr	r3, .L15
 198 0016 0022     		movs	r2, #0
 199 0018 1A80     		strh	r2, [r3]	@ movhi
 200              	.L11:
 243:Generated_Source\PSoC5/UART_1_INT.c ****             }
 244:Generated_Source\PSoC5/UART_1_INT.c **** 
 245:Generated_Source\PSoC5/UART_1_INT.c ****             UART_1_TXDATA_REG = UART_1_txBuffer[UART_1_txBufferRead];
 201              		.loc 1 245 0
 202 001a 124B     		ldr	r3, .L15+4
 203 001c 104A     		ldr	r2, .L15
 204 001e 1288     		ldrh	r2, [r2]	@ movhi
 205 0020 92B2     		uxth	r2, r2
 206 0022 1146     		mov	r1, r2
 207 0024 104A     		ldr	r2, .L15+8
 208 0026 525C     		ldrb	r2, [r2, r1]
 209 0028 D2B2     		uxtb	r2, r2
 210 002a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 9


 246:Generated_Source\PSoC5/UART_1_INT.c **** 
 247:Generated_Source\PSoC5/UART_1_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/UART_1_INT.c ****             UART_1_txBufferRead++;
 211              		.loc 1 248 0
 212 002c 0C4B     		ldr	r3, .L15
 213 002e 1B88     		ldrh	r3, [r3]	@ movhi
 214 0030 9BB2     		uxth	r3, r3
 215 0032 0133     		adds	r3, r3, #1
 216 0034 9AB2     		uxth	r2, r3
 217 0036 0A4B     		ldr	r3, .L15
 218 0038 1A80     		strh	r2, [r3]	@ movhi
 219              	.L10:
 236:Generated_Source\PSoC5/UART_1_INT.c ****              ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u))
 220              		.loc 1 236 0
 221 003a 094B     		ldr	r3, .L15
 222 003c 1B88     		ldrh	r3, [r3]	@ movhi
 223 003e 9AB2     		uxth	r2, r3
 224 0040 0A4B     		ldr	r3, .L15+12
 225 0042 1B88     		ldrh	r3, [r3]
 226 0044 9A42     		cmp	r2, r3
 227 0046 06D0     		beq	.L14
 237:Generated_Source\PSoC5/UART_1_INT.c ****         {
 228              		.loc 1 237 0 discriminator 1
 229 0048 094B     		ldr	r3, .L15+16
 230 004a 1B78     		ldrb	r3, [r3]
 231 004c DBB2     		uxtb	r3, r3
 232 004e 03F00403 		and	r3, r3, #4
 236:Generated_Source\PSoC5/UART_1_INT.c ****              ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u))
 233              		.loc 1 236 0 discriminator 1
 234 0052 002B     		cmp	r3, #0
 235 0054 D7D0     		beq	.L13
 236              	.L14:
 249:Generated_Source\PSoC5/UART_1_INT.c ****         }
 250:Generated_Source\PSoC5/UART_1_INT.c **** 
 251:Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at end of ISR (Optional) */
 252:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_TXISR_END` */
 253:Generated_Source\PSoC5/UART_1_INT.c **** 
 254:Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
 255:Generated_Source\PSoC5/UART_1_INT.c **** 
 256:Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_TXISR_EXIT_CALLBACK
 257:Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_TXISR_ExitCallback();
 258:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_TXISR_EXIT_CALLBACK */
 259:Generated_Source\PSoC5/UART_1_INT.c **** 
 260:Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
 261:Generated_Source\PSoC5/UART_1_INT.c ****         EA = int_en;
 262:Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 263:Generated_Source\PSoC5/UART_1_INT.c ****    }
 237              		.loc 1 263 0
 238 0056 00BF     		nop
 239 0058 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 005a 80BC     		pop	{r7}
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 005c 7047     		bx	lr
 246              	.L16:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 10


 247 005e 00BF     		.align	2
 248              	.L15:
 249 0060 00000000 		.word	UART_1_txBufferRead
 250 0064 48650040 		.word	1073767752
 251 0068 00000000 		.word	UART_1_txBuffer
 252 006c 00000000 		.word	UART_1_txBufferWrite
 253 0070 68650040 		.word	1073767784
 254              		.cfi_endproc
 255              	.LFE1:
 256              		.size	UART_1_TXISR, .-UART_1_TXISR
 257              		.text
 258              	.Letext0:
 259              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 260              		.file 3 "Generated_Source\\PSoC5\\UART_1.h"
 261              		.section	.debug_info,"",%progbits
 262              	.Ldebug_info0:
 263 0000 A1010000 		.4byte	0x1a1
 264 0004 0400     		.2byte	0x4
 265 0006 00000000 		.4byte	.Ldebug_abbrev0
 266 000a 04       		.byte	0x4
 267 000b 01       		.uleb128 0x1
 268 000c 00000000 		.4byte	.LASF29
 269 0010 0C       		.byte	0xc
 270 0011 72020000 		.4byte	.LASF30
 271 0015 E6010000 		.4byte	.LASF31
 272 0019 00000000 		.4byte	.Ldebug_ranges0+0
 273 001d 00000000 		.4byte	0
 274 0021 00000000 		.4byte	.Ldebug_line0
 275 0025 02       		.uleb128 0x2
 276 0026 01       		.byte	0x1
 277 0027 06       		.byte	0x6
 278 0028 AA020000 		.4byte	.LASF0
 279 002c 02       		.uleb128 0x2
 280 002d 01       		.byte	0x1
 281 002e 08       		.byte	0x8
 282 002f 00010000 		.4byte	.LASF1
 283 0033 02       		.uleb128 0x2
 284 0034 02       		.byte	0x2
 285 0035 05       		.byte	0x5
 286 0036 DC010000 		.4byte	.LASF2
 287 003a 02       		.uleb128 0x2
 288 003b 02       		.byte	0x2
 289 003c 07       		.byte	0x7
 290 003d C2000000 		.4byte	.LASF3
 291 0041 02       		.uleb128 0x2
 292 0042 04       		.byte	0x4
 293 0043 05       		.byte	0x5
 294 0044 54020000 		.4byte	.LASF4
 295 0048 02       		.uleb128 0x2
 296 0049 04       		.byte	0x4
 297 004a 07       		.byte	0x7
 298 004b 13010000 		.4byte	.LASF5
 299 004f 02       		.uleb128 0x2
 300 0050 08       		.byte	0x8
 301 0051 05       		.byte	0x5
 302 0052 BC010000 		.4byte	.LASF6
 303 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 11


 304 0057 08       		.byte	0x8
 305 0058 07       		.byte	0x7
 306 0059 78010000 		.4byte	.LASF7
 307 005d 03       		.uleb128 0x3
 308 005e 04       		.byte	0x4
 309 005f 05       		.byte	0x5
 310 0060 696E7400 		.ascii	"int\000"
 311 0064 02       		.uleb128 0x2
 312 0065 04       		.byte	0x4
 313 0066 07       		.byte	0x7
 314 0067 6B010000 		.4byte	.LASF8
 315 006b 04       		.uleb128 0x4
 316 006c 25010000 		.4byte	.LASF9
 317 0070 02       		.byte	0x2
 318 0071 E401     		.2byte	0x1e4
 319 0073 2C000000 		.4byte	0x2c
 320 0077 04       		.uleb128 0x4
 321 0078 4F010000 		.4byte	.LASF10
 322 007c 02       		.byte	0x2
 323 007d E501     		.2byte	0x1e5
 324 007f 3A000000 		.4byte	0x3a
 325 0083 02       		.uleb128 0x2
 326 0084 04       		.byte	0x4
 327 0085 04       		.byte	0x4
 328 0086 A2000000 		.4byte	.LASF11
 329 008a 02       		.uleb128 0x2
 330 008b 08       		.byte	0x8
 331 008c 04       		.byte	0x4
 332 008d 48010000 		.4byte	.LASF12
 333 0091 02       		.uleb128 0x2
 334 0092 01       		.byte	0x1
 335 0093 08       		.byte	0x8
 336 0094 5D020000 		.4byte	.LASF13
 337 0098 04       		.uleb128 0x4
 338 0099 0E010000 		.4byte	.LASF14
 339 009d 02       		.byte	0x2
 340 009e 8E02     		.2byte	0x28e
 341 00a0 A4000000 		.4byte	0xa4
 342 00a4 05       		.uleb128 0x5
 343 00a5 6B000000 		.4byte	0x6b
 344 00a9 05       		.uleb128 0x5
 345 00aa 77000000 		.4byte	0x77
 346 00ae 02       		.uleb128 0x2
 347 00af 08       		.byte	0x8
 348 00b0 04       		.byte	0x4
 349 00b1 A7010000 		.4byte	.LASF15
 350 00b5 02       		.uleb128 0x2
 351 00b6 04       		.byte	0x4
 352 00b7 07       		.byte	0x7
 353 00b8 B3010000 		.4byte	.LASF16
 354 00bc 06       		.uleb128 0x6
 355 00bd E8000000 		.4byte	.LASF32
 356 00c1 01       		.byte	0x1
 357 00c2 3B       		.byte	0x3b
 358 00c3 00000000 		.4byte	.LFB0
 359 00c7 D8000000 		.4byte	.LFE0-.LFB0
 360 00cb 01       		.uleb128 0x1
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 12


 361 00cc 9C       		.byte	0x9c
 362 00cd FC000000 		.4byte	0xfc
 363 00d1 07       		.uleb128 0x7
 364 00d2 B6020000 		.4byte	.LASF17
 365 00d6 01       		.byte	0x1
 366 00d7 3D       		.byte	0x3d
 367 00d8 6B000000 		.4byte	0x6b
 368 00dc 02       		.uleb128 0x2
 369 00dd 91       		.byte	0x91
 370 00de 75       		.sleb128 -11
 371 00df 07       		.uleb128 0x7
 372 00e0 F5000000 		.4byte	.LASF18
 373 00e4 01       		.byte	0x1
 374 00e5 3E       		.byte	0x3e
 375 00e6 6B000000 		.4byte	0x6b
 376 00ea 02       		.uleb128 0x2
 377 00eb 91       		.byte	0x91
 378 00ec 76       		.sleb128 -10
 379 00ed 07       		.uleb128 0x7
 380 00ee CA010000 		.4byte	.LASF19
 381 00f2 01       		.byte	0x1
 382 00f3 3F       		.byte	0x3f
 383 00f4 6B000000 		.4byte	0x6b
 384 00f8 02       		.uleb128 0x2
 385 00f9 91       		.byte	0x91
 386 00fa 77       		.sleb128 -9
 387 00fb 00       		.byte	0
 388 00fc 08       		.uleb128 0x8
 389 00fd 2B010000 		.4byte	.LASF33
 390 0101 01       		.byte	0x1
 391 0102 D8       		.byte	0xd8
 392 0103 00000000 		.4byte	.LFB1
 393 0107 74000000 		.4byte	.LFE1-.LFB1
 394 010b 01       		.uleb128 0x1
 395 010c 9C       		.byte	0x9c
 396 010d 09       		.uleb128 0x9
 397 010e A4000000 		.4byte	0xa4
 398 0112 1E010000 		.4byte	0x11e
 399 0116 0A       		.uleb128 0xa
 400 0117 B5000000 		.4byte	0xb5
 401 011b 8713     		.2byte	0x1387
 402 011d 00       		.byte	0
 403 011e 0B       		.uleb128 0xb
 404 011f 38010000 		.4byte	.LASF20
 405 0123 03       		.byte	0x3
 406 0124 3801     		.2byte	0x138
 407 0126 2A010000 		.4byte	0x12a
 408 012a 05       		.uleb128 0x5
 409 012b 0D010000 		.4byte	0x10d
 410 012f 0B       		.uleb128 0xb
 411 0130 96020000 		.4byte	.LASF21
 412 0134 03       		.byte	0x3
 413 0135 3901     		.2byte	0x139
 414 0137 A9000000 		.4byte	0xa9
 415 013b 0B       		.uleb128 0xb
 416 013c 3F020000 		.4byte	.LASF22
 417 0140 03       		.byte	0x3
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 13


 418 0141 3A01     		.2byte	0x13a
 419 0143 77000000 		.4byte	0x77
 420 0147 0B       		.uleb128 0xb
 421 0148 D5000000 		.4byte	.LASF23
 422 014c 03       		.byte	0x3
 423 014d 3D01     		.2byte	0x13d
 424 014f 6B000000 		.4byte	0x6b
 425 0153 09       		.uleb128 0x9
 426 0154 A4000000 		.4byte	0xa4
 427 0158 63010000 		.4byte	0x163
 428 015c 0C       		.uleb128 0xc
 429 015d B5000000 		.4byte	0xb5
 430 0161 09       		.byte	0x9
 431 0162 00       		.byte	0
 432 0163 0B       		.uleb128 0xb
 433 0164 62020000 		.4byte	.LASF24
 434 0168 03       		.byte	0x3
 435 0169 3E01     		.2byte	0x13e
 436 016b 6F010000 		.4byte	0x16f
 437 016f 05       		.uleb128 0x5
 438 0170 53010000 		.4byte	0x153
 439 0174 0B       		.uleb128 0xb
 440 0175 8E000000 		.4byte	.LASF25
 441 0179 03       		.byte	0x3
 442 017a 3F01     		.2byte	0x13f
 443 017c A4000000 		.4byte	0xa4
 444 0180 0B       		.uleb128 0xb
 445 0181 56010000 		.4byte	.LASF26
 446 0185 03       		.byte	0x3
 447 0186 4001     		.2byte	0x140
 448 0188 A4000000 		.4byte	0xa4
 449 018c 0B       		.uleb128 0xb
 450 018d A8000000 		.4byte	.LASF27
 451 0191 03       		.byte	0x3
 452 0192 4101     		.2byte	0x141
 453 0194 A4000000 		.4byte	0xa4
 454 0198 0B       		.uleb128 0xb
 455 0199 8F010000 		.4byte	.LASF28
 456 019d 03       		.byte	0x3
 457 019e 4201     		.2byte	0x142
 458 01a0 A4000000 		.4byte	0xa4
 459 01a4 00       		.byte	0
 460              		.section	.debug_abbrev,"",%progbits
 461              	.Ldebug_abbrev0:
 462 0000 01       		.uleb128 0x1
 463 0001 11       		.uleb128 0x11
 464 0002 01       		.byte	0x1
 465 0003 25       		.uleb128 0x25
 466 0004 0E       		.uleb128 0xe
 467 0005 13       		.uleb128 0x13
 468 0006 0B       		.uleb128 0xb
 469 0007 03       		.uleb128 0x3
 470 0008 0E       		.uleb128 0xe
 471 0009 1B       		.uleb128 0x1b
 472 000a 0E       		.uleb128 0xe
 473 000b 55       		.uleb128 0x55
 474 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 14


 475 000d 11       		.uleb128 0x11
 476 000e 01       		.uleb128 0x1
 477 000f 10       		.uleb128 0x10
 478 0010 17       		.uleb128 0x17
 479 0011 00       		.byte	0
 480 0012 00       		.byte	0
 481 0013 02       		.uleb128 0x2
 482 0014 24       		.uleb128 0x24
 483 0015 00       		.byte	0
 484 0016 0B       		.uleb128 0xb
 485 0017 0B       		.uleb128 0xb
 486 0018 3E       		.uleb128 0x3e
 487 0019 0B       		.uleb128 0xb
 488 001a 03       		.uleb128 0x3
 489 001b 0E       		.uleb128 0xe
 490 001c 00       		.byte	0
 491 001d 00       		.byte	0
 492 001e 03       		.uleb128 0x3
 493 001f 24       		.uleb128 0x24
 494 0020 00       		.byte	0
 495 0021 0B       		.uleb128 0xb
 496 0022 0B       		.uleb128 0xb
 497 0023 3E       		.uleb128 0x3e
 498 0024 0B       		.uleb128 0xb
 499 0025 03       		.uleb128 0x3
 500 0026 08       		.uleb128 0x8
 501 0027 00       		.byte	0
 502 0028 00       		.byte	0
 503 0029 04       		.uleb128 0x4
 504 002a 16       		.uleb128 0x16
 505 002b 00       		.byte	0
 506 002c 03       		.uleb128 0x3
 507 002d 0E       		.uleb128 0xe
 508 002e 3A       		.uleb128 0x3a
 509 002f 0B       		.uleb128 0xb
 510 0030 3B       		.uleb128 0x3b
 511 0031 05       		.uleb128 0x5
 512 0032 49       		.uleb128 0x49
 513 0033 13       		.uleb128 0x13
 514 0034 00       		.byte	0
 515 0035 00       		.byte	0
 516 0036 05       		.uleb128 0x5
 517 0037 35       		.uleb128 0x35
 518 0038 00       		.byte	0
 519 0039 49       		.uleb128 0x49
 520 003a 13       		.uleb128 0x13
 521 003b 00       		.byte	0
 522 003c 00       		.byte	0
 523 003d 06       		.uleb128 0x6
 524 003e 2E       		.uleb128 0x2e
 525 003f 01       		.byte	0x1
 526 0040 3F       		.uleb128 0x3f
 527 0041 19       		.uleb128 0x19
 528 0042 03       		.uleb128 0x3
 529 0043 0E       		.uleb128 0xe
 530 0044 3A       		.uleb128 0x3a
 531 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 15


 532 0046 3B       		.uleb128 0x3b
 533 0047 0B       		.uleb128 0xb
 534 0048 27       		.uleb128 0x27
 535 0049 19       		.uleb128 0x19
 536 004a 11       		.uleb128 0x11
 537 004b 01       		.uleb128 0x1
 538 004c 12       		.uleb128 0x12
 539 004d 06       		.uleb128 0x6
 540 004e 40       		.uleb128 0x40
 541 004f 18       		.uleb128 0x18
 542 0050 9742     		.uleb128 0x2117
 543 0052 19       		.uleb128 0x19
 544 0053 01       		.uleb128 0x1
 545 0054 13       		.uleb128 0x13
 546 0055 00       		.byte	0
 547 0056 00       		.byte	0
 548 0057 07       		.uleb128 0x7
 549 0058 34       		.uleb128 0x34
 550 0059 00       		.byte	0
 551 005a 03       		.uleb128 0x3
 552 005b 0E       		.uleb128 0xe
 553 005c 3A       		.uleb128 0x3a
 554 005d 0B       		.uleb128 0xb
 555 005e 3B       		.uleb128 0x3b
 556 005f 0B       		.uleb128 0xb
 557 0060 49       		.uleb128 0x49
 558 0061 13       		.uleb128 0x13
 559 0062 02       		.uleb128 0x2
 560 0063 18       		.uleb128 0x18
 561 0064 00       		.byte	0
 562 0065 00       		.byte	0
 563 0066 08       		.uleb128 0x8
 564 0067 2E       		.uleb128 0x2e
 565 0068 00       		.byte	0
 566 0069 3F       		.uleb128 0x3f
 567 006a 19       		.uleb128 0x19
 568 006b 03       		.uleb128 0x3
 569 006c 0E       		.uleb128 0xe
 570 006d 3A       		.uleb128 0x3a
 571 006e 0B       		.uleb128 0xb
 572 006f 3B       		.uleb128 0x3b
 573 0070 0B       		.uleb128 0xb
 574 0071 27       		.uleb128 0x27
 575 0072 19       		.uleb128 0x19
 576 0073 11       		.uleb128 0x11
 577 0074 01       		.uleb128 0x1
 578 0075 12       		.uleb128 0x12
 579 0076 06       		.uleb128 0x6
 580 0077 40       		.uleb128 0x40
 581 0078 18       		.uleb128 0x18
 582 0079 9742     		.uleb128 0x2117
 583 007b 19       		.uleb128 0x19
 584 007c 00       		.byte	0
 585 007d 00       		.byte	0
 586 007e 09       		.uleb128 0x9
 587 007f 01       		.uleb128 0x1
 588 0080 01       		.byte	0x1
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 16


 589 0081 49       		.uleb128 0x49
 590 0082 13       		.uleb128 0x13
 591 0083 01       		.uleb128 0x1
 592 0084 13       		.uleb128 0x13
 593 0085 00       		.byte	0
 594 0086 00       		.byte	0
 595 0087 0A       		.uleb128 0xa
 596 0088 21       		.uleb128 0x21
 597 0089 00       		.byte	0
 598 008a 49       		.uleb128 0x49
 599 008b 13       		.uleb128 0x13
 600 008c 2F       		.uleb128 0x2f
 601 008d 05       		.uleb128 0x5
 602 008e 00       		.byte	0
 603 008f 00       		.byte	0
 604 0090 0B       		.uleb128 0xb
 605 0091 34       		.uleb128 0x34
 606 0092 00       		.byte	0
 607 0093 03       		.uleb128 0x3
 608 0094 0E       		.uleb128 0xe
 609 0095 3A       		.uleb128 0x3a
 610 0096 0B       		.uleb128 0xb
 611 0097 3B       		.uleb128 0x3b
 612 0098 05       		.uleb128 0x5
 613 0099 49       		.uleb128 0x49
 614 009a 13       		.uleb128 0x13
 615 009b 3F       		.uleb128 0x3f
 616 009c 19       		.uleb128 0x19
 617 009d 3C       		.uleb128 0x3c
 618 009e 19       		.uleb128 0x19
 619 009f 00       		.byte	0
 620 00a0 00       		.byte	0
 621 00a1 0C       		.uleb128 0xc
 622 00a2 21       		.uleb128 0x21
 623 00a3 00       		.byte	0
 624 00a4 49       		.uleb128 0x49
 625 00a5 13       		.uleb128 0x13
 626 00a6 2F       		.uleb128 0x2f
 627 00a7 0B       		.uleb128 0xb
 628 00a8 00       		.byte	0
 629 00a9 00       		.byte	0
 630 00aa 00       		.byte	0
 631              		.section	.debug_aranges,"",%progbits
 632 0000 24000000 		.4byte	0x24
 633 0004 0200     		.2byte	0x2
 634 0006 00000000 		.4byte	.Ldebug_info0
 635 000a 04       		.byte	0x4
 636 000b 00       		.byte	0
 637 000c 0000     		.2byte	0
 638 000e 0000     		.2byte	0
 639 0010 00000000 		.4byte	.LFB0
 640 0014 D8000000 		.4byte	.LFE0-.LFB0
 641 0018 00000000 		.4byte	.LFB1
 642 001c 74000000 		.4byte	.LFE1-.LFB1
 643 0020 00000000 		.4byte	0
 644 0024 00000000 		.4byte	0
 645              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 17


 646              	.Ldebug_ranges0:
 647 0000 00000000 		.4byte	.LFB0
 648 0004 D8000000 		.4byte	.LFE0
 649 0008 00000000 		.4byte	.LFB1
 650 000c 74000000 		.4byte	.LFE1
 651 0010 00000000 		.4byte	0
 652 0014 00000000 		.4byte	0
 653              		.section	.debug_line,"",%progbits
 654              	.Ldebug_line0:
 655 0000 AD000000 		.section	.debug_str,"MS",%progbits,1
 655      02005300 
 655      00000201 
 655      FB0E0D00 
 655      01010101 
 656              	.LASF29:
 657 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 657      43313120 
 657      352E342E 
 657      31203230 
 657      31363036 
 658 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 658      20726576 
 658      6973696F 
 658      6E203233 
 658      37373135 
 659 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 659      66756E63 
 659      74696F6E 
 659      2D736563 
 659      74696F6E 
 660              	.LASF25:
 661 008e 55415254 		.ascii	"UART_1_rxBufferRead\000"
 661      5F315F72 
 661      78427566 
 661      66657252 
 661      65616400 
 662              	.LASF11:
 663 00a2 666C6F61 		.ascii	"float\000"
 663      7400
 664              	.LASF27:
 665 00a8 55415254 		.ascii	"UART_1_rxBufferLoopDetect\000"
 665      5F315F72 
 665      78427566 
 665      6665724C 
 665      6F6F7044 
 666              	.LASF3:
 667 00c2 73686F72 		.ascii	"short unsigned int\000"
 667      7420756E 
 667      7369676E 
 667      65642069 
 667      6E7400
 668              	.LASF23:
 669 00d5 55415254 		.ascii	"UART_1_errorStatus\000"
 669      5F315F65 
 669      72726F72 
 669      53746174 
 669      757300
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 18


 670              	.LASF32:
 671 00e8 55415254 		.ascii	"UART_1_RXISR\000"
 671      5F315F52 
 671      58495352 
 671      00
 672              	.LASF18:
 673 00f5 72656164 		.ascii	"readStatus\000"
 673      53746174 
 673      757300
 674              	.LASF1:
 675 0100 756E7369 		.ascii	"unsigned char\000"
 675      676E6564 
 675      20636861 
 675      7200
 676              	.LASF14:
 677 010e 72656738 		.ascii	"reg8\000"
 677      00
 678              	.LASF5:
 679 0113 6C6F6E67 		.ascii	"long unsigned int\000"
 679      20756E73 
 679      69676E65 
 679      6420696E 
 679      7400
 680              	.LASF9:
 681 0125 75696E74 		.ascii	"uint8\000"
 681      3800
 682              	.LASF33:
 683 012b 55415254 		.ascii	"UART_1_TXISR\000"
 683      5F315F54 
 683      58495352 
 683      00
 684              	.LASF20:
 685 0138 55415254 		.ascii	"UART_1_txBuffer\000"
 685      5F315F74 
 685      78427566 
 685      66657200 
 686              	.LASF12:
 687 0148 646F7562 		.ascii	"double\000"
 687      6C6500
 688              	.LASF10:
 689 014f 75696E74 		.ascii	"uint16\000"
 689      313600
 690              	.LASF26:
 691 0156 55415254 		.ascii	"UART_1_rxBufferWrite\000"
 691      5F315F72 
 691      78427566 
 691      66657257 
 691      72697465 
 692              	.LASF8:
 693 016b 756E7369 		.ascii	"unsigned int\000"
 693      676E6564 
 693      20696E74 
 693      00
 694              	.LASF7:
 695 0178 6C6F6E67 		.ascii	"long long unsigned int\000"
 695      206C6F6E 
 695      6720756E 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 19


 695      7369676E 
 695      65642069 
 696              	.LASF28:
 697 018f 55415254 		.ascii	"UART_1_rxBufferOverflow\000"
 697      5F315F72 
 697      78427566 
 697      6665724F 
 697      76657266 
 698              	.LASF15:
 699 01a7 6C6F6E67 		.ascii	"long double\000"
 699      20646F75 
 699      626C6500 
 700              	.LASF16:
 701 01b3 73697A65 		.ascii	"sizetype\000"
 701      74797065 
 701      00
 702              	.LASF6:
 703 01bc 6C6F6E67 		.ascii	"long long int\000"
 703      206C6F6E 
 703      6720696E 
 703      7400
 704              	.LASF19:
 705 01ca 696E6372 		.ascii	"increment_pointer\000"
 705      656D656E 
 705      745F706F 
 705      696E7465 
 705      7200
 706              	.LASF2:
 707 01dc 73686F72 		.ascii	"short int\000"
 707      7420696E 
 707      7400
 708              	.LASF31:
 709 01e6 433A5C55 		.ascii	"C:\\Users\\gerwi\\OneDrive\\Documenten\\PSoC Creato"
 709      73657273 
 709      5C676572 
 709      77695C4F 
 709      6E654472 
 710 0214 725C4144 		.ascii	"r\\ADC_SAR_Seq_Example01\\ADC_DMA_UART.cydsn\000"
 710      435F5341 
 710      525F5365 
 710      715F4578 
 710      616D706C 
 711              	.LASF22:
 712 023f 55415254 		.ascii	"UART_1_txBufferWrite\000"
 712      5F315F74 
 712      78427566 
 712      66657257 
 712      72697465 
 713              	.LASF4:
 714 0254 6C6F6E67 		.ascii	"long int\000"
 714      20696E74 
 714      00
 715              	.LASF13:
 716 025d 63686172 		.ascii	"char\000"
 716      00
 717              	.LASF24:
 718 0262 55415254 		.ascii	"UART_1_rxBuffer\000"
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\ccMOuxbS.s 			page 20


 718      5F315F72 
 718      78427566 
 718      66657200 
 719              	.LASF30:
 720 0272 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1_INT.c\000"
 720      72617465 
 720      645F536F 
 720      75726365 
 720      5C50536F 
 721              	.LASF21:
 722 0296 55415254 		.ascii	"UART_1_txBufferRead\000"
 722      5F315F74 
 722      78427566 
 722      66657252 
 722      65616400 
 723              	.LASF0:
 724 02aa 7369676E 		.ascii	"signed char\000"
 724      65642063 
 724      68617200 
 725              	.LASF17:
 726 02b6 72656164 		.ascii	"readData\000"
 726      44617461 
 726      00
 727              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
