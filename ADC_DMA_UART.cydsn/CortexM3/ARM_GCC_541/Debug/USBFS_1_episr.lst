ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_1_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_1_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_1_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_1_EP_1_ISR, %function
  25              	USBFS_1_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_1_episr.c"
   1:Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_1_episr.c **** * \file USBFS_1_episr.c
   3:Generated_Source\PSoC5/USBFS_1_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_1_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_1_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_1_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_1_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_1_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_1_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_1_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_pvt.h"
  17:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_1_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_1_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_1_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 2


  31:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_1_ISR
  32:Generated_Source\PSoC5/USBFS_1_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_1_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_1_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP1_INTR);
  38              		.loc 1 55 0
  39 0004 0D4B     		ldr	r3, .L3
  40 0006 0122     		movs	r2, #1
  41 0008 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_1_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP1].addr & USBFS_1_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP1].epCr0;
  42              		.loc 1 66 0
  43 000a 0D4B     		ldr	r3, .L3+4
  44 000c 9B7C     		ldrb	r3, [r3, #18]
  67:Generated_Source\PSoC5/USBFS_1_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP1) != USBFS_1_EP_TYPE_ISOC)
  45              		.loc 1 69 0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 3


  46 000e 0D4B     		ldr	r3, .L3+8
  47 0010 1B7B     		ldrb	r3, [r3, #12]
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 03F00303 		and	r3, r3, #3
  50 0018 012B     		cmp	r3, #1
  51 001a 08D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP1].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
  52              		.loc 1 71 0
  53 001c 094B     		ldr	r3, .L3+8
  54 001e DB7B     		ldrb	r3, [r3, #15]
  55 0020 DBB2     		uxtb	r3, r3
  56 0022 83F07F03 		eor	r3, r3, #127
  57 0026 DB43     		mvns	r3, r3
  58 0028 DAB2     		uxtb	r2, r3
  59 002a 064B     		ldr	r3, .L3+8
  60 002c DA73     		strb	r2, [r3, #15]
  61              	.L2:
  72:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP1].apiEpState = USBFS_1_EVENT_PENDING;
  62              		.loc 1 80 0
  63 002e 054B     		ldr	r3, .L3+8
  64 0030 0122     		movs	r2, #1
  65 0032 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP1)
  87:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_1_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 4


 107:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
  66              		.loc 1 107 0
  67 0034 00BF     		nop
  68 0036 BD46     		mov	sp, r7
  69              		.cfi_def_cfa_register 13
  70              		@ sp needed
  71 0038 80BC     		pop	{r7}
  72              		.cfi_restore 7
  73              		.cfi_def_cfa_offset 0
  74 003a 7047     		bx	lr
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 003c 0B600040 		.word	1073766411
  79 0040 FC5F0040 		.word	1073766396
  80 0044 00000000 		.word	USBFS_1_EP
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBFS_1_EP_1_ISR, .-USBFS_1_EP_1_ISR
  84              		.section	.text.USBFS_1_BUS_RESET_ISR,"ax",%progbits
  85              		.align	2
  86              		.global	USBFS_1_BUS_RESET_ISR
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBFS_1_BUS_RESET_ISR, %function
  90              	USBFS_1_BUS_RESET_ISR:
  91              	.LFB1:
 108:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 122:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP2_INTR);
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 5


 138:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP2].addr & USBFS_1_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP2].epCr0;
 149:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP2) != USBFS_1_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP2].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP2].apiEpState = USBFS_1_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP2)
 169:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 6


 195:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP3].addr & USBFS_1_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP3) != USBFS_1_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP3].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP3].apiEpState = USBFS_1_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP3)
 250:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 7


 252:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP4].addr & USBFS_1_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 8


 309:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP4].epCr0;
 311:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP4) != USBFS_1_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP4].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP4].apiEpState = USBFS_1_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP4)
 331:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 9


 366:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_1_episr.c ****                  USBFS_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP5].addr & USBFS_1_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP5) != USBFS_1_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP5].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP5].apiEpState = USBFS_1_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP5)
 413:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 10


 423:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP6].addr & USBFS_1_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP6) != USBFS_1_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP6].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 11


 480:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP6].apiEpState = USBFS_1_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP6)
 495:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 12


 537:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP7].addr & USBFS_1_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_1_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP7) != USBFS_1_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP7].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP7].apiEpState = USBFS_1_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP7)
 578:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 13


 594:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP8].addr & USBFS_1_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP8) != USBFS_1_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP8].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 14


 651:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP8].apiEpState = USBFS_1_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP8)
 660:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 695:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 15


 708:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 709:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_1_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_1_episr.c **** * Function Name: USBFS_1_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_1_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_1_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_1_episr.c **** CY_ISR(USBFS_1_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_1_episr.c **** {
  92              		.loc 1 723 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ReInitComponent();
 102              		.loc 1 734 0
 103 0004 FFF7FEFF 		bl	USBFS_1_ReInitComponent
 735:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 736:Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBFS_1_episr.c **** }
 104              		.loc 1 739 0
 105 0008 00BF     		nop
 106 000a 80BD     		pop	{r7, pc}
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	USBFS_1_BUS_RESET_ISR, .-USBFS_1_BUS_RESET_ISR
 110              		.text
 111              	.Letext0:
 112              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 113              		.file 3 "Generated_Source\\PSoC5\\USBFS_1.h"
 114              		.file 4 "Generated_Source\\PSoC5\\USBFS_1_pvt.h"
 115              		.section	.debug_info,"",%progbits
 116              	.Ldebug_info0:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 16


 117 0000 03020000 		.4byte	0x203
 118 0004 0400     		.2byte	0x4
 119 0006 00000000 		.4byte	.Ldebug_abbrev0
 120 000a 04       		.byte	0x4
 121 000b 01       		.uleb128 0x1
 122 000c 0B000000 		.4byte	.LASF35
 123 0010 0C       		.byte	0xc
 124 0011 B8000000 		.4byte	.LASF36
 125 0015 89010000 		.4byte	.LASF37
 126 0019 00000000 		.4byte	.Ldebug_ranges0+0
 127 001d 00000000 		.4byte	0
 128 0021 00000000 		.4byte	.Ldebug_line0
 129 0025 02       		.uleb128 0x2
 130 0026 01       		.byte	0x1
 131 0027 06       		.byte	0x6
 132 0028 89020000 		.4byte	.LASF0
 133 002c 02       		.uleb128 0x2
 134 002d 01       		.byte	0x1
 135 002e 08       		.byte	0x8
 136 002f 0C010000 		.4byte	.LASF1
 137 0033 02       		.uleb128 0x2
 138 0034 02       		.byte	0x2
 139 0035 05       		.byte	0x5
 140 0036 4F020000 		.4byte	.LASF2
 141 003a 02       		.uleb128 0x2
 142 003b 02       		.byte	0x2
 143 003c 07       		.byte	0x7
 144 003d A5000000 		.4byte	.LASF3
 145 0041 02       		.uleb128 0x2
 146 0042 04       		.byte	0x4
 147 0043 05       		.byte	0x5
 148 0044 69020000 		.4byte	.LASF4
 149 0048 02       		.uleb128 0x2
 150 0049 04       		.byte	0x4
 151 004a 07       		.byte	0x7
 152 004b 1F010000 		.4byte	.LASF5
 153 004f 02       		.uleb128 0x2
 154 0050 08       		.byte	0x8
 155 0051 05       		.byte	0x5
 156 0052 31020000 		.4byte	.LASF6
 157 0056 02       		.uleb128 0x2
 158 0057 08       		.byte	0x8
 159 0058 07       		.byte	0x7
 160 0059 00020000 		.4byte	.LASF7
 161 005d 03       		.uleb128 0x3
 162 005e 04       		.byte	0x4
 163 005f 05       		.byte	0x5
 164 0060 696E7400 		.ascii	"int\000"
 165 0064 02       		.uleb128 0x2
 166 0065 04       		.byte	0x4
 167 0066 07       		.byte	0x7
 168 0067 E2010000 		.4byte	.LASF8
 169 006b 04       		.uleb128 0x4
 170 006c 59020000 		.4byte	.LASF9
 171 0070 02       		.byte	0x2
 172 0071 E401     		.2byte	0x1e4
 173 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 17


 174 0077 04       		.uleb128 0x4
 175 0078 77010000 		.4byte	.LASF10
 176 007c 02       		.byte	0x2
 177 007d E501     		.2byte	0x1e5
 178 007f 3A000000 		.4byte	0x3a
 179 0083 02       		.uleb128 0x2
 180 0084 04       		.byte	0x4
 181 0085 04       		.byte	0x4
 182 0086 9F000000 		.4byte	.LASF11
 183 008a 02       		.uleb128 0x2
 184 008b 08       		.byte	0x8
 185 008c 04       		.byte	0x4
 186 008d 53010000 		.4byte	.LASF12
 187 0091 02       		.uleb128 0x2
 188 0092 01       		.byte	0x1
 189 0093 08       		.byte	0x8
 190 0094 3F020000 		.4byte	.LASF13
 191 0098 04       		.uleb128 0x4
 192 0099 1A010000 		.4byte	.LASF14
 193 009d 02       		.byte	0x2
 194 009e 8E02     		.2byte	0x28e
 195 00a0 A4000000 		.4byte	0xa4
 196 00a4 05       		.uleb128 0x5
 197 00a5 6B000000 		.4byte	0x6b
 198 00a9 02       		.uleb128 0x2
 199 00aa 08       		.byte	0x8
 200 00ab 04       		.byte	0x4
 201 00ac 7D020000 		.4byte	.LASF15
 202 00b0 02       		.uleb128 0x2
 203 00b1 04       		.byte	0x4
 204 00b2 07       		.byte	0x7
 205 00b3 21020000 		.4byte	.LASF16
 206 00b7 06       		.uleb128 0x6
 207 00b8 0C       		.byte	0xc
 208 00b9 03       		.byte	0x3
 209 00ba 8A       		.byte	0x8a
 210 00bb 2C010000 		.4byte	0x12c
 211 00bf 07       		.uleb128 0x7
 212 00c0 5A010000 		.4byte	.LASF17
 213 00c4 03       		.byte	0x3
 214 00c5 8C       		.byte	0x8c
 215 00c6 6B000000 		.4byte	0x6b
 216 00ca 00       		.byte	0
 217 00cb 07       		.uleb128 0x7
 218 00cc 7E010000 		.4byte	.LASF18
 219 00d0 03       		.byte	0x3
 220 00d1 8D       		.byte	0x8d
 221 00d2 6B000000 		.4byte	0x6b
 222 00d6 01       		.byte	0x1
 223 00d7 07       		.uleb128 0x7
 224 00d8 17020000 		.4byte	.LASF19
 225 00dc 03       		.byte	0x3
 226 00dd 8E       		.byte	0x8e
 227 00de 6B000000 		.4byte	0x6b
 228 00e2 02       		.byte	0x2
 229 00e3 07       		.uleb128 0x7
 230 00e4 03010000 		.4byte	.LASF20
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 18


 231 00e8 03       		.byte	0x3
 232 00e9 8F       		.byte	0x8f
 233 00ea 6B000000 		.4byte	0x6b
 234 00ee 03       		.byte	0x3
 235 00ef 07       		.uleb128 0x7
 236 00f0 31010000 		.4byte	.LASF21
 237 00f4 03       		.byte	0x3
 238 00f5 90       		.byte	0x90
 239 00f6 6B000000 		.4byte	0x6b
 240 00fa 04       		.byte	0x4
 241 00fb 07       		.uleb128 0x7
 242 00fc 2A020000 		.4byte	.LASF22
 243 0100 03       		.byte	0x3
 244 0101 91       		.byte	0x91
 245 0102 6B000000 		.4byte	0x6b
 246 0106 05       		.byte	0x5
 247 0107 07       		.uleb128 0x7
 248 0108 72020000 		.4byte	.LASF23
 249 010c 03       		.byte	0x3
 250 010d 92       		.byte	0x92
 251 010e 77000000 		.4byte	0x77
 252 0112 06       		.byte	0x6
 253 0113 07       		.uleb128 0x7
 254 0114 44020000 		.4byte	.LASF24
 255 0118 03       		.byte	0x3
 256 0119 93       		.byte	0x93
 257 011a 77000000 		.4byte	0x77
 258 011e 08       		.byte	0x8
 259 011f 07       		.uleb128 0x7
 260 0120 5F020000 		.4byte	.LASF25
 261 0124 03       		.byte	0x3
 262 0125 94       		.byte	0x94
 263 0126 6B000000 		.4byte	0x6b
 264 012a 0A       		.byte	0xa
 265 012b 00       		.byte	0
 266 012c 08       		.uleb128 0x8
 267 012d 3C010000 		.4byte	.LASF26
 268 0131 03       		.byte	0x3
 269 0132 95       		.byte	0x95
 270 0133 B7000000 		.4byte	0xb7
 271 0137 06       		.uleb128 0x6
 272 0138 10       		.byte	0x10
 273 0139 03       		.byte	0x3
 274 013a D1       		.byte	0xd1
 275 013b 70010000 		.4byte	0x170
 276 013f 07       		.uleb128 0x7
 277 0140 F5000000 		.4byte	.LASF27
 278 0144 03       		.byte	0x3
 279 0145 D3       		.byte	0xd3
 280 0146 6B000000 		.4byte	0x6b
 281 014a 00       		.byte	0
 282 014b 07       		.uleb128 0x7
 283 014c FC000000 		.4byte	.LASF28
 284 0150 03       		.byte	0x3
 285 0151 D4       		.byte	0xd4
 286 0152 6B000000 		.4byte	0x6b
 287 0156 01       		.byte	0x1
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 19


 288 0157 07       		.uleb128 0x7
 289 0158 99000000 		.4byte	.LASF29
 290 015c 03       		.byte	0x3
 291 015d D5       		.byte	0xd5
 292 015e 6B000000 		.4byte	0x6b
 293 0162 02       		.byte	0x2
 294 0163 09       		.uleb128 0x9
 295 0164 67617000 		.ascii	"gap\000"
 296 0168 03       		.byte	0x3
 297 0169 D6       		.byte	0xd6
 298 016a 70010000 		.4byte	0x170
 299 016e 03       		.byte	0x3
 300 016f 00       		.byte	0
 301 0170 0A       		.uleb128 0xa
 302 0171 6B000000 		.4byte	0x6b
 303 0175 80010000 		.4byte	0x180
 304 0179 0B       		.uleb128 0xb
 305 017a B0000000 		.4byte	0xb0
 306 017e 0C       		.byte	0xc
 307 017f 00       		.byte	0
 308 0180 08       		.uleb128 0x8
 309 0181 61010000 		.4byte	.LASF30
 310 0185 03       		.byte	0x3
 311 0186 D7       		.byte	0xd7
 312 0187 37010000 		.4byte	0x137
 313 018b 0C       		.uleb128 0xc
 314 018c 90       		.byte	0x90
 315 018d 03       		.byte	0x3
 316 018e 0B01     		.2byte	0x10b
 317 0190 A2010000 		.4byte	0x1a2
 318 0194 0D       		.uleb128 0xd
 319 0195 36010000 		.4byte	.LASF31
 320 0199 03       		.byte	0x3
 321 019a 0D01     		.2byte	0x10d
 322 019c A2010000 		.4byte	0x1a2
 323 01a0 00       		.byte	0
 324 01a1 00       		.byte	0
 325 01a2 0A       		.uleb128 0xa
 326 01a3 80010000 		.4byte	0x180
 327 01a7 B2010000 		.4byte	0x1b2
 328 01ab 0B       		.uleb128 0xb
 329 01ac B0000000 		.4byte	0xb0
 330 01b0 08       		.byte	0x8
 331 01b1 00       		.byte	0
 332 01b2 04       		.uleb128 0x4
 333 01b3 95020000 		.4byte	.LASF32
 334 01b7 03       		.byte	0x3
 335 01b8 0E01     		.2byte	0x10e
 336 01ba 8B010000 		.4byte	0x18b
 337 01be 0E       		.uleb128 0xe
 338 01bf EF010000 		.4byte	.LASF33
 339 01c3 01       		.byte	0x1
 340 01c4 25       		.byte	0x25
 341 01c5 00000000 		.4byte	.LFB0
 342 01c9 48000000 		.4byte	.LFE0-.LFB0
 343 01cd 01       		.uleb128 0x1
 344 01ce 9C       		.byte	0x9c
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 20


 345 01cf 0F       		.uleb128 0xf
 346 01d0 DF000000 		.4byte	.LASF34
 347 01d4 01       		.byte	0x1
 348 01d5 D202     		.2byte	0x2d2
 349 01d7 00000000 		.4byte	.LFB1
 350 01db 0C000000 		.4byte	.LFE1-.LFB1
 351 01df 01       		.uleb128 0x1
 352 01e0 9C       		.byte	0x9c
 353 01e1 0A       		.uleb128 0xa
 354 01e2 F1010000 		.4byte	0x1f1
 355 01e6 F1010000 		.4byte	0x1f1
 356 01ea 0B       		.uleb128 0xb
 357 01eb B0000000 		.4byte	0xb0
 358 01ef 08       		.byte	0x8
 359 01f0 00       		.byte	0
 360 01f1 05       		.uleb128 0x5
 361 01f2 2C010000 		.4byte	0x12c
 362 01f6 10       		.uleb128 0x10
 363 01f7 00000000 		.4byte	.LASF38
 364 01fb 04       		.byte	0x4
 365 01fc 78       		.byte	0x78
 366 01fd 01020000 		.4byte	0x201
 367 0201 05       		.uleb128 0x5
 368 0202 E1010000 		.4byte	0x1e1
 369 0206 00       		.byte	0
 370              		.section	.debug_abbrev,"",%progbits
 371              	.Ldebug_abbrev0:
 372 0000 01       		.uleb128 0x1
 373 0001 11       		.uleb128 0x11
 374 0002 01       		.byte	0x1
 375 0003 25       		.uleb128 0x25
 376 0004 0E       		.uleb128 0xe
 377 0005 13       		.uleb128 0x13
 378 0006 0B       		.uleb128 0xb
 379 0007 03       		.uleb128 0x3
 380 0008 0E       		.uleb128 0xe
 381 0009 1B       		.uleb128 0x1b
 382 000a 0E       		.uleb128 0xe
 383 000b 55       		.uleb128 0x55
 384 000c 17       		.uleb128 0x17
 385 000d 11       		.uleb128 0x11
 386 000e 01       		.uleb128 0x1
 387 000f 10       		.uleb128 0x10
 388 0010 17       		.uleb128 0x17
 389 0011 00       		.byte	0
 390 0012 00       		.byte	0
 391 0013 02       		.uleb128 0x2
 392 0014 24       		.uleb128 0x24
 393 0015 00       		.byte	0
 394 0016 0B       		.uleb128 0xb
 395 0017 0B       		.uleb128 0xb
 396 0018 3E       		.uleb128 0x3e
 397 0019 0B       		.uleb128 0xb
 398 001a 03       		.uleb128 0x3
 399 001b 0E       		.uleb128 0xe
 400 001c 00       		.byte	0
 401 001d 00       		.byte	0
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 21


 402 001e 03       		.uleb128 0x3
 403 001f 24       		.uleb128 0x24
 404 0020 00       		.byte	0
 405 0021 0B       		.uleb128 0xb
 406 0022 0B       		.uleb128 0xb
 407 0023 3E       		.uleb128 0x3e
 408 0024 0B       		.uleb128 0xb
 409 0025 03       		.uleb128 0x3
 410 0026 08       		.uleb128 0x8
 411 0027 00       		.byte	0
 412 0028 00       		.byte	0
 413 0029 04       		.uleb128 0x4
 414 002a 16       		.uleb128 0x16
 415 002b 00       		.byte	0
 416 002c 03       		.uleb128 0x3
 417 002d 0E       		.uleb128 0xe
 418 002e 3A       		.uleb128 0x3a
 419 002f 0B       		.uleb128 0xb
 420 0030 3B       		.uleb128 0x3b
 421 0031 05       		.uleb128 0x5
 422 0032 49       		.uleb128 0x49
 423 0033 13       		.uleb128 0x13
 424 0034 00       		.byte	0
 425 0035 00       		.byte	0
 426 0036 05       		.uleb128 0x5
 427 0037 35       		.uleb128 0x35
 428 0038 00       		.byte	0
 429 0039 49       		.uleb128 0x49
 430 003a 13       		.uleb128 0x13
 431 003b 00       		.byte	0
 432 003c 00       		.byte	0
 433 003d 06       		.uleb128 0x6
 434 003e 13       		.uleb128 0x13
 435 003f 01       		.byte	0x1
 436 0040 0B       		.uleb128 0xb
 437 0041 0B       		.uleb128 0xb
 438 0042 3A       		.uleb128 0x3a
 439 0043 0B       		.uleb128 0xb
 440 0044 3B       		.uleb128 0x3b
 441 0045 0B       		.uleb128 0xb
 442 0046 01       		.uleb128 0x1
 443 0047 13       		.uleb128 0x13
 444 0048 00       		.byte	0
 445 0049 00       		.byte	0
 446 004a 07       		.uleb128 0x7
 447 004b 0D       		.uleb128 0xd
 448 004c 00       		.byte	0
 449 004d 03       		.uleb128 0x3
 450 004e 0E       		.uleb128 0xe
 451 004f 3A       		.uleb128 0x3a
 452 0050 0B       		.uleb128 0xb
 453 0051 3B       		.uleb128 0x3b
 454 0052 0B       		.uleb128 0xb
 455 0053 49       		.uleb128 0x49
 456 0054 13       		.uleb128 0x13
 457 0055 38       		.uleb128 0x38
 458 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 22


 459 0057 00       		.byte	0
 460 0058 00       		.byte	0
 461 0059 08       		.uleb128 0x8
 462 005a 16       		.uleb128 0x16
 463 005b 00       		.byte	0
 464 005c 03       		.uleb128 0x3
 465 005d 0E       		.uleb128 0xe
 466 005e 3A       		.uleb128 0x3a
 467 005f 0B       		.uleb128 0xb
 468 0060 3B       		.uleb128 0x3b
 469 0061 0B       		.uleb128 0xb
 470 0062 49       		.uleb128 0x49
 471 0063 13       		.uleb128 0x13
 472 0064 00       		.byte	0
 473 0065 00       		.byte	0
 474 0066 09       		.uleb128 0x9
 475 0067 0D       		.uleb128 0xd
 476 0068 00       		.byte	0
 477 0069 03       		.uleb128 0x3
 478 006a 08       		.uleb128 0x8
 479 006b 3A       		.uleb128 0x3a
 480 006c 0B       		.uleb128 0xb
 481 006d 3B       		.uleb128 0x3b
 482 006e 0B       		.uleb128 0xb
 483 006f 49       		.uleb128 0x49
 484 0070 13       		.uleb128 0x13
 485 0071 38       		.uleb128 0x38
 486 0072 0B       		.uleb128 0xb
 487 0073 00       		.byte	0
 488 0074 00       		.byte	0
 489 0075 0A       		.uleb128 0xa
 490 0076 01       		.uleb128 0x1
 491 0077 01       		.byte	0x1
 492 0078 49       		.uleb128 0x49
 493 0079 13       		.uleb128 0x13
 494 007a 01       		.uleb128 0x1
 495 007b 13       		.uleb128 0x13
 496 007c 00       		.byte	0
 497 007d 00       		.byte	0
 498 007e 0B       		.uleb128 0xb
 499 007f 21       		.uleb128 0x21
 500 0080 00       		.byte	0
 501 0081 49       		.uleb128 0x49
 502 0082 13       		.uleb128 0x13
 503 0083 2F       		.uleb128 0x2f
 504 0084 0B       		.uleb128 0xb
 505 0085 00       		.byte	0
 506 0086 00       		.byte	0
 507 0087 0C       		.uleb128 0xc
 508 0088 13       		.uleb128 0x13
 509 0089 01       		.byte	0x1
 510 008a 0B       		.uleb128 0xb
 511 008b 0B       		.uleb128 0xb
 512 008c 3A       		.uleb128 0x3a
 513 008d 0B       		.uleb128 0xb
 514 008e 3B       		.uleb128 0x3b
 515 008f 05       		.uleb128 0x5
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 23


 516 0090 01       		.uleb128 0x1
 517 0091 13       		.uleb128 0x13
 518 0092 00       		.byte	0
 519 0093 00       		.byte	0
 520 0094 0D       		.uleb128 0xd
 521 0095 0D       		.uleb128 0xd
 522 0096 00       		.byte	0
 523 0097 03       		.uleb128 0x3
 524 0098 0E       		.uleb128 0xe
 525 0099 3A       		.uleb128 0x3a
 526 009a 0B       		.uleb128 0xb
 527 009b 3B       		.uleb128 0x3b
 528 009c 05       		.uleb128 0x5
 529 009d 49       		.uleb128 0x49
 530 009e 13       		.uleb128 0x13
 531 009f 38       		.uleb128 0x38
 532 00a0 0B       		.uleb128 0xb
 533 00a1 00       		.byte	0
 534 00a2 00       		.byte	0
 535 00a3 0E       		.uleb128 0xe
 536 00a4 2E       		.uleb128 0x2e
 537 00a5 00       		.byte	0
 538 00a6 3F       		.uleb128 0x3f
 539 00a7 19       		.uleb128 0x19
 540 00a8 03       		.uleb128 0x3
 541 00a9 0E       		.uleb128 0xe
 542 00aa 3A       		.uleb128 0x3a
 543 00ab 0B       		.uleb128 0xb
 544 00ac 3B       		.uleb128 0x3b
 545 00ad 0B       		.uleb128 0xb
 546 00ae 27       		.uleb128 0x27
 547 00af 19       		.uleb128 0x19
 548 00b0 11       		.uleb128 0x11
 549 00b1 01       		.uleb128 0x1
 550 00b2 12       		.uleb128 0x12
 551 00b3 06       		.uleb128 0x6
 552 00b4 40       		.uleb128 0x40
 553 00b5 18       		.uleb128 0x18
 554 00b6 9742     		.uleb128 0x2117
 555 00b8 19       		.uleb128 0x19
 556 00b9 00       		.byte	0
 557 00ba 00       		.byte	0
 558 00bb 0F       		.uleb128 0xf
 559 00bc 2E       		.uleb128 0x2e
 560 00bd 00       		.byte	0
 561 00be 3F       		.uleb128 0x3f
 562 00bf 19       		.uleb128 0x19
 563 00c0 03       		.uleb128 0x3
 564 00c1 0E       		.uleb128 0xe
 565 00c2 3A       		.uleb128 0x3a
 566 00c3 0B       		.uleb128 0xb
 567 00c4 3B       		.uleb128 0x3b
 568 00c5 05       		.uleb128 0x5
 569 00c6 27       		.uleb128 0x27
 570 00c7 19       		.uleb128 0x19
 571 00c8 11       		.uleb128 0x11
 572 00c9 01       		.uleb128 0x1
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 24


 573 00ca 12       		.uleb128 0x12
 574 00cb 06       		.uleb128 0x6
 575 00cc 40       		.uleb128 0x40
 576 00cd 18       		.uleb128 0x18
 577 00ce 9642     		.uleb128 0x2116
 578 00d0 19       		.uleb128 0x19
 579 00d1 00       		.byte	0
 580 00d2 00       		.byte	0
 581 00d3 10       		.uleb128 0x10
 582 00d4 34       		.uleb128 0x34
 583 00d5 00       		.byte	0
 584 00d6 03       		.uleb128 0x3
 585 00d7 0E       		.uleb128 0xe
 586 00d8 3A       		.uleb128 0x3a
 587 00d9 0B       		.uleb128 0xb
 588 00da 3B       		.uleb128 0x3b
 589 00db 0B       		.uleb128 0xb
 590 00dc 49       		.uleb128 0x49
 591 00dd 13       		.uleb128 0x13
 592 00de 3F       		.uleb128 0x3f
 593 00df 19       		.uleb128 0x19
 594 00e0 3C       		.uleb128 0x3c
 595 00e1 19       		.uleb128 0x19
 596 00e2 00       		.byte	0
 597 00e3 00       		.byte	0
 598 00e4 00       		.byte	0
 599              		.section	.debug_aranges,"",%progbits
 600 0000 24000000 		.4byte	0x24
 601 0004 0200     		.2byte	0x2
 602 0006 00000000 		.4byte	.Ldebug_info0
 603 000a 04       		.byte	0x4
 604 000b 00       		.byte	0
 605 000c 0000     		.2byte	0
 606 000e 0000     		.2byte	0
 607 0010 00000000 		.4byte	.LFB0
 608 0014 48000000 		.4byte	.LFE0-.LFB0
 609 0018 00000000 		.4byte	.LFB1
 610 001c 0C000000 		.4byte	.LFE1-.LFB1
 611 0020 00000000 		.4byte	0
 612 0024 00000000 		.4byte	0
 613              		.section	.debug_ranges,"",%progbits
 614              	.Ldebug_ranges0:
 615 0000 00000000 		.4byte	.LFB0
 616 0004 48000000 		.4byte	.LFE0
 617 0008 00000000 		.4byte	.LFB1
 618 000c 0C000000 		.4byte	.LFE1
 619 0010 00000000 		.4byte	0
 620 0014 00000000 		.4byte	0
 621              		.section	.debug_line,"",%progbits
 622              	.Ldebug_line0:
 623 0000 9F000000 		.section	.debug_str,"MS",%progbits,1
 623      02006800 
 623      00000201 
 623      FB0E0D00 
 623      01010101 
 624              	.LASF38:
 625 0000 55534246 		.ascii	"USBFS_1_EP\000"
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 25


 625      535F315F 
 625      455000
 626              	.LASF35:
 627 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 627      43313120 
 627      352E342E 
 627      31203230 
 627      31363036 
 628 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 628      20726576 
 628      6973696F 
 628      6E203233 
 628      37373135 
 629 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 629      66756E63 
 629      74696F6E 
 629      2D736563 
 629      74696F6E 
 630              	.LASF29:
 631 0099 65704372 		.ascii	"epCr0\000"
 631      3000
 632              	.LASF11:
 633 009f 666C6F61 		.ascii	"float\000"
 633      7400
 634              	.LASF3:
 635 00a5 73686F72 		.ascii	"short unsigned int\000"
 635      7420756E 
 635      7369676E 
 635      65642069 
 635      6E7400
 636              	.LASF36:
 637 00b8 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_1_episr.c\000"
 637      72617465 
 637      645F536F 
 637      75726365 
 637      5C50536F 
 638              	.LASF34:
 639 00df 55534246 		.ascii	"USBFS_1_BUS_RESET_ISR\000"
 639      535F315F 
 639      4255535F 
 639      52455345 
 639      545F4953 
 640              	.LASF27:
 641 00f5 6570436E 		.ascii	"epCnt0\000"
 641      743000
 642              	.LASF28:
 643 00fc 6570436E 		.ascii	"epCnt1\000"
 643      743100
 644              	.LASF20:
 645 0103 6570546F 		.ascii	"epToggle\000"
 645      67676C65 
 645      00
 646              	.LASF1:
 647 010c 756E7369 		.ascii	"unsigned char\000"
 647      676E6564 
 647      20636861 
 647      7200
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 26


 648              	.LASF14:
 649 011a 72656738 		.ascii	"reg8\000"
 649      00
 650              	.LASF5:
 651 011f 6C6F6E67 		.ascii	"long unsigned int\000"
 651      20756E73 
 651      69676E65 
 651      6420696E 
 651      7400
 652              	.LASF21:
 653 0131 61646472 		.ascii	"addr\000"
 653      00
 654              	.LASF31:
 655 0136 73696545 		.ascii	"sieEp\000"
 655      7000
 656              	.LASF26:
 657 013c 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 657      4246535F 
 657      315F4550 
 657      5F43544C 
 657      5F424C4F 
 658              	.LASF12:
 659 0153 646F7562 		.ascii	"double\000"
 659      6C6500
 660              	.LASF17:
 661 015a 61747472 		.ascii	"attrib\000"
 661      696200
 662              	.LASF30:
 663 0161 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 663      535F315F 
 663      7369655F 
 663      65705F73 
 663      74727563 
 664              	.LASF10:
 665 0177 75696E74 		.ascii	"uint16\000"
 665      313600
 666              	.LASF18:
 667 017e 61706945 		.ascii	"apiEpState\000"
 667      70537461 
 667      746500
 668              	.LASF37:
 669 0189 433A5C55 		.ascii	"C:\\Users\\gerwi\\OneDrive\\Documenten\\PSoC Creato"
 669      73657273 
 669      5C676572 
 669      77695C4F 
 669      6E654472 
 670 01b7 725C4144 		.ascii	"r\\ADC_SAR_Seq_Example01\\ADC_DMA_UART.cydsn\000"
 670      435F5341 
 670      525F5365 
 670      715F4578 
 670      616D706C 
 671              	.LASF8:
 672 01e2 756E7369 		.ascii	"unsigned int\000"
 672      676E6564 
 672      20696E74 
 672      00
 673              	.LASF33:
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 27


 674 01ef 55534246 		.ascii	"USBFS_1_EP_1_ISR\000"
 674      535F315F 
 674      45505F31 
 674      5F495352 
 674      00
 675              	.LASF7:
 676 0200 6C6F6E67 		.ascii	"long long unsigned int\000"
 676      206C6F6E 
 676      6720756E 
 676      7369676E 
 676      65642069 
 677              	.LASF19:
 678 0217 68774570 		.ascii	"hwEpState\000"
 678      53746174 
 678      6500
 679              	.LASF16:
 680 0221 73697A65 		.ascii	"sizetype\000"
 680      74797065 
 680      00
 681              	.LASF22:
 682 022a 65704D6F 		.ascii	"epMode\000"
 682      646500
 683              	.LASF6:
 684 0231 6C6F6E67 		.ascii	"long long int\000"
 684      206C6F6E 
 684      6720696E 
 684      7400
 685              	.LASF13:
 686 023f 63686172 		.ascii	"char\000"
 686      00
 687              	.LASF24:
 688 0244 62756666 		.ascii	"bufferSize\000"
 688      65725369 
 688      7A6500
 689              	.LASF2:
 690 024f 73686F72 		.ascii	"short int\000"
 690      7420696E 
 690      7400
 691              	.LASF9:
 692 0259 75696E74 		.ascii	"uint8\000"
 692      3800
 693              	.LASF25:
 694 025f 696E7465 		.ascii	"interface\000"
 694      72666163 
 694      6500
 695              	.LASF4:
 696 0269 6C6F6E67 		.ascii	"long int\000"
 696      20696E74 
 696      00
 697              	.LASF23:
 698 0272 62756666 		.ascii	"buffOffset\000"
 698      4F666673 
 698      657400
 699              	.LASF15:
 700 027d 6C6F6E67 		.ascii	"long double\000"
 700      20646F75 
 700      626C6500 
ARM GAS  C:\Users\gerwi\AppData\Local\Temp\cchH7jki.s 			page 28


 701              	.LASF0:
 702 0289 7369676E 		.ascii	"signed char\000"
 702      65642063 
 702      68617200 
 703              	.LASF32:
 704 0295 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 704      535F315F 
 704      7369655F 
 704      6570735F 
 704      73747275 
 705              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
